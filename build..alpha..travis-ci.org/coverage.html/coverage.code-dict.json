{"/home/travis/build/npmtest/node-npmtest-wechat-api/test.js":"/* istanbul instrument in package npmtest_wechat_api */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-wechat-api/lib.npmtest_wechat_api.js":"/* istanbul instrument in package npmtest_wechat_api */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_wechat_api = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_wechat_api = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-wechat-api/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-wechat-api && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_wechat_api */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_wechat_api\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_wechat_api.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_wechat_api.rollup.js'] =\n            local.assetsDict['/assets.npmtest_wechat_api.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_wechat_api.__dirname + '/lib.npmtest_wechat_api.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/index.js":"'use strict';\n\nvar API = require('./lib/api_common');\n// 接口调用频次限制\nAPI.mixin(require('./lib/api_quota'));\n// 自定义菜单接口\nAPI.mixin(require('./lib/api_menu'));\n// 个性化菜单接口\nAPI.mixin(require('./lib/api_menu_custom'));\n// 分组管理\nAPI.mixin(require('./lib/api_group'));\n// 标签管理\nAPI.mixin(require('./lib/api_tag'));\n// 用户信息\nAPI.mixin(require('./lib/api_user'));\n// 二维码\nAPI.mixin(require('./lib/api_qrcode'));\n// 媒体管理（上传、下载）\nAPI.mixin(require('./lib/api_media'));\n// 永久素材管理接口\nAPI.mixin(require('./lib/api_material'));\n// 客服消息\nAPI.mixin(require('./lib/api_message'));\n// 模板消息\nAPI.mixin(require('./lib/api_template'));\n// 获取客服聊天记录\nAPI.mixin(require('./lib/api_custom_service'));\n// 高级群发接口\nAPI.mixin(require('./lib/api_mass_send'));\n// 微信小店商品管理接口\nAPI.mixin(require('./lib/api_shop_goods'));\n// 微信小店库存管理接口\nAPI.mixin(require('./lib/api_shop_stock'));\n// 微信小店邮费模版管理接口\nAPI.mixin(require('./lib/api_shop_express'));\n// 微信小店分组管理接口\nAPI.mixin(require('./lib/api_shop_group'));\n// 微信小店货架管理接口\nAPI.mixin(require('./lib/api_shop_shelf'));\n// 微信小店订单管理接口\nAPI.mixin(require('./lib/api_shop_order'));\n// 微信小店功能管理接口\nAPI.mixin(require('./lib/api_shop_common'));\n// 支付接口\nAPI.mixin(require('./lib/api_payment'));\n// 用户维权系统接口\nAPI.mixin(require('./lib/api_feedback'));\n// 短网址接口\nAPI.mixin(require('./lib/api_url'));\n// 语义查询接口\nAPI.mixin(require('./lib/api_semantic'));\n// 获取微信服务器IP地址\nAPI.mixin(require('./lib/api_ip'));\n// 图文消息数据分析接口\nAPI.mixin(require('./lib/api_datacube'));\n// js sdk接口\nAPI.mixin(require('./lib/api_js'));\n// 卡券接口\nAPI.mixin(require('./lib/api_card'));\n// 设备接口\nAPI.mixin(require('./lib/api_device'));\n// 摇一摇周边接口\nAPI.mixin(require('./lib/api_shakearound'));\n// 门店管理接口\nAPI.mixin(require('./lib/api_poi'));\nmodule.exports = API;\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_common.js":"'use strict';\n\n// 本文件用于wechat API，基础文件，主要用于Token的处理和mixin机制\nvar urllib = require('urllib');\nvar util = require('./util');\nvar extend = require('util')._extend;\nvar wrapper = util.wrapper;\n\nvar AccessToken = function (accessToken, expireTime) {\n  if (!(this instanceof AccessToken)) {\n    return new AccessToken(accessToken, expireTime);\n  }\n  this.accessToken = accessToken;\n  this.expireTime = expireTime;\n};\n\n/*!\n * 检查AccessToken是否有效，检查规则为当前时间和过期时间进行对比\n *\n * Examples:\n * ```\n * token.isValid();\n * ```\n */\nAccessToken.prototype.isValid = function () {\n  return !!this.accessToken && (new Date().getTime()) < this.expireTime;\n};\n\n/**\n * 根据appid和appsecret创建API的构造函数\n * 如需跨进程跨机器进行操作Wechat API（依赖access token），access token需要进行全局维护\n * 使用策略如下：\n *\n * 1. 调用用户传入的获取token的异步方法，获得token之后使用\n * 2. 使用appid/appsecret获取token。并调用用户传入的保存token方法保存\n *\n * Tips:\n *\n * - 如果跨机器运行wechat模块，需要注意同步机器之间的系统时间。\n *\n * Examples:\n * ```\n * var API = require('wechat-api');\n * var api = new API('appid', 'secret');\n * ```\n * 以上即可满足单进程使用。\n * 当多进程时，token需要全局维护，以下为保存token的接口。\n * ```\n * var api = new API('appid', 'secret', function (callback) {\n *   // 传入一个获取全局token的方法\n *   fs.readFile('access_token.txt', 'utf8', function (err, txt) {\n *     if (err) {return callback(err);}\n *     callback(null, JSON.parse(txt));\n *   });\n * }, function (token, callback) {\n *   // 请将token存储到全局，跨进程、跨机器级别的全局，比如写到数据库、redis等\n *   // 这样才能在cluster模式及多机情况下使用，以下为写入到文件的示例\n *   fs.writeFile('access_token.txt', JSON.stringify(token), callback);\n * });\n * ```\n * @param {String} appid 在公众平台上申请得到的appid\n * @param {String} appsecret 在公众平台上申请得到的app secret\n * @param {Function} getToken 可选的。获取全局token对象的方法，多进程模式部署时需在意\n * @param {Function} saveToken 可选的。保存全局token对象的方法，多进程模式部署时需在意\n */\nvar API = function (appid, appsecret, getToken, saveToken) {\n  this.appid = appid;\n  this.appsecret = appsecret;\n  this.getToken = getToken || function (callback) {\n    callback(null, this.store);\n  };\n  this.saveToken = saveToken || function (token, callback) {\n    this.store = token;\n    if (process.env.NODE_ENV === 'production') {\n      console.warn('Don\\'t save token in memory, when cluster or multi-computer!');\n    }\n    callback(null);\n  };\n  this.endpoint = 'https://api.weixin.qq.com';\n  this.mpPrefix = 'https://mp.weixin.qq.com/cgi-bin/';\n  this.fileServerPrefix = 'http://file.api.weixin.qq.com/cgi-bin/';\n  this.defaults = {};\n  // set default js ticket handle\n  this.registerTicketHandle();\n};\n\n/**\n * 用于设置接入点\n *\n * - 通用域名(api.weixin.qq.com)，使用该域名将访问官方指定就近的接入点；\n * - 上海域名(sh.api.weixin.qq.com)，使用该域名将访问上海的接入点；\n * - 深圳域名(sz.api.weixin.qq.com)，使用该域名将访问深圳的接入点；\n * - 香港域名(hk.api.weixin.qq.com)，使用该域名将访问香港的接入点。\n *\n * Examples:\n * ```\n * api.setEndpoint('api.weixin.qq.com');\n * ```\n * @param {String} domain 域名，默认为api.weixin.qq.com\n */\nAPI.prototype.setEndpoint = function (domain) {\n  this.endpoint = 'https://' + domain;\n};\n\n/**\n * 用于设置urllib的默认options\n *\n * Examples:\n * ```\n * api.setOpts({timeout: 15000});\n * ```\n * @param {Object} opts 默认选项\n */\nAPI.prototype.setOpts = function (opts) {\n  this.defaults = opts;\n};\n\n/**\n * 设置urllib的hook\n *\n * Examples:\n * ```\n * api.setHook(function (options) {\n *   // options\n * });\n * ```\n * @param {Function} beforeRequest 需要封装的方法\n */\nAPI.prototype.request = function (url, opts, callback) {\n  var options = {};\n  extend(options, this.defaults);\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  for (var key in opts) {\n    if (key !== 'headers') {\n      options[key] = opts[key];\n    } else {\n      if (opts.headers) {\n        options.headers = options.headers || {};\n        extend(options.headers, opts.headers);\n      }\n    }\n  }\n  urllib.request(url, options, callback);\n};\n\n/*!\n * 根据创建API时传入的appid和appsecret获取access token\n * 进行后续所有API调用时，需要先获取access token\n * 详细请看：<http://mp.weixin.qq.com/wiki/11/0e4b294685f817b95cbed85ba5e82b8f.html>\n *\n * 应用开发者无需直接调用本API。\n *\n * Examples:\n * ```\n * api.getAccessToken(callback);\n * ```\n * Callback:\n *\n * - `err`, 获取access token出现异常时的异常对象\n * - `result`, 成功时得到的响应结果\n *\n * Result:\n * ```\n * {\"access_token\": \"ACCESS_TOKEN\",\"expires_in\": 7200}\n * ```\n * @param {Function} callback 回调函数\n */\nAPI.prototype.getAccessToken = function (callback) {\n  var that = this;\n  var url = this.endpoint + '/cgi-bin/token?grant_type=client_credential&appid=' + this.appid + '&secret=' + this.appsecret;\n  this.request(url, {dataType: 'json'}, wrapper(function (err, data) {\n    if (err) {\n      return callback(err);\n    }\n    // 过期时间，因网络延迟等，将实际过期时间提前10秒，以防止临界点\n    var expireTime = (new Date().getTime()) + (data.expires_in - 10) * 1000;\n    var token = AccessToken(data.access_token, expireTime);\n    that.saveToken(token, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      callback(err, token);\n    });\n  }));\n  return this;\n};\n\n/*!\n * 需要access token的接口调用如果采用preRequest进行封装后，就可以直接调用。\n * 无需依赖getAccessToken为前置调用。\n * 应用开发者无需直接调用此API。\n *\n * Examples:\n * ```\n * api.preRequest(method, arguments);\n * ```\n * @param {Function} method 需要封装的方法\n * @param {Array} args 方法需要的参数\n */\nAPI.prototype.preRequest = function (method, args, retryed) {\n  var that = this;\n  var callback = args[args.length - 1];\n  // 调用用户传入的获取token的异步方法，获得token之后使用（并缓存它）。\n  that.getToken(function (err, token) {\n    if (err) {\n      return callback(err);\n    }\n    var accessToken;\n    // 有token并且token有效直接调用\n    if (token && (accessToken = AccessToken(token.accessToken, token.expireTime)).isValid()) {\n      // 暂时保存token\n      that.token = accessToken;\n      if (!retryed) {\n        var retryHandle = function (err, data, res) {\n          // 40001 重试\n          if (data && data.errcode && data.errcode === 40001) {\n            return that.preRequest(method, args, true);\n          }\n          callback(err, data, res);\n        };\n        // 替换callback\n        var newargs = Array.prototype.slice.call(args, 0, -1);\n        newargs.push(retryHandle);\n        method.apply(that, newargs);\n      } else {\n        method.apply(that, args);\n      }\n    } else {\n      // 使用appid/appsecret获取token\n      that.getAccessToken(function (err, token) {\n        // 如遇错误，通过回调函数传出\n        if (err) {\n          return callback(err);\n        }\n        // 暂时保存token\n        that.token = token;\n        method.apply(that, args);\n      });\n    }\n  });\n};\n\n/**\n * 获取最新的token\n *\n * Examples:\n * ```\n * api.getLatestToken(callback);\n * ```\n * Callback:\n *\n * - `err`, 获取access token出现异常时的异常对象\n * - `token`, 获取的token\n *\n * @param {Function} method 需要封装的方法\n * @param {Array} args 方法需要的参数\n */\nAPI.prototype.getLatestToken = function (callback) {\n  var that = this;\n  // 调用用户传入的获取token的异步方法，获得token之后使用（并缓存它）。\n  that.getToken(function (err, token) {\n    if (err) {\n      return callback(err);\n    }\n    var accessToken;\n    // 有token并且token有效直接调用\n    if (token && (accessToken = AccessToken(token.accessToken, token.expireTime)).isValid()) {\n      return callback(null, accessToken);\n    }\n    // 使用appid/appsecret获取token\n    that.getAccessToken(callback);\n  });\n};\n\n/**\n * 用于支持对象合并。将对象合并到API.prototype上，使得能够支持扩展\n * Examples:\n * ```\n * // 媒体管理（上传、下载）\n * API.mixin(require('./lib/api_media'));\n * ```\n * @param {Object} obj 要合并的对象\n */\nAPI.mixin = function (obj) {\n  for (var key in obj) {\n    if (API.prototype.hasOwnProperty(key)) {\n      throw new Error('Don\\'t allow override existed prototype method. method: '+ key);\n    }\n    API.prototype[key] = obj[key];\n  }\n};\n\n/**\n * 用于扩展API.\n * 作用是：当微信的官方 API 添加新功能，而wechat-api没有来得及升级时，用这个方法快速添加此功能。\n * 当 api 升级后应该用 API 内提供的方法。\n * Examples:\n * ```\n * // 为 API 添加一个 createQr 方法。\n * API.ext(\"createQr\", \"https://api.weixin.qq.com/card/qrcode/create\");\n * ```\n * Usage:\n * ```\n * // 调用这个 createQr 方法。\n *  api.createQr({'card_id': ’dkjeuDfsfeu3242w3dnjlq23i'}, callback);\n * ```\n * @param {String} functionName 用户调用的方法名\n * @param {String} apiUrl 此 API 的 url 地址\n * @param {Bool} override 如果填写 true 则覆盖原来 api 已有的方法， false 或不传，则抛错。\n */\nAPI.patch = function (functionName, apiUrl, override) {\n  if (typeof apiUrl !== 'string') {\n    throw new Error('The second argument expect a type of string as the request url of wechat');\n  }\n\n  if (typeof functionName !== 'string') {\n    throw new Error('The first argument expect a type of string as the name of new function');\n  }\n\n  if (API.prototype[functionName] || API.prototype['_' + functionName] ) {\n    if (override !== true) {\n      throw new Error('wechat-api already has a prototype named ['+ functionName + '], use \"true\" as third param to override it or change your new function name.');\n    } else {\n      console.warn('wechat-api already has a prototype named ['+ functionName + '], will override the orignal one.');\n    }\n  }\n\n  util.make(API.prototype, functionName, function (info, callback) {\n    var hasMark = apiUrl.indexOf('?') >= 0;\n    var url = apiUrl + (hasMark ? '&access_token=': '?access_token=') + this.token.accessToken;\n    this.request(url, util.postJSON(info), wrapper(callback));\n  });\n};\n\nAPI.AccessToken = AccessToken;\n\nmodule.exports = API;\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/util.js":"'use strict';\n\n/*!\n * 对返回结果的一层封装，如果遇见微信返回的错误，将返回一个错误\n * 参见：http://mp.weixin.qq.com/wiki/17/fa4e1434e57290788bde25603fa2fcbd.html\n */\nexports.wrapper = function (callback) {\n  return function (err, data, res) {\n    callback = callback || function () {};\n    if (err) {\n      err.name = 'WeChatAPI' + err.name;\n      return callback(err, data, res);\n    }\n    if (data && data.errcode) {\n      err = new Error(data.errmsg);\n      err.name = 'WeChatAPIError';\n      err.code = data.errcode;\n      return callback(err, data, res);\n    }\n    callback(null, data, res);\n  };\n};\n\n/*!\n * 对提交参数一层封装，当POST JSON，并且结果也为JSON时使用\n */\nexports.postJSON = function (data) {\n  return {\n    dataType: 'json',\n    type: 'POST',\n    data: data,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n};\n\nexports.make = function (host, name, fn) {\n  host[name] = function () {\n    this.preRequest(this['_' + name], arguments);\n  };\n  host['_' + name] = fn;\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_quota.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\nvar make = util.make;\n\n/**\n * 用于清零调用频次限制\n * @name clearQuota\n * @param {String} appid 应用id\n * @param {Function} callback 回调函数\n */\nmake(exports, 'clearQuota', function (appid, callback) {\n  var data = {\n    appid: appid\n  };\n  // https://api.weixin.qq.com/cgi-bin/clear_quota?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/cgi-bin/clear_quota?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n});\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_menu.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 创建自定义菜单\n * 详细请看：http://mp.weixin.qq.com/wiki/13/43de8269be54a0a6f64413e4dfa94f39.html\n *\n * Menu:\n * ```\n * {\n *  \"button\":[\n *    {\n *      \"type\":\"click\",\n *      \"name\":\"今日歌曲\",\n *      \"key\":\"V1001_TODAY_MUSIC\"\n *    },\n *    {\n *      \"name\":\"菜单\",\n *      \"sub_button\":[\n *        {\n *          \"type\":\"view\",\n *          \"name\":\"搜索\",\n *          \"url\":\"http://www.soso.com/\"\n *        },\n *        {\n *          \"type\":\"click\",\n *          \"name\":\"赞一下我们\",\n *          \"key\":\"V1001_GOOD\"\n *        }]\n *      }]\n *    }\n *  ]\n * }\n * ```\n * Examples:\n * ```\n * api.createMenu(menu, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\":0,\"errmsg\":\"ok\"}\n * ```\n * @param {Object} menu 菜单对象\n * @param {Function} callback 回调函数\n */\nexports.createMenu = function (menu, callback) {\n  this.preRequest(this._createMenu, arguments);\n};\n\n/*!\n * 创建自定义菜单的未封装版本\n */\nexports._createMenu = function (menu, callback) {\n  var url = this.endpoint + '/cgi-bin/menu/create?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(menu), wrapper(callback));\n};\n\n/**\n * 获取菜单\n * 详细请看：<http://mp.weixin.qq.com/wiki/5/f287d1a5b78a35a8884326312ac3e4ed.html>\n *\n * Examples:\n * ```\n * api.getMenu(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result: （注意:如果有个性化菜单被设置,返回的结果会具有更多信息,请参考微信文档)\n * ```\n * // 结果示例\n * {\n *  \"menu\": {\n *    \"button\":[\n *      {\"type\":\"click\",\"name\":\"今日歌曲\",\"key\":\"V1001_TODAY_MUSIC\",\"sub_button\":[]},\n *      {\"type\":\"click\",\"name\":\"歌手简介\",\"key\":\"V1001_TODAY_SINGER\",\"sub_button\":[]},\n *      {\"name\":\"菜单\",\"sub_button\":[\n *        {\"type\":\"view\",\"name\":\"搜索\",\"url\":\"http://www.soso.com/\",\"sub_button\":[]},\n *        {\"type\":\"view\",\"name\":\"视频\",\"url\":\"http://v.qq.com/\",\"sub_button\":[]},\n *        {\"type\":\"click\",\"name\":\"赞一下我们\",\"key\":\"V1001_GOOD\",\"sub_button\":[]}]\n *      }\n *    ]\n *  }\n * }\n * ```\n * @param {Function} callback 回调函数\n */\nexports.getMenu = function (callback) {\n  this.preRequest(this._getMenu, arguments);\n};\n\n/*!\n * 获取自定义菜单的未封装版本\n */\nexports._getMenu = function (callback) {\n  var url = this.endpoint + '/cgi-bin/menu/get?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n};\n\n/**\n * 删除自定义菜单\n * 详细请看：<http://mp.weixin.qq.com/wiki/16/8ed41ba931e4845844ad6d1eeb8060c8.html>\n * Examples:\n * ```\n * api.removeMenu(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\":0,\"errmsg\":\"ok\"}\n * ```\n * @param {Function} callback 回调函数\n */\nexports.removeMenu = function (callback) {\n  this.preRequest(this._removeMenu, arguments);\n};\n\n/*!\n * 删除自定义菜单的未封装版本\n */\nexports._removeMenu = function (callback) {\n  var url = this.endpoint + '/cgi-bin/menu/delete?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n};\n\n\n/**\n * 获取自定义菜单配置\n * 详细请看：<http://mp.weixin.qq.com/wiki/17/4dc4b0514fdad7a5fbbd477aa9aab5ed.html>\n * Examples:\n * ```\n * api.getMenuConfig(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\":0,\"errmsg\":\"ok\"}\n * ```\n * @param {Function} callback 回调函数\n */\nexports.getMenuConfig = function (callback) {\n  this.preRequest(this._getMenuConfig, arguments);\n};\n\n/*!\n * 获取自定义菜单配置的未封装版本\n */\nexports._getMenuConfig = function (callback) {\n  var url = this.endpoint + '/cgi-bin/get_current_selfmenu_info?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_menu_custom.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 创建个性化菜单\n * 详细请看：<http://mp.weixin.qq.com/wiki/0/c48ccd12b69ae023159b4bfaa7c39c20.html>\n *\n * Menu:\n * ```\n * {\n *  \"button\":[\n *    {\n *      \"type\":\"click\",\n *      \"name\":\"今日歌曲\",\n *      \"key\":\"V1001_TODAY_MUSIC\"\n *    },\n *    {\n *      \"name\":\"菜单\",\n *      \"sub_button\":[\n *        {\n *          \"type\":\"view\",\n *          \"name\":\"搜索\",\n *          \"url\":\"http://www.soso.com/\"\n *        },\n *        {\n *          \"type\":\"click\",\n *          \"name\":\"赞一下我们\",\n *          \"key\":\"V1001_GOOD\"\n *        }]\n *      }]\n *    }\n *  ],\n *  \"matchrule\":{\n *     \"group_id\":\"2\",\n *     \"sex\":\"1\", // 男1,女2\n *     \"country\":\"中国\",\n *     \"province\":\"广东\",\n *     \"city\":\"广州\",\n *     \"client_platform_type\":\"2\" // IOS(1), Android(2),Others(3)\n *   }\n * }\n * ```\n * Examples:\n * ```\n * api.createCustomMenu(menu, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * { menuid: 401550287 }\n *\n * ```\n * @param {Object} menu 菜单对象\n * @param {Function} callback 回调函数\n */\nexports.createCustomMenu = function (menu, callback) {\n  this.preRequest(this._createCustomMenu, arguments);\n};\n\n/*!\n * 创建个性化菜单的未封装版本\n */\nexports._createCustomMenu = function (menu, callback) {\n  var url = this.endpoint + '/cgi-bin/menu/addconditional?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(menu), wrapper(callback));\n};\n\n\n/**\n * 删除个性化菜单\n * 详细请看：<http://mp.weixin.qq.com/wiki/0/c48ccd12b69ae023159b4bfaa7c39c20.html>\n *\n * Examples:\n * ```\n * api.removeCustomMenu(menu_id,callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\":0,\"errmsg\":\"ok\"}\n * ```\n *\n * @param {String} menu_id, 可以通过自定义菜单查询接口获取\n * @param {Function} callback 回调函数\n */\nexports.removeCustomMenu = function (menu_id,callback) {\n  this.preRequest(this._removeCustomMenu, arguments);\n};\n\n/*!\n * 删除个性化菜单的未封装版本\n */\nexports._removeCustomMenu = function (menu_id,callback) {\n  var url = this.endpoint + '/cgi-bin/menu/delconditional?access_token=' + this.token.accessToken;\n  this.request(url, postJSON({\n    'menuid' : menu_id\n  }), wrapper(callback));\n};\n\n\n\n/**\n * 测试个性化菜单\n * 详细请看：<http://mp.weixin.qq.com/wiki/0/c48ccd12b69ae023159b4bfaa7c39c20.html>\n *\n * Examples:\n * ```\n * api.testCustomMenu(user_id,callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *    \"button\": [\n *       {\n *           \"type\": \"view\",\n *           \"name\": \"tx\",\n *           \"url\": \"http://www.qq.com/\",\n *           \"sub_button\": [ ]\n *       },\n *       {\n *           \"type\": \"view\",\n *           \"name\": \"tx\",\n *           \"url\": \"http://www.qq.com/\",\n *           \"sub_button\": [ ]\n *       },\n *       {\n *           \"type\": \"view\",\n *           \"name\": \"tx\",\n *           \"url\": \"http://www.qq.com/\",\n *           \"sub_button\": [ ]\n *       }\n *   ]\n * }\n * ```\n *\n * @param {String} user_id, 可以是粉丝的OpenID，也可以是粉丝的微信号。\n * @param {Function} callback 回调函数\n */\nexports.testCustomMenu = function (user_id, callback) {\n  this.preRequest(this._testCustomMenu, arguments);\n};\n\n\n/*!\n * 测试个性化菜单的未封装版本\n */\nexports._testCustomMenu = function (user_id,callback) {\n  var url = this.endpoint + '/cgi-bin/menu/trymatch?access_token=' + this.token.accessToken;\n  this.request(url, postJSON({\n    'user_id' : user_id\n  }), wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_group.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\nvar make = util.make;\n\n/**\n * 获取分组列表\n * 详情请见：<http://mp.weixin.qq.com/wiki/0/56d992c605a97245eb7e617854b169fc.html>\n * Examples:\n * ```\n * api.getGroups(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"groups\": [\n *    {\"id\": 0, \"name\": \"未分组\", \"count\": 72596},\n *    {\"id\": 1, \"name\": \"黑名单\", \"count\": 36}\n *  ]\n * }\n * ```\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getGroups', function (callback) {\n  // https://api.weixin.qq.com/cgi-bin/groups/get?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/cgi-bin/groups/get?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n\n/**\n * 查询用户在哪个分组\n * 详情请见：<http://mp.weixin.qq.com/wiki/0/56d992c605a97245eb7e617854b169fc.html>\n * Examples:\n * ```\n * api.getWhichGroup(openid, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"groupid\": 102\n * }\n * ```\n * @param {String} openid Open ID\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getWhichGroup', function (openid, callback) {\n  // https://api.weixin.qq.com/cgi-bin/groups/getid?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/cgi-bin/groups/getid?access_token=' + this.token.accessToken;\n  var data = {\n    'openid': openid\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 创建分组\n * 详情请见：<http://mp.weixin.qq.com/wiki/0/56d992c605a97245eb7e617854b169fc.html>\n * Examples:\n * ```\n * api.createGroup('groupname', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"group\": {\"id\": 107, \"name\": \"test\"}}\n * ```\n * @param {String} name 分组名字\n * @param {Function} callback 回调函数\n */\nmake(exports, 'createGroup', function (name, callback) {\n  // https://api.weixin.qq.com/cgi-bin/groups/create?access_token=ACCESS_TOKEN\n  // POST数据格式：json\n  // POST数据例子：{\"group\":{\"name\":\"test\"}}\n  var url = this.endpoint + '/cgi-bin/groups/create?access_token=' + this.token.accessToken;\n  var data = {\n    'group': {'name': name}\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 更新分组名字\n * 详情请见：<http://mp.weixin.qq.com/wiki/0/56d992c605a97245eb7e617854b169fc.html>\n * Examples:\n * ```\n * api.updateGroup(107, 'new groupname', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\": 0, \"errmsg\": \"ok\"}\n * ```\n * @param {Number} id 分组ID\n * @param {String} name 新的分组名字\n * @param {Function} callback 回调函数\n */\nmake(exports, 'updateGroup', function (id, name, callback) {\n  // http请求方式: POST（请使用https协议）\n  // https://api.weixin.qq.com/cgi-bin/groups/update?access_token=ACCESS_TOKEN\n  // POST数据格式：json\n  // POST数据例子：{\"group\":{\"id\":108,\"name\":\"test2_modify2\"}}\n  var url = this.endpoint + '/cgi-bin/groups/update?access_token=' + this.token.accessToken;\n  var data = {\n    'group': {'id': id, 'name': name}\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 移动用户进分组\n * 详情请见：<http://mp.weixin.qq.com/wiki/0/56d992c605a97245eb7e617854b169fc.html>\n * Examples:\n * ```\n * api.moveUserToGroup(openid, groupId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\": 0, \"errmsg\": \"ok\"}\n * ```\n * @param {String} openid 用户的openid\n * @param {Number} groupId 分组ID\n * @param {Function} callback 回调函数\n */\nmake(exports, 'moveUserToGroup', function (openid, groupId, callback) {\n  // http请求方式: POST（请使用https协议）\n  // https://api.weixin.qq.com/cgi-bin/groups/members/update?access_token=ACCESS_TOKEN\n  // POST数据格式：json\n  // POST数据例子：{\"openid\":\"oDF3iYx0ro3_7jD4HFRDfrjdCM58\",\"to_groupid\":108}\n  var url = this.endpoint + '/cgi-bin/groups/members/update?access_token=' + this.token.accessToken;\n  var data = {\n    'openid': openid,\n    'to_groupid': groupId\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 删除分组\n * 详情请见：<http://mp.weixin.qq.com/wiki/0/56d992c605a97245eb7e617854b169fc.html>\n * Examples:\n * ```\n * api.removeGroup(groupId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\": 0, \"errmsg\": \"ok\"}\n * ```\n * @param {Number} groupId 分组ID\n * @param {Function} callback 回调函数\n */\nmake(exports, 'removeGroup', function (groupId, callback) {\n  var url = this.endpoint + '/cgi-bin/groups/delete?access_token=' + this.token.accessToken;\n  var data = {\n    'group': { id: groupId}\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_tag.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n/**\n * 创建标签\n * 详情请见：<http://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140837&token=&lang=zh_CN>\n * Examples:\n * ```\n * api.createTag(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"tag\": [\n *    \"id\": 134, // 标签id\n *    \"name\": \"广东\"\n *  ]\n * }\n * ```\n * @param {String} name tag name\n * @param {Function} callback 回调函数\n */\nexports.createTag = function (name, callback) {\n  this.preRequest(this._createTag, arguments);\n};\n\n/*!\n * 创建标签的未封装版本\n */\nexports._createTag = function (name, callback) {\n  // https://api.weixin.qq.com/cgi-bin/tags/create?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/cgi-bin/tags/create?access_token=' + this.token.accessToken;\n  var data = {\n    'tag': {\n      'name': name\n    }\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 获取公众号已创建的标签\n * 详情请见：<http://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140837&token=&lang=zh_CN>\n * Examples:\n * ```\n * api.getTags(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"tags\":[{\n *    'id':1,\n *    'name': '黑名单',\n *    'count': 0  // 此标签下粉丝数\n *  },{\n *    'id':2,\n *    'name': '星标组',\n *    'count':0\n *  }]\n * }\n * ```\n * @param {String} openid Open ID\n * @param {Function} callback 回调函数\n */\nexports.getTags = function (callback) {\n  this.preRequest(this._getTags, arguments);\n};\n\n/*!\n * 获取公众号已创建的标签的未封装版本\n */\nexports._getTags = function (callback) {\n  // https://api.weixin.qq.com/cgi-bin/tags/get?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/cgi-bin/tags/get?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n};\n\n/**\n * 编辑标签\n * 详情请见：<http://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140837&token=&lang=zh_CN>\n * Examples:\n * ```\n * api.editTag(id, name, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\": 0, \"errmsg\": \"ok\"}}\n * ```\n * @param {Number} id 标签ID\n * @param {String} name 标签新名字\n * @param {Function} callback 回调函数\n */\nexports.editTag = function (id, name, callback) {\n  this.preRequest(this._editTag, arguments);\n};\n\n/*!\n * 编辑标签的未封装版本\n */\nexports._editTag = function (id, name, callback) {\n  // https://api.weixin.qq.com/cgi-bin/tags/update?access_token=ACCESS_TOKEN\n  // POST数据格式：json\n  // POST数据例子：{\"tag\":{\"id\":134, \"name\":\"test\"}}\n  var url = this.endpoint + '/cgi-bin/tags/update?access_token=' + this.token.accessToken;\n  var data = {\n    'tag': {\n      'id': id,\n      'name': name\n    }\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 删除标签\n * 详情请见：<http://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140837&token=&lang=zh_CN>\n * Examples:\n * ```\n * api.deleteTag(id, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\": 0, \"errmsg\": \"ok\"}\n * ```\n * @param {Number} id 标签ID\n * @param {Function} callback 回调函数\n */\nexports.deleteTag = function (id, callback) {\n  this.preRequest(this._deleteTag, arguments);\n};\n\n/*!\n * 删除标签的未封装版本\n */\nexports._deleteTag = function (id, callback) {\n  // http请求方式: POST（请使用https协议）\n  // https://api.weixin.qq.com/cgi-bin/tags/delete?access_token=ACCESS_TOKEN\n  // POST数据格式：json\n  // POST数据例子：{\"tag\":{\"id\":108}}\n  var url = this.endpoint + '/cgi-bin/tags/delete?access_token=' + this.token.accessToken;\n  var data = {\n    'tag': {'id': id}\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 获取标签下粉丝列表\n * 详情请见：<http://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140837&token=&lang=zh_CN>\n * Examples:\n * ```\n * api.getTagUsers(tagid, openid, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"count\": 2,\n *   \"data\":{\n *     \"openid\":[\n *       ...\n *     ]\n *   },\n *   \"next_openid\": \"...\"\n * }\n * ```\n * @param {Number} tagId 标签ID\n * @param {String} openid 分页起始openid\n * @param {Function} callback 回调函数\n */\nexports.getTagUsers = function (tagId, openid, callback) {\n  this.preRequest(this._getTagUsers, arguments);\n};\n\n/*!\n * 获取标签下粉丝列表的未封装版本\n */\nexports._getTagUsers = function (tagId, openid, callback) {\n  // http请求方式: POST（请使用https协议）\n  // https://api.weixin.qq.com/cgi-bin/user/tag/get?access_token=ACCESS_TOKEN\n  // POST数据格式：json\n  // POST数据例子：{\"tagid\":108, \"next_openid\":\"oDF3iYx0ro3_7jD4HFRDfrjdCM58\"}\n  var url = this.endpoint + '/cgi-bin/user/tag/get?access_token=' + this.token.accessToken;\n  var data = {\n    'tagid': tagId,\n    'next_openid': openid\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 批量为用户打标签\n * 详情请见：<http://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140837&token=&lang=zh_CN>\n * Examples:\n * ```\n * api.memberBatchtagging(tagId, openList, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\": 0, \"errmsg\": \"ok\"}\n * ```\n * @param {Number} tagId 标签ID\n * @param {Array} openList 用户openids\n * @param {Function} callback 回调函数\n */\nexports.membersBatchtagging = function (tagId, openList, callback) {\n  this.preRequest(this._membersBatchtagging, arguments);\n};\n\n/*!\n * 批量为用户打标签的未封装版本\n */\nexports._membersBatchtagging = function (tagId, openList, callback) {\n  // https://api.weixin.qq.com/cgi-bin/tags/members/batchtagging?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/cgi-bin/tags/members/batchtagging?access_token=' + this.token.accessToken;\n  var data = {\n    'openid_list':openList,\n    'tagid': tagId\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 批量为用户取消标签\n * 详情请见：<http://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140837&token=&lang=zh_CN>\n * Examples:\n * ```\n * api.memberBatchuntagging(tagId, openList, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\": 0, \"errmsg\": \"ok\"}\n * ```\n * @param {Number} tagId 标签ID\n * @param {Array} openList 用户openids\n * @param {Function} callback 回调函数\n */\nexports.membersBatchuntagging = function (tagId, openList, callback) {\n  this.preRequest(this._membersBatchuntagging, arguments);\n};\n\n/*!\n * 批量为用户取消标签的未封装版本\n */\nexports._membersBatchuntagging = function (tagId, openList, callback) {\n  // https://api.weixin.qq.com/cgi-bin/tags/members/batchuntagging?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/cgi-bin/tags/members/batchuntagging?access_token=' + this.token.accessToken;\n  var data = {\n    'openid_list':openList,\n    'tagid': tagId\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 获取用户身上的标签列表\n * 详情请见：<http://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140837&token=&lang=zh_CN>\n * Examples:\n * ```\n * api.getUserTags(openid, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"tagid_list\": [134, 2]}\n * ```\n * @param {openid} 用户openid\n * @param {Function} callback 回调函数\n */\nexports.getUserTags = function (openid, callback) {\n  this.preRequest(this._getUserTags, arguments);\n};\n\n/*!\n * 获取用户身上的标签列表的未封装版本\n */\nexports._getUserTags = function (openid, callback) {\n  // https://api.weixin.qq.com/cgi-bin/tags/getidlist?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/cgi-bin/tags/getidlist?access_token=' + this.token.accessToken;\n  var data = {\n    'openid':openid\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_user.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 获取用户基本信息。可以设置lang，其中zh_CN 简体，zh_TW 繁体，en 英语。默认为en\n * 详情请见：<http://mp.weixin.qq.com/wiki/14/bb5031008f1494a59c6f71fa0f319c66.html>\n * Examples:\n * ```\n * api.getUser(openid, callback);\n * api.getUser({openid: 'openid', lang: 'en'}, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"subscribe\": 1,\n *  \"openid\": \"o6_bmjrPTlm6_2sgVt7hMZOPfL2M\",\n *  \"nickname\": \"Band\",\n *  \"sex\": 1,\n *  \"language\": \"zh_CN\",\n *  \"city\": \"广州\",\n *  \"province\": \"广东\",\n *  \"country\": \"中国\",\n *  \"headimgurl\": \"http://wx.qlogo.cn/mmopen/g3MonUZtNHkdmzicIlibx6iaFqAc56vxLSUfpb6n5WKSYVY0ChQKkiaJSgQ1dZuTOgvLLrhJbERQQ4eMsv84eavHiaiceqxibJxCfHe/0\",\n *  \"subscribe_time\": 1382694957\n * }\n * ```\n * @param {String|Object} options 用户的openid。或者配置选项，包含openid和lang两个属性。\n * @param {Function} callback 回调函数\n */\nexports.getUser = function (options, callback) {\n  this.preRequest(this._getUser, arguments);\n};\n\n/*!\n * 获取用户基本信息的未封装版本\n */\nexports._getUser = function (options, callback) {\n  if (typeof options !== 'object') {\n    options = {\n      openid: options,\n      lang: 'en'\n    };\n  }\n  // https://api.weixin.qq.com/cgi-bin/user/info?access_token=ACCESS_TOKEN&openid=OPENID\n  var url = this.endpoint + '/cgi-bin/user/info?openid=' + options.openid + '&lang=' + options.lang + '&access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n};\n\n/**\n *  批量获取用户基本信息\n * Example:\n * ```\n * api.batchGetUser(['openid1', 'openid2'], callback)\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"user_info_list\": [{\n *     \"subscribe\": 1,\n *     \"openid\": \"otvxTs4dckWG7imySrJd6jSi0CWE\",\n *     \"nickname\": \"iWithery\",\n *     \"sex\": 1,\n *     \"language\": \"zh_CN\",\n *     \"city\": \"Jieyang\",\n *     \"province\": \"Guangdong\",\n *     \"country\": \"China\",\n *     \"headimgurl\": \"http://wx.qlogo.cn/mmopen/xbIQx1GRqdvyqkMMhEaGOX802l1CyqMJNgUzKP8MeAeHFicRDSnZH7FY4XB7p8XHXIf6uJA2SCunTPicGKezDC4saKISzRj3nz/0\",\n *     \"subscribe_time\": 1434093047,\n *     \"unionid\": \"oR5GjjgEhCMJFyzaVZdrxZ2zRRF4\",\n *     \"remark\": \"\",\n *     \"groupid\": 0\n *   }, {\n *     \"subscribe\": 0,\n *     \"openid\": \"otvxTs_JZ6SEiP0imdhpi50fuSZg\",\n *     \"unionid\": \"oR5GjjjrbqBZbrnPwwmSxFukE41U\",\n *   }]\n * }\n * ```\n * @param {Array} openids 用户的openid数组。\n * @param {Function} callback 回调函数\n */\nexports.batchGetUsers = function (openids, callback) {\n  this.preRequest(this._batchGetUsers, arguments);\n};\n\n/*!\n * 批量获取用户基本信息的未封装版本\n */\nexports._batchGetUsers = function (openids, callback) {\n  var url = this.endpoint + '/cgi-bin/user/info/batchget?access_token=' + this.token.accessToken;\n  var data = {};\n  data.user_list = openids.map(function (openid) {\n    return {openid: openid, language: 'zh-CN'};\n  });\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 获取关注者列表\n * 详细细节 http://mp.weixin.qq.com/wiki/0/d0e07720fc711c02a3eab6ec33054804.html\n * Examples:\n * ```\n * api.getFollowers(callback);\n * // or\n * api.getFollowers(nextOpenid, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"total\":2,\n *  \"count\":2,\n *  \"data\":{\n *    \"openid\":[\"\",\"OPENID1\",\"OPENID2\"]\n *  },\n *  \"next_openid\":\"NEXT_OPENID\"\n * }\n * ```\n * @param {String} nextOpenid 调用一次之后，传递回来的nextOpenid。第一次获取时可不填\n * @param {Function} callback 回调函数\n */\nexports.getFollowers = function (nextOpenid, callback) {\n  this.preRequest(this._getFollowers, arguments);\n};\n\n/*!\n * 获取关注者列表的未封装版本\n */\nexports._getFollowers = function (nextOpenid, callback) {\n  // https://api.weixin.qq.com/cgi-bin/user/get?access_token=ACCESS_TOKEN&next_openid=NEXT_OPENID\n  if (typeof nextOpenid === 'function') {\n    callback = nextOpenid;\n    nextOpenid = '';\n  }\n  var url = this.endpoint + '/cgi-bin/user/get?next_openid=' + nextOpenid + '&access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n};\n\n/**\n * 设置用户备注名\n * 详细细节 http://mp.weixin.qq.com/wiki/1/4a566d20d67def0b3c1afc55121d2419.html\n * Examples:\n * ```\n * api.updateRemark(openid, remark, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"ok\"\n * }\n * ```\n * @param {String} openid 用户的openid\n * @param {String} remark 新的备注名，长度必须小于30字符\n * @param {Function} callback 回调函数\n */\nexports.updateRemark = function (openid, remark, callback) {\n  this.preRequest(this._updateRemark, arguments);\n};\n\n/*!\n * 设置用户备注名的未封装版本\n */\nexports._updateRemark = function (openid, remark, callback) {\n  // https://api.weixin.qq.com/cgi-bin/user/info/updateremark?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/cgi-bin/user/info/updateremark?access_token=' + this.token.accessToken;\n  var data = {\n    openid: openid,\n    remark: remark\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_qrcode.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 创建临时二维码\n * 详细请看：<http://mp.weixin.qq.com/wiki/18/28fc21e7ed87bec960651f0ce873ef8a.html>\n * Examples:\n * ```\n * api.createTmpQRCode(10000, 1800, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"ticket\":\"gQG28DoAAAAAAAAAASxodHRwOi8vd2VpeGluLnFxLmNvbS9xL0FuWC1DNmZuVEhvMVp4NDNMRnNRAAIEesLvUQMECAcAAA==\",\n *  \"expire_seconds\":1800\n * }\n * ```\n * @param {Number} sceneId 场景ID\n * @param {Number} expire 过期时间，单位秒。最大不超过604800（即7天）\n * @param {Function} callback 回调函数\n */\nexports.createTmpQRCode = function (sceneId, expire, callback) {\n  this.preRequest(this._createTmpQRCode, arguments);\n};\n\n/*!\n * 创建临时二维码的未封装版本\n */\nexports._createTmpQRCode = function (sceneId, expire, callback) {\n  var url = this.endpoint + '/cgi-bin/qrcode/create?access_token=' + this.token.accessToken;\n  var data = {\n    'expire_seconds': expire,\n    'action_name': 'QR_SCENE',\n    'action_info': {'scene': {'scene_id': sceneId}}\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 创建永久二维码\n * 详细请看：<http://mp.weixin.qq.com/wiki/18/28fc21e7ed87bec960651f0ce873ef8a.html>\n * Examples:\n * ```\n * api.createLimitQRCode(100, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"ticket\":\"gQG28DoAAAAAAAAAASxodHRwOi8vd2VpeGluLnFxLmNvbS9xL0FuWC1DNmZuVEhvMVp4NDNMRnNRAAIEesLvUQMECAcAAA==\"\n * }\n * ```\n * @param {Number|String} sceneId 场景ID。数字ID不能大于100000，字符串ID长度限制为1到64\n * @param {Function} callback 回调函数\n */\nexports.createLimitQRCode = function (sceneId, callback) {\n  this.preRequest(this._createLimitQRCode, arguments);\n};\n\n/*!\n * 创建永久二维码的未封装版本\n */\nexports._createLimitQRCode = function (sceneId, callback) {\n  var url = this.endpoint + '/cgi-bin/qrcode/create?access_token=' + this.token.accessToken;\n  var data = {\n    'action_name': 'QR_LIMIT_SCENE',\n    'action_info': {'scene': {'scene_id': sceneId}}\n  };\n  // 字符串\n  if (typeof sceneId === 'string') {\n    data.action_name = 'QR_LIMIT_STR_SCENE';\n    data.action_info.scene = {'scene_str': sceneId};\n  }\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 生成显示二维码的链接。微信扫描后，可立即进入场景\n * Examples:\n * ```\n * api.showQRCodeURL(titck);\n * // => https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=TICKET\n * ```\n * @param {String} ticket 二维码Ticket\n * @return {String} 显示二维码的URL地址，通过img标签可以显示出来\n */\nexports.showQRCodeURL = function (ticket) {\n  return this.mpPrefix + 'showqrcode?ticket=' + ticket;\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_media.js":"'use strict';\n\nvar path = require('path');\nvar fs = require('fs');\n\nvar formstream = require('formstream');\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\n\n/**\n * 新增临时素材，分别有图片（image）、语音（voice）、视频（video）和缩略图（thumb）\n * 详情请见：<http://mp.weixin.qq.com/wiki/5/963fc70b80dc75483a271298a76a8d59.html>\n * Examples:\n * ```\n * api.uploadMedia('filepath', type, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"type\":\"TYPE\",\"media_id\":\"MEDIA_ID\",\"created_at\":123456789}\n * ```\n * Shortcut:\n *\n * - `exports.uploadImage(filepath, callback);`\n * - `exports.uploadVoice(filepath, callback);`\n * - `exports.uploadVideo(filepath, callback);`\n * - `exports.uploadThumb(filepath, callback);`\n *\n * @param {String} filepath 文件路径\n * @param {String} type 媒体类型，可用值有image、voice、video、thumb\n * @param {Function} callback 回调函数\n */\nexports.uploadMedia = function (filepath, type, callback) {\n  this.preRequest(this._uploadMedia, arguments);\n};\n\n/*!\n * 上传多媒体文件的未封装版本\n */\nexports._uploadMedia = function (filepath, type, callback) {\n  var that = this;\n  fs.stat(filepath, function (err, stat) {\n    if (err) {\n      return callback(err);\n    }\n    var form = formstream();\n    form.file('media', filepath, path.basename(filepath), stat.size);\n    var url = that.endpoint + '/cgi-bin/media/upload?access_token=' + that.token.accessToken + '&type=' + type;\n    var opts = {\n      dataType: 'json',\n      type: 'POST',\n      timeout: 60000, // 60秒超时\n      headers: form.headers(),\n      stream: form\n    };\n    that.request(url, opts, wrapper(callback));\n  });\n};\n\n/**\n * 流式新增临时素材，分别有图片（image）、语音（voice）、视频（video）和缩略图（thumb）\n * 拓展自uploadMedia，实现上游上传的流数据重定向到微信服务器，省去自己服务器的文件缓存。\n * Examples:\n * ```\n * api.uploadMediaStream(req, type, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"type\":\"TYPE\",\"media_id\":\"MEDIA_ID\",\"created_at\":123456789}\n * ```\n * Shortcut:\n *\n * - `exports.uploadImageStream(req, callback);`\n * - `exports.uploadVoiceStream(req, callback);`\n * - `exports.uploadVideoStream(req, callback);`\n * - `exports.uploadThumbStream(req, callback);`\n *\n * @param {String} req 上游Stream对象，必须包含headers属性；例如expressjs中request对象。\n * @param {String} type 媒体类型，可用值有image、voice、video、thumb\n * @param {Function} callback 回调函数\n */\nexports.uploadMediaStream = function (req, type, callback) {\n  this.preRequest(this._uploadMediaStream, arguments);\n};\n\n/*!\n * 流式上传多媒体文件的未封装版本\n */\nexports._uploadMediaStream = function (req, type, callback) {\n  var that = this;\n  var url = that.endpoint + '/cgi-bin/media/upload?access_token=' + that.token.accessToken + '&type=' + type;\n  var opts = {\n    dataType: 'json',\n    type: 'POST',\n    timeout: 60000, // 60秒超时\n    headers: req.headers,\n    stream: req\n  };\n  delete opts.headers.host;\n  that.request(url, opts, callback);\n};\n\n['image', 'voice', 'video', 'thumb'].forEach(function (type) {\n  var method = 'upload' + type[0].toUpperCase() + type.substring(1);\n  exports[method] = function (filepath, callback) {\n    this.uploadMedia(filepath, type, callback);\n  };\n  exports[method+'Stream'] = function (req, callback) {\n    this.uploadMediaStream(req, type, callback);\n  };\n});\n\n/**\n * 获取临时素材\n * 详情请见：<http://mp.weixin.qq.com/wiki/11/07b6b76a6b6e8848e855a435d5e34a5f.html>\n * Examples:\n * ```\n * api.getMedia('media_id', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的文件Buffer对象\n * - `res`, HTTP响应对象\n *\n * @param {String} mediaId 媒体文件的ID\n * @param {Function} callback 回调函数\n */\nexports.getMedia = function (mediaId, callback) {\n  this.preRequest(this._getMedia, arguments);\n};\n\n/*!\n * 获取临时素材的未封装版本\n */\nexports._getMedia = function (mediaId, callback) {\n  var url = this.endpoint + '/cgi-bin/media/get?access_token=' + this.token.accessToken + '&media_id=' + mediaId;\n  var opts = {\n    timeout: 60000 // 60秒超时\n  };\n  this.request(url, opts, wrapper(function (err, data, res) {\n    // handle some err\n    if (err) {\n      return callback(err);\n    }\n    var contentType = res.headers['content-type'];\n    if (contentType === 'application/json' || contentType === 'text/plain') {\n      var ret;\n      try {\n        ret = JSON.parse(data);\n        if (ret.errcode) {\n          err = new Error(ret.errmsg);\n          err.name = 'WeChatAPIError';\n        }\n      } catch (ex) {\n        callback(ex, data, res);\n        return;\n      }\n      return callback(err, ret, res);\n    }\n    // 输出Buffer对象\n    callback(null, data, res);\n  }));\n};\n\n\n/**\n * 上传图文消息内的图片获取URL\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.uploadImage('filepath');\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"url\":  \"http://mmbiz.qpic.cn/mmbiz/gLO17UPS6FS2xsypf378iaNhWacZ1G1UplZYWEYfwvuU6Ont96b1roYsCNFwaRrSaKTPCUdBK9DgEHicsKwWCBRQ/0\"}\n * ```\n *\n * @param {String} filepath 图片文件路径\n * @param {Function} callback 回调函数\n */\nexports.uploadImage = function (filepath, callback) {\n  this.preRequest(this._uploadImage, arguments);\n};\n\n/*!\n * 上传图片未封装版本\n */\nexports._uploadImage = function (filepath, callback) {\n  var that = this;\n  fs.stat(filepath, function (err, stat) {\n    if (err) {\n      return callback(err);\n    }\n    var form = formstream();\n    form.file('media', filepath, path.basename(filepath), stat.size);\n    var url = that.endpoint + '/cgi-bin/media/uploadimg?access_token=' + that.token.accessToken;\n    var opts = {\n      dataType: 'json',\n      type: 'POST',\n      timeout: 60000, // 60秒超时\n      headers: form.headers(),\n      stream: form\n    };\n    that.request(url, opts, wrapper(callback));\n  });\n};\n\n/**\n * 上传来自上游管道的图文消息内的图片，并获取URL。\n * 拓展于uploadImage，用于客户端直接上传文件管道重定向到微信服务器，不经过自身缓存服务器文件。\n * Examples:\n * ```\n * api.uploadImageStream(req, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"url\":  \"http://mmbiz.qpic.cn/mmbiz/gLO17UPS6FS2xsypf378iaNhWacZ1G1UplZYWEYfwvuU6Ont96b1roYsCNFwaRrSaKTPCUdBK9DgEHicsKwWCBRQ/0\"}\n * ```\n *\n * @param {Object} req 上游Stream对象，必须包含headers属性；例如expressjs中request对象。\n * @param {Function} callback 回调函数\n */\nexports.uploadImageStream = function (req, callback) {\n  this.preRequest(this._uploadImageStream, arguments);\n};\n\n/*!\n * 上传来自上游管道的图文消息内的图片未封装版本\n */\nexports._uploadImageStream = function (req, callback) {\n  var that = this;\n  var url = that.endpoint + '/cgi-bin/media/uploadimg?access_token=' + that.token.accessToken;\n  var opts = {\n    dataType: 'json',\n    type: 'POST',\n    timeout: 60000, // 60秒超时\n    headers: req.headers,\n    stream: req\n  };\n  delete opts.headers.host;\n  that.request(url, opts, callback);\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_material.js":"'use strict';\n\nvar path = require('path');\nvar fs = require('fs');\n\nvar formstream = require('formstream');\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\nvar make = util.make;\n\n/**\n * 上传永久素材，分别有图片（image）、语音（voice）、和缩略图（thumb）\n * 详情请见：<http://mp.weixin.qq.com/wiki/14/7e6c03263063f4813141c3e17dd4350a.html>\n * Examples:\n * ```\n * api.uploadMaterial('filepath', type, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"type\":\"TYPE\",\"media_id\":\"MEDIA_ID\",\"created_at\":123456789}\n * ```\n * Shortcut:\n *\n * - `exports.uploadImageMaterial(filepath, callback);`\n * - `exports.uploadVoiceMaterial(filepath, callback);`\n * - `exports.uploadThumbMaterial(filepath, callback);`\n *\n * @param {String} filepath 文件路径\n * @param {String} type 媒体类型，可用值有image、voice、video、thumb\n * @param {Function} callback 回调函数\n */\nmake(exports, 'uploadMaterial', function (filepath, type, callback) {\n  var that = this;\n  fs.stat(filepath, function (err, stat) {\n    if (err) {\n      return callback(err);\n    }\n    var form = formstream();\n    form.file('media', filepath, path.basename(filepath), stat.size);\n    var url = that.endpoint + '/cgi-bin/material/add_material?access_token=' + that.token.accessToken + '&type=' + type;\n    var opts = {\n      dataType: 'json',\n      type: 'POST',\n      timeout: 60000, // 60秒超时\n      headers: form.headers(),\n      stream: form\n    };\n    that.request(url, opts, wrapper(callback));\n  });\n});\n\n['image', 'voice', 'thumb'].forEach(function (type) {\n  var method = 'upload' + type[0].toUpperCase() + type.substring(1) + 'Material';\n  exports[method] = function (filepath, callback) {\n    this.uploadMaterial(filepath, type, callback);\n  };\n});\n\n/**\n * 上传永久素材，视频（video）\n * 详情请见：<http://mp.weixin.qq.com/wiki/14/7e6c03263063f4813141c3e17dd4350a.html>\n * Examples:\n * ```\n * var description = {\n *   \"title\":VIDEO_TITLE,\n *   \"introduction\":INTRODUCTION\n * };\n * api.uploadVideoMaterial('filepath', description, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"media_id\":\"MEDIA_ID\"}\n * ```\n *\n * @param {String} filepath 视频文件路径\n * @param {Object} description 描述\n * @param {Function} callback 回调函数\n */\nmake(exports, 'uploadVideoMaterial', function (filepath, description, callback) {\n  var that = this;\n  fs.stat(filepath, function (err, stat) {\n    if (err) {\n      return callback(err);\n    }\n    var form = formstream();\n    form.file('media', filepath, path.basename(filepath), stat.size);\n    form.field('description', JSON.stringify(description));\n    var url = that.endpoint + '/cgi-bin/material/add_material?access_token=' + that.token.accessToken + '&type=video';\n    var opts = {\n      dataType: 'json',\n      type: 'POST',\n      timeout: 60000, // 60秒超时\n      headers: form.headers(),\n      stream: form\n    };\n    that.request(url, opts, wrapper(callback));\n  });\n});\n\n/**\n * 新增永久图文素材\n *\n * News:\n * ```\n * {\n *  \"articles\": [\n *    {\n *      \"title\": TITLE,\n *      \"thumb_media_id\": THUMB_MEDIA_ID,\n *      \"author\": AUTHOR,\n *      \"digest\": DIGEST,\n *      \"show_cover_pic\": SHOW_COVER_PIC(0 / 1),\n *      \"content\": CONTENT,\n *      \"content_source_url\": CONTENT_SOURCE_URL\n *    },\n *    //若新增的是多图文素材，则此处应还有几段articles结构\n *  ]\n * }\n * ```\n * Examples:\n * ```\n * api.uploadNewsMaterial(news, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\":0,\"errmsg\":\"ok\"}\n * ```\n * @param {Object} news 图文对象\n * @param {Function} callback 回调函数\n */\nexports.uploadNewsMaterial = function (news, callback) {\n  this.preRequest(this._uploadNewsMaterial, arguments);\n};\n\n/*!\n * 新增永久图文素材的未封装版本\n */\nexports._uploadNewsMaterial = function (news, callback) {\n  var url = this.endpoint + '/cgi-bin/material/add_news?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(news), wrapper(callback));\n};\n\n\n/**\n * 更新永久图文素材\n * 详情请见：<http://mp.weixin.qq.com/wiki/14/7e6c03263063f4813141c3e17dd4350a.html>\n * News:\n * ```\n * {\n *  \"media_id\":MEDIA_ID,\n *  \"index\":INDEX,\n *  \"articles\": {\n *    \"title\": TITLE,\n *    \"thumb_media_id\": THUMB_MEDIA_ID,\n *    \"author\": AUTHOR,\n *    \"digest\": DIGEST,\n *    \"show_cover_pic\": SHOW_COVER_PIC(0 / 1),\n *    \"content\": CONTENT,\n *    \"content_source_url\": CONTENT_SOURCE_URL\n *  }\n * }\n * ```\n * Examples:\n * ```\n * api.updateNewsMaterial(news, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\":0,\"errmsg\":\"ok\"}\n * ```\n * @param {Object} news 图文对象\n * @param {Function} callback 回调函数\n */\nexports.updateNewsMaterial = function (news, callback) {\n  this.preRequest(this._updateNewsMaterial, arguments);\n};\n\n/*!\n * 更新永久图文素材的未封装版本\n */\nexports._updateNewsMaterial = function (news, callback) {\n  var url = this.endpoint + '/cgi-bin/material/update_news?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(news), wrapper(callback));\n};\n\n\n/**\n * 根据媒体ID获取永久素材\n * 详情请见：<http://mp.weixin.qq.com/wiki/4/b3546879f07623cb30df9ca0e420a5d0.html>\n * Examples:\n * ```\n * api.getMaterial('media_id', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的文件Buffer对象\n * - `res`, HTTP响应对象\n *\n * @param {String} mediaId 媒体文件的ID\n * @param {Function} callback 回调函数\n */\nexports.getMaterial = function (mediaId, callback) {\n  this.preRequest(this._getMaterial, arguments);\n};\n\n/*!\n * 下载永久素材的未封装版本\n */\nexports._getMaterial = function (mediaId, callback) {\n  var url = this.endpoint + '/cgi-bin/material/get_material?access_token=' + this.token.accessToken;\n  var opts = {\n    type: 'POST',\n    data: {'media_id': mediaId},\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  opts.timeout = 60000; // 60秒超时\n  this.request(url, opts, wrapper(function (err, data, res) {\n    // handle some err\n    if (err) {\n      return callback(err);\n    }\n    var contentType = res.headers['content-type'];\n    if (contentType === 'application/json') {\n      var ret;\n      try {\n        ret = JSON.parse(data);\n        if (ret.errcode) {\n          err = new Error(ret.errmsg);\n          err.name = 'WeChatAPIError';\n        }\n      } catch (ex) {\n        return callback(ex, data, res);\n      }\n      return callback(err, ret, res);\n    }\n    // 输出Buffer对象\n    callback(null, data, res);\n  }));\n};\n\n/**\n * 删除永久素材\n * 详情请见：<http://mp.weixin.qq.com/wiki/5/e66f61c303db51a6c0f90f46b15af5f5.html>\n * Examples:\n * ```\n * api.removeMaterial('media_id', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的文件Buffer对象\n * - `res`, HTTP响应对象\n *\n * @param {String} mediaId 媒体文件的ID\n * @param {Function} callback 回调函数\n */\nexports.removeMaterial = function (mediaId, callback) {\n  this.preRequest(this._removeMaterial, arguments);\n};\n\n/*!\n * 删除永久素材的未封装版本\n */\nexports._removeMaterial = function (mediaId, callback) {\n  var url = this.endpoint + '/cgi-bin/material/del_material?access_token=' + this.token.accessToken;\n  this.request(url, postJSON({'media_id': mediaId}), wrapper(callback));\n};\n\n\n/**\n * 获取素材总数\n * 详情请见：<http://mp.weixin.qq.com/wiki/16/8cc64f8c189674b421bee3ed403993b8.html>\n * Examples:\n * ```\n * api.getMaterialCount(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的文件Buffer对象\n * - `res`, HTTP响应对象\n *\n * Result:\n * ```\n * {\n *  \"voice_count\":COUNT,\n *  \"video_count\":COUNT,\n *  \"image_count\":COUNT,\n *  \"news_count\":COUNT\n * }\n * ```\n * @param {Function} callback 回调函数\n */\nexports.getMaterialCount = function (callback) {\n  this.preRequest(this._getMaterialCount, arguments);\n};\n\n\n\n/*!\n * 删除永久素材的未封装版本\n */\nexports._getMaterialCount = function (callback) {\n  var url = this.endpoint + '/cgi-bin/material/get_materialcount?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n};\n\n/**\n * 获取永久素材列表\n * 详情请见：<http://mp.weixin.qq.com/wiki/12/2108cd7aafff7f388f41f37efa710204.html>\n * Examples:\n * ```\n * api.getMaterials(type, offset, count, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的文件Buffer对象\n * - `res`, HTTP响应对象\n *\n * Result:\n * ```\n * {\n *  \"total_count\": TOTAL_COUNT,\n *  \"item_count\": ITEM_COUNT,\n *  \"item\": [{\n *    \"media_id\": MEDIA_ID,\n *    \"name\": NAME,\n *    \"update_time\": UPDATE_TIME\n *  },\n *  //可能会有多个素材\n *  ]\n * }\n * ```\n * @param {String} type 素材的类型，图片（image）、视频（video）、语音 （voice）、图文（news）\n * @param {Number} offset 从全部素材的该偏移位置开始返回，0表示从第一个素材 返回\n * @param {Number} count 返回素材的数量，取值在1到20之间\n * @param {Function} callback 回调函数\n */\nexports.getMaterials = function (type, offset, count, callback) {\n  this.preRequest(this._getMaterials, arguments);\n};\n\n\n\n/*!\n * 获取永久素材列表的未封装版本\n */\nexports._getMaterials = function (type, offset, count, callback) {\n  var url = this.endpoint + '/cgi-bin/material/batchget_material?access_token=' + this.token.accessToken;\n  var data = {\n    type: type,\n    offset: offset,\n    count: count\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_message.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 客服消息，发送文字消息\n * 详细细节 http://mp.weixin.qq.com/wiki/1/70a29afed17f56d537c833f89be979c9.html#.E5.AE.A2.E6.9C.8D.E6.8E.A5.E5.8F.A3-.E5.8F.91.E6.B6.88.E6.81.AF\n * Examples:\n * ```\n * api.sendText('openid', 'Hello world', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @param {String} openid 用户的openid\n * @param {String} text 发送的消息内容\n * @param {Function} callback 回调函数\n */\nexports.sendText = function (openid, text, callback) {\n  this.preRequest(this._sendText, arguments);\n};\n\n/*!\n * 客服消息，发送文字消息的未封装版本\n */\nexports._sendText = function (openid, text, callback) {\n  // {\n  //  \"touser\":\"OPENID\",\n  //  \"msgtype\":\"text\",\n  //  \"text\": {\n  //    \"content\":\"Hello World\"\n  //  }\n  // }\n  var url = this.endpoint + '/cgi-bin/message/custom/send?access_token=' + this.token.accessToken;\n  var data = {\n    'touser': openid,\n    'msgtype': 'text',\n    'text': {\n      'content': text\n    }\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 客服消息，发送图片消息\n * 详细细节 http://mp.weixin.qq.com/wiki/1/70a29afed17f56d537c833f89be979c9.html#.E5.AE.A2.E6.9C.8D.E6.8E.A5.E5.8F.A3-.E5.8F.91.E6.B6.88.E6.81.AF\n * Examples:\n * ```\n * api.sendImage('openid', 'media_id', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @param {String} openid 用户的openid\n * @param {String} mediaId 媒体文件的ID，参见uploadMedia方法\n * @param {Function} callback 回调函数\n */\nexports.sendImage = function (openid, mediaId, callback) {\n  this.preRequest(this._sendImage, arguments);\n};\n\n/*!\n * 客服消息，发送图片消息的未封装版本\n */\nexports._sendImage = function (openid, mediaId, callback) {\n  // {\n  //  \"touser\":\"OPENID\",\n  //  \"msgtype\":\"image\",\n  //  \"image\": {\n  //    \"media_id\":\"MEDIA_ID\"\n  //  }\n  // }\n  var url = this.endpoint + '/cgi-bin/message/custom/send?access_token=' + this.token.accessToken;\n  var data = {\n    'touser': openid,\n    'msgtype':'image',\n    'image': {\n      'media_id': mediaId\n    }\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 客服消息，发送语音消息\n * 详细细节 http://mp.weixin.qq.com/wiki/1/70a29afed17f56d537c833f89be979c9.html#.E5.AE.A2.E6.9C.8D.E6.8E.A5.E5.8F.A3-.E5.8F.91.E6.B6.88.E6.81.AF\n * Examples:\n * ```\n * api.sendVoice('openid', 'media_id', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @param {String} openid 用户的openid\n * @param {String} mediaId 媒体文件的ID\n * @param {Function} callback 回调函数\n */\nexports.sendVoice = function (openid, mediaId, callback) {\n  this.preRequest(this._sendVoice, arguments);\n};\n\n/*!\n * 客服消息，发送语音消息的未封装版本\n */\nexports._sendVoice = function (openid, mediaId, callback) {\n  // {\n  //  \"touser\":\"OPENID\",\n  //  \"msgtype\":\"voice\",\n  //  \"voice\": {\n  //    \"media_id\":\"MEDIA_ID\"\n  //  }\n  // }\n  var url = this.endpoint + '/cgi-bin/message/custom/send?access_token=' + this.token.accessToken;\n  var data = {\n    'touser': openid,\n    'msgtype': 'voice',\n    'voice': {\n      'media_id': mediaId\n    }\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 客服消息，发送视频消息\n * 详细细节 http://mp.weixin.qq.com/wiki/1/70a29afed17f56d537c833f89be979c9.html#.E5.AE.A2.E6.9C.8D.E6.8E.A5.E5.8F.A3-.E5.8F.91.E6.B6.88.E6.81.AF\n * Examples:\n * ```\n * api.sendVideo('openid', 'media_id', 'thumb_media_id', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @param {String} openid 用户的openid\n * @param {String} mediaId 媒体文件的ID\n * @param {String} thumbMediaId 缩略图文件的ID\n * @param {Function} callback 回调函数\n */\nexports.sendVideo = function (openid, mediaId, thumbMediaId, callback) {\n  this.preRequest(this._sendVideo, arguments);\n};\n\n/*!\n * 客服消息，发送视频消息的未封装版本\n */\nexports._sendVideo = function (openid, mediaId, thumbMediaId, callback) {\n  // {\n  //  \"touser\":\"OPENID\",\n  //  \"msgtype\":\"video\",\n  //  \"video\": {\n  //    \"media_id\":\"MEDIA_ID\"\n  //    \"thumb_media_id\":\"THUMB_MEDIA_ID\"\n  //  }\n  // }\n  var url = this.endpoint + '/cgi-bin/message/custom/send?access_token=' + this.token.accessToken;\n  var data = {\n    'touser': openid,\n    'msgtype':'video',\n    'video': {\n      'media_id': mediaId,\n      'thumb_media_id': thumbMediaId\n    }\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 客服消息，发送音乐消息\n * 详细细节 http://mp.weixin.qq.com/wiki/1/70a29afed17f56d537c833f89be979c9.html#.E5.AE.A2.E6.9C.8D.E6.8E.A5.E5.8F.A3-.E5.8F.91.E6.B6.88.E6.81.AF\n * Examples:\n * ```\n * var music = {\n *  title: '音乐标题', // 可选\n *  description: '描述内容', // 可选\n *  musicurl: 'http://url.cn/xxx', 音乐文件地址\n *  hqmusicurl: \"HQ_MUSIC_URL\",\n *  thumb_media_id: \"THUMB_MEDIA_ID\"\n * };\n * api.sendMusic('openid', music, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @param {String} openid 用户的openid\n * @param {Object} music 音乐文件\n * @param {Function} callback 回调函数\n */\nexports.sendMusic = function (openid, music, callback) {\n  this.preRequest(this._sendMusic, arguments);\n};\n\n/*!\n * 客服消息，发送音乐消息的未封装版本\n */\nexports._sendMusic = function (openid, music, callback) {\n  // {\n  //  \"touser\":\"OPENID\",\n  //  \"msgtype\":\"music\",\n  //  \"music\": {\n  //    \"title\":\"MUSIC_TITLE\", // 可选\n  //    \"description\":\"MUSIC_DESCRIPTION\", // 可选\n  //    \"musicurl\":\"MUSIC_URL\",\n  //    \"hqmusicurl\":\"HQ_MUSIC_URL\",\n  //    \"thumb_media_id\":\"THUMB_MEDIA_ID\"\n  //  }\n  // }\n  var url = this.endpoint + '/cgi-bin/message/custom/send?access_token=' + this.token.accessToken;\n  var data = {\n    'touser': openid,\n    'msgtype':'music',\n    'music': music\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 客服消息，发送图文消息（点击跳转到外链）\n * 详细细节 http://mp.weixin.qq.com/wiki/1/70a29afed17f56d537c833f89be979c9.html#.E5.AE.A2.E6.9C.8D.E6.8E.A5.E5.8F.A3-.E5.8F.91.E6.B6.88.E6.81.AF\n * Examples:\n * ```\n * var articles = [\n *  {\n *    \"title\":\"Happy Day\",\n *    \"description\":\"Is Really A Happy Day\",\n *    \"url\":\"URL\",\n *    \"picurl\":\"PIC_URL\"\n *  },\n *  {\n *    \"title\":\"Happy Day\",\n *    \"description\":\"Is Really A Happy Day\",\n *    \"url\":\"URL\",\n *    \"picurl\":\"PIC_URL\"\n *  }];\n * api.sendNews('openid', articles, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @param {String} openid 用户的openid\n * @param {Array} articles 图文列表\n * @param {Function} callback 回调函数\n */\nexports.sendNews = function (openid, articles, callback) {\n  this.preRequest(this._sendNews, arguments);\n};\n\n/*!\n * 客服消息，发送图文消息（点击跳转到外链）的未封装版本\n */\nexports._sendNews = function (openid, articles, callback) {\n  // {\n  //  \"touser\":\"OPENID\",\n  //  \"msgtype\":\"news\",\n  //  \"news\":{\n  //    \"articles\": [\n  //      {\n  //        \"title\":\"Happy Day\",\n  //        \"description\":\"Is Really A Happy Day\",\n  //        \"url\":\"URL\",\n  //        \"picurl\":\"PIC_URL\"\n  //      },\n  //      {\n  //        \"title\":\"Happy Day\",\n  //        \"description\":\"Is Really A Happy Day\",\n  //        \"url\":\"URL\",\n  //        \"picurl\":\"PIC_URL\"\n  //      }]\n  //   }\n  // }\n  var url = this.endpoint + '/cgi-bin/message/custom/send?access_token=' + this.token.accessToken;\n  var data = {\n    'touser': openid,\n    'msgtype':'news',\n    'news': {\n      'articles': articles\n    }\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n\n\n\n/**\n * 客服消息，发送图文消息（点击跳转到图文消息页面）\n * 详细细节 http://mp.weixin.qq.com/wiki/14/d9be34fe03412c92517da10a5980e7ee.html#.E5.AE.A2.E6.9C.8D.E6.8E.A5.E5.8F.A3-.E5.8F.91.E6.B6.88.E6.81.AF\n * Examples:\n * ```\n * api.sendMpNews('openid', 'mediaId' , callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @param {String} openid 用户的openid\n * @param {String} mediaId 图文消息的id\n * @param {Function} callback 回调函数\n */\nexports.sendMpNews = function (openid, mediaId, callback) {\n  this.preRequest(this._sendMpNews, arguments);\n};\n\n/*!\n * 客服消息，发送图文消息（点击跳转到图文消息页面） 的未封装版本\n */\nexports._sendMpNews = function (openid, mediaId, callback) {\n   //{\n   // \"touser\":\"OPENID\",\n   // \"msgtype\":\"mpnews\",\n   // \"mpnews\":\n   //  {\n   //     \"media_id\":\"MEDIA_ID\"\n   //  }\n   //}\n  var url = this.endpoint + '/cgi-bin/message/custom/send?access_token=' + this.token.accessToken;\n  var data = {\n    'touser': openid,\n    'msgtype':'mpnews',\n    'mpnews': {\n      'media_id': mediaId\n    }\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 客服消息，发送卡卷消息\n * 详细细节 http://mp.weixin.qq.com/wiki/1/70a29afed17f56d537c833f89be979c9.html#.E5.AE.A2.E6.9C.8D.E6.8E.A5.E5.8F.A3-.E5.8F.91.E6.B6.88.E6.81.AF\n * Examples:\n * ```\n * api.sendCard('openid', 'card', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @param {String} openid 用户的openid\n * @param {Object} wxcard 卡卷相关信息\n * @param {Function} callback 回调函数\n */\nexports.sendCard = function (openid, card, callback) {\n  this.preRequest(this._sendCard, arguments);\n};\n\n/*!\n * 客服消息，发送卡卷消息的未封装版本\n */\nexports._sendCard = function (openid, card, callback) {\n  var url = this.endpoint + '/cgi-bin/message/custom/send?access_token=' + this.token.accessToken;\n  var that = this;\n  this.getCardExt(card, function (err, result) {\n    var data = {\n      'touser': openid,\n      'msgtype':'wxcard',\n      'wxcard': {\n        'card_id': card.card_id,\n        'card_ext': result\n      }\n    };\n    that.request(url, postJSON(data), wrapper(callback));\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_template.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 设置所属行业\n * Examples:\n * ```\n * var industryIds = {\n *  \"industry_id1\":'1',\n *  \"industry_id2\":\"4\"\n * };\n * api.setIndustry(industryIds, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @param {Object} industryIds 公众号模板消息所属行业编号\n */\nexports.setIndustry = function(industryIds, callback){\n  this.preRequest(this._setIndustry, arguments);\n};\n\nexports._setIndustry = function (industryIds, callback) {\n  var apiUrl = this.endpoint + '/cgi-bin/template/api_set_industry?access_token=' + this.token.accessToken;\n  this.request(apiUrl, postJSON(industryIds), wrapper(callback));\n};\n\n/**\n * 获取设置的行业信息\n * Examples:\n * ```\n * api.getIndustry(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * // 结果示例\n * {\n *   \"primary_industry\":{\"first_class\":\"运输与仓储\",\"second_class\":\"快递\"},\n *   \"secondary_industry\":{\"first_class\":\"IT科技\",\"second_class\":\"互联网|电子商务\"}\n * }\n * ```\n * @param {Function} callback 回调函数\n */\nexports.getIndustry = function(callback){\n  this.preRequest(this._getIndustry, arguments);\n};\n\nexports._getIndustry = function (callback) {\n  var apiUrl = this.endpoint + '/cgi-bin/template/get_industry?access_token=' + this.token.accessToken;\n  this.request(apiUrl, {dataType: 'json'}, wrapper(callback));\n};\n\n/**\n * 获得模板ID\n * Examples:\n * ```\n * var templateIdShort = 'TM00015';\n * api.addTemplate(templateIdShort, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @param {String} templateIdShort 模板库中模板的编号，有“TM**”和“OPENTMTM**”等形式\n */\nexports.addTemplate = function(templateIdShort, callback){\n  this.preRequest(this._addTemplate, arguments);\n};\n\nexports._addTemplate = function (templateIdShort, callback) {\n  var apiUrl = this.endpoint + '/cgi-bin/template/api_add_template?access_token=' + this.token.accessToken;\n  var templateId = {\n    template_id_short: templateIdShort\n  };\n  this.request(apiUrl, postJSON(templateId), wrapper(callback));\n};\n\n/**\n * 获取模板列表\n * Examples:\n * ```\n * api.getAllPrivateTemplate(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * // 结果示例\n * {\n *  \"template_list\": [{\n *       \"template_id\": \"iPk5sOIt5X_flOVKn5GrTFpncEYTojx6ddbt8WYoV5s\",\n *       \"title\": \"领取奖金提醒\",\n *       \"primary_industry\": \"IT科技\",\n *       \"deputy_industry\": \"互联网|电子商务\",\n *       \"content\": \"{ {result.DATA} }\\n\\n领奖金额:{ {withdrawMoney.DATA} }\\n领奖  时间:{ {withdrawTime.DATA} }\\n银行信息:{ {cardInfo.DATA} }\\n到账时间:  { {arrivedTime.DATA} }\\n{ {remark.DATA} }\",\n *       \"example\": \"您已提交领奖申请\\n\\n领奖金额：xxxx元\\n领奖时间：2013-10-10 12:22:22\\n银行信息：xx银行(尾号xxxx)\\n到账时间：预计xxxxxxx\\n\\n预计将于xxxx到达您的银行卡\"\n *    }]\n * }\n * ```\n * @param {Function} callback 回调函数\n */\nexports.getAllPrivateTemplate = function(callback){\n  this.preRequest(this._getAllPrivateTemplate, arguments);\n};\n\nexports._getAllPrivateTemplate = function (callback) {\n  var apiUrl = this.endpoint + '/cgi-bin/template/get_all_private_template?access_token=' + this.token.accessToken;\n  this.request(apiUrl, {dataType: 'json'}, wrapper(callback));\n};\n\n/**\n * 删除模板\n * Examples:\n * ```\n * var templateId = ”Dyvp3-Ff0cnail_CDSzk1fIc6-9lOkxsQE7exTJbwUE”\n * api.delPrivateTemplate(templateId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @param {String} templateId 公众帐号下模板消息ID\n */\nexports.delPrivateTemplate = function(templateId, callback){\n  this.preRequest(this._delPrivateTemplate, arguments);\n};\n\nexports._delPrivateTemplate = function (templateId, callback) {\n  var apiUrl = this.endpoint + '/cgi-bin/template/del_private_template?access_token=' + this.token.accessToken;\n  var data = {\n    template_id: templateId\n  };\n  this.request(apiUrl, postJSON(data), wrapper(callback));\n};\n\n/**\n * 发送模板消息\n * 详细细节: http://mp.weixin.qq.com/wiki/17/304c1885ea66dbedf7dc170d84999a9d.html\n * Examples:\n * ```\n * var templateId: '模板id';\n * // URL置空，则在发送后,点击模板消息会进入一个空白页面（ios）, 或无法点击（android）\n * var url: 'http://weixin.qq.com/download';\n * var data = {\n *    \"first\": {\n *      \"value\":\"恭喜你购买成功！\",\n *      \"color\":\"#173177\"\n *    },\n *    \"keyword1\":{\n *      \"value\":\"巧克力\",\n *      \"color\":\"#173177\"\n *    },\n *    \"keyword2\": {\n *      \"value\":\"39.8元\",\n *      \"color\":\"#173177\"\n *    },\n *    \"keyword3\": {\n *      \"value\":\"2014年9月22日\",\n *      \"color\":\"#173177\"\n *    },\n *    \"remark\":{\n *      \"value\":\"欢迎再次购买！\",\n *      \"color\":\"#173177\"\n *    }\n * };\n * api.sendTemplate('openid', templateId, url, data, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @param {String} openid 用户的openid\n * @param {String} templateId 模板ID\n * @param {String} url URL置空，则在发送后，点击模板消息会进入一个空白页面（ios），或无法点击（android）\n * @param {Object} data 渲染模板的数据\n * @param {Function} callback 回调函数\n */\nexports.sendTemplate = function (openid, templateId, url, data, callback, callback2) {\n  this.preRequest(this._sendTemplate, arguments);\n};\n\nexports._sendTemplate = function (openid, templateId, url, data, callback, callback2) {\n  /*\n      duplicated interface `function (openid, templateId, url, topColor, data, callback)`\n   */\n  var apiUrl = this.endpoint + '/cgi-bin/message/template/send?access_token=' + this.token.accessToken;\n\n  if (typeof data === 'string') {\n    data = callback;\n    callback = callback2;\n  }\n\n  var template = {\n    touser: openid,\n    template_id: templateId,\n    url: url,\n    data: data\n  };\n  this.request(apiUrl, postJSON(template), wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_custom_service.js":"'use strict';\n\nvar path = require('path');\nvar fs = require('fs');\nvar formstream = require('formstream');\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\nvar make = util.make;\n\n/**\n * 获取客服聊天记录\n * 详细请看：https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1464937269_mUtmK&token=&lang=zh_CN\n *\n * Opts:\n * ```\n * {\n *  \"starttime\" : 123456789, 起始时间，unix时间戳\n *  \"endtime\" : 987654321,   结束时间，unix时间戳，每次查询时段不能超过24小时\n *  \"msgid\" : 1,             消息id顺序从小到大，从1开始\n *  \"number\" : 10000         每次获取条数，最多10000条\n * }\n * ```\n * Examples:\n * ```\n * api.getRecords(opts, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"recordlist\": [\n *    {\n *      \"worker\": \" test1\",\n *      \"openid\": \"oDF3iY9WMaswOPWjCIp_f3Bnpljk\",\n *      \"opercode\": 2002,\n *      \"time\": 1400563710,\n *      \"text\": \" 您好，客服test1为您服务。\"\n *    },\n *    {\n *      \"worker\": \" test1\",\n *      \"openid\": \"oDF3iY9WMaswOPWjCIp_f3Bnpljk\",\n *      \"opercode\": 2003,\n *      \"time\": 1400563731,\n *      \"text\": \" 你好，有什么事情？ \"\n *    },\n *  ]\n * }\n * ```\n * @param {Object} opts 查询条件\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getRecords', function (opts, callback) {\n  // https://api.weixin.qq.com/customservice/msgrecord/getmsglist?access_token=ACCESS_TOKEN\n  opts.msgid = opts.msgid || 1;\n  var url = this.endpoint + '/customservice/msgrecord/getmsglist?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(opts), wrapper(callback));\n});\n\n/**\n * 获取客服基本信息\n * 详细请看：http://dkf.qq.com/document-3_1.html\n *\n * Examples:\n * ```\n * api.getCustomServiceList(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"kf_list\": [\n *     {\n *       \"kf_account\": \"test1@test\",\n *       \"kf_nick\": \"ntest1\",\n *       \"kf_id\": \"1001\"\n *     },\n *     {\n *       \"kf_account\": \"test2@test\",\n *       \"kf_nick\": \"ntest2\",\n *       \"kf_id\": \"1002\"\n *     },\n *     {\n *       \"kf_account\": \"test3@test\",\n *       \"kf_nick\": \"ntest3\",\n *       \"kf_id\": \"1003\"\n *     }\n *   ]\n * }\n * ```\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getCustomServiceList', function (callback) {\n  // https://api.weixin.qq.com/cgi-bin/customservice/getkflist?access_token= ACCESS_TOKEN\n  var url = this.endpoint + '/cgi-bin/customservice/getkflist?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n\n/**\n * 获取在线客服接待信息\n * 详细请看：http://dkf.qq.com/document-3_2.html\n *\n * Examples:\n * ```\n * api.getOnlineCustomServiceList(callback);\n * ```\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"kf_online_list\": [\n *     {\n *       \"kf_account\": \"test1@test\",\n *       \"status\": 1,\n *       \"kf_id\": \"1001\",\n *       \"auto_accept\": 0,\n *       \"accepted_case\": 1\n *     },\n *     {\n *       \"kf_account\": \"test2@test\",\n *       \"status\": 1,\n *       \"kf_id\": \"1002\",\n *       \"auto_accept\": 0,\n *       \"accepted_case\": 2\n *     }\n *   ]\n * }\n * ```\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getOnlineCustomServiceList', function (callback) {\n  // https://api.weixin.qq.com/cgi-bin/customservice/getonlinekflist?access_token= ACCESS_TOKEN\n  var url = this.endpoint + '/cgi-bin/customservice/getonlinekflist?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n\nvar md5 = function (input) {\n  var crypto = require('crypto');\n  var hash = crypto.createHash('md5');\n  return hash.update(input).digest('hex');\n};\n\n/**\n * 添加客服账号\n * 详细请看：http://mp.weixin.qq.com/wiki/9/6fff6f191ef92c126b043ada035cc935.html\n *\n * Examples:\n * ```\n * api.addKfAccount('test@test', 'nickname', 'password', callback);\n * ```\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\" : 0,\n *  \"errmsg\" : \"ok\",\n * }\n * ```\n * @param {String} account 账号名字，格式为：前缀@公共号名字\n * @param {String} nick 昵称\n * @param {String} password 密码，可以直接传递明文，wechat模块自动进行md5加密\n * @param {Function} callback 回调函数\n */\nmake(exports, 'addKfAccount', function (account, nick, password, callback) {\n  // https://api.weixin.qq.com/customservice/kfaccount/add?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/customservice/kfaccount/add?access_token=' + this.token.accessToken;\n  var data = {\n    'kf_account': account,\n    'nickname': nick,\n    'password': md5(password)\n  };\n\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 设置客服账号\n * 详细请看：http://mp.weixin.qq.com/wiki/9/6fff6f191ef92c126b043ada035cc935.html\n *\n * Examples:\n * ```\n * api.updateKfAccount('test@test', 'nickname', 'password', callback);\n * ```\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\" : 0,\n *  \"errmsg\" : \"ok\",\n * }\n * ```\n * @param {String} account 账号名字，格式为：前缀@公共号名字\n * @param {String} nick 昵称\n * @param {String} password 密码，可以直接传递明文，wechat模块自动进行md5加密\n * @param {Function} callback 回调函数\n */\nmake(exports, 'updateKfAccount', function (account, nick, password, callback) {\n  // https://api.weixin.qq.com/customservice/kfaccount/add?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/customservice/kfaccount/update?access_token=' + this.token.accessToken;\n  var data = {\n    'kf_account': account,\n    'nickname': nick,\n    'password': md5(password)\n  };\n\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 删除客服账号\n * 详细请看：http://mp.weixin.qq.com/wiki/9/6fff6f191ef92c126b043ada035cc935.html\n *\n * Examples:\n * ```\n * api.deleteKfAccount('test@test', callback);\n * ```\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\" : 0,\n *  \"errmsg\" : \"ok\",\n * }\n * ```\n * @param {String} account 账号名字，格式为：前缀@公共号名字\n * @param {Function} callback 回调函数\n */\nmake(exports, 'deleteKfAccount', function (account, callback) {\n  // https://api.weixin.qq.com/customservice/kfaccount/del?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/customservice/kfaccount/del?access_token=' + this.token.accessToken + '&kf_account=' + account;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n\n/**\n * 设置客服头像\n * 详细请看：http://mp.weixin.qq.com/wiki/9/6fff6f191ef92c126b043ada035cc935.html\n *\n * Examples:\n * ```\n * api.setKfAccountAvatar('test@test', '/path/to/avatar.png', callback);\n * ```\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\" : 0,\n *  \"errmsg\" : \"ok\",\n * }\n * ```\n * @param {String} account 账号名字，格式为：前缀@公共号名字\n * @param {String} filepath 头像路径\n * @param {Function} callback 回调函数\n */\nmake(exports, 'setKfAccountAvatar', function (account, filepath, callback) {\n  // http://api.weixin.qq.com/customservice/kfaccount/uploadheadimg?access_token=ACCESS_TOKEN&kf_account=KFACCOUNT\n  var that = this;\n  fs.stat(filepath, function (err, stat) {\n    if (err) {\n      return callback(err);\n    }\n    var form = formstream();\n    form.file('media', filepath, path.basename(filepath), stat.size);\n    var url = that.endpoint + '/customservice/kfaccount/uploadheadimg?access_token=' + that.token.accessToken + '&kf_account=' + account;\n    var opts = {\n      dataType: 'json',\n      type: 'POST',\n      timeout: 60000, // 60秒超时\n      headers: form.headers(),\n      stream: form\n    };\n    that.request(url, opts, wrapper(callback));\n  });\n});\n\n/*********会话控制**********/\n\n/**\n * 创建会话\n * 详细请看：https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1458044820&token=&lang=zh_CN\n *\n * Examples:\n * ```\n * api.createKfSession('test@test', 'openidxxx', callback);\n * ```\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\" : 0,\n *  \"errmsg\" : \"ok\",\n * }\n * ```\n * @param {String} account 完整客服帐号，格式为：帐号前缀@公众号微信号\n * @param {String} openid 粉丝的openid\n * @param {Function} callback 回调函数\n */\nmake(exports, 'createKfSession', function (account, openid, callback) {\n  //https://api.weixin.qq.com/customservice/kfsession/create?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/customservice/kfsession/create?access_token=' + this.token.accessToken;\n  this.request(url, postJSON({\n    kf_account: account,\n    openid: openid\n  }), wrapper(callback));\n});\n\n/**\n * 关闭会话\n * 详细请看：https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1458044820&token=&lang=zh_CN\n *\n * Examples:\n * ```\n * api.closeKfSession('test@test', 'openidxxx', callback);\n * ```\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\" : 0,\n *  \"errmsg\" : \"ok\",\n * }\n * ```\n * @param {String} account 完整客服帐号，格式为：帐号前缀@公众号微信号\n * @param {String} openid 粉丝的openid\n * @param {Function} callback 回调函数\n */\nmake(exports, 'closeKfSession', function (account, openid, callback) {\n  //https://api.weixin.qq.com/customservice/kfsession/close?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/customservice/kfsession/close?access_token=' + this.token.accessToken;\n  this.request(url, postJSON({\n    kf_account: account,\n    openid: openid\n  }), wrapper(callback));\n});\n\n/**\n * 获取客户会话状态\n * 详细请看：https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1458044820&token=&lang=zh_CN\n *\n * Examples:\n * ```\n * api.getKfSession('openidxxx', callback);\n * ```\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *    \"createtime\" : 123456789,\n *    \"kf_account\" : \"test1@test\"\n * }\n * ```\n * @param {String} openid 粉丝的openid\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getKfSession', function (openid, callback) {\n  //https://api.weixin.qq.com/customservice/kfsession/getsession?access_token=ACCESS_TOKEN&openid=OPENID\n  var url = this.endpoint + '/customservice/kfsession/getsession?access_token=' + this.token.accessToken + '&openid=' + openid;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n\n/**\n * 获取客服会话列表\n * 详细请看：https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1458044820&token=&lang=zh_CN\n *\n * Examples:\n * ```\n * api.getKfSessionList('openidxxx', callback);\n * ```\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *    \"sessionlist\" : [\n *       {\n *          \"createtime\" : 123456789,\n *          \"openid\" : \"OPENID\"\n *       },\n *       {\n *          \"createtime\" : 123456789,\n *          \"openid\" : \"OPENID\"\n *       }\n *    ]\n * }\n * ```\n * @param {String} account 完整客服帐号，格式为：帐号前缀@公众号微信号\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getKfSessionList', function (account, callback) {\n  //https://api.weixin.qq.com/customservice/kfsession/getsessionlist?access_token=ACCESS_TOKEN&kf_account=KFACCOUNT\n  var url = this.endpoint + '/customservice/kfsession/getsessionlist?access_token=' + this.token.accessToken + '&kf_account=' + account;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n\n/**\n * 获取未接入会话列表\n * 详细请看：https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1458044820&token=&lang=zh_CN\n *\n * Examples:\n * ```\n * api.getKfSessionWaitCase(callback);\n * ```\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *    \"count\" : 150,                    //未接入会话数量\n *    \"waitcaselist\" : [                //未接入会话列表，最多返回100条数据，按照来访顺序\n *       {\n *          \"latest_time\" : 123456789,\n *          \"openid\" : \"OPENID\"\n *       },\n *       {\n *          \"latest_time\" : 123456789,\n *          \"openid\" : \"OPENID\"\n *       }\n *    ]\n * }\n * ```\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getKfSessionWaitCase', function (callback) {\n  //https://api.weixin.qq.com/customservice/kfsession/getwaitcase?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/customservice/kfsession/getwaitcase?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_mass_send.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 上传多媒体文件，分别有图片（image）、语音（voice）、视频（video）和缩略图（thumb）\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.uploadNews(news, callback);\n * ```\n * News:\n * ```\n * {\n *  \"articles\": [\n *    {\n *      \"thumb_media_id\":\"qI6_Ze_6PtV7svjolgs-rN6stStuHIjs9_DidOHaj0Q-mwvBelOXCFZiq2OsIU-p\",\n *      \"author\":\"xxx\",\n *      \"title\":\"Happy Day\",\n *      \"content_source_url\":\"www.qq.com\",\n *      \"content\":\"content\",\n *      \"digest\":\"digest\",\n *      \"show_cover_pic\":\"1\"\n *   },\n *   {\n *      \"thumb_media_id\":\"qI6_Ze_6PtV7svjolgs-rN6stStuHIjs9_DidOHaj0Q-mwvBelOXCFZiq2OsIU-p\",\n *      \"author\":\"xxx\",\n *      \"title\":\"Happy Day\",\n *      \"content_source_url\":\"www.qq.com\",\n *      \"content\":\"content\",\n *      \"digest\":\"digest\",\n *      \"show_cover_pic\":\"0\"\n *   }\n *  ]\n * }\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"type\":\"news\",\n *  \"media_id\":\"CsEf3ldqkAYJAU6EJeIkStVDSvffUJ54vqbThMgplD-VJXXof6ctX5fI6-aYyUiQ\",\n *  \"created_at\":1391857799\n * }\n * ```\n *\n * @param {Object} news 图文消息对象\n * @param {Function} callback 回调函数\n */\nexports.uploadNews = function (news, callback) {\n  this.preRequest(this._uploadNews, arguments);\n};\n\n/*!\n * 上传图文消息的未封装版本\n */\nexports._uploadNews = function (news, callback) {\n  // https://api.weixin.qq.com/cgi-bin/media/uploadnews?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/cgi-bin/media/uploadnews?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(news), wrapper(callback));\n};\n\n/**\n * 将通过上传下载多媒体文件得到的视频media_id变成视频素材\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.uploadMPVideo(opts, callback);\n * ```\n * Opts:\n * ```\n * {\n *  \"media_id\": \"rF4UdIMfYK3efUfyoddYRMU50zMiRmmt_l0kszupYh_SzrcW5Gaheq05p_lHuOTQ\",\n *  \"title\": \"TITLE\",\n *  \"description\": \"Description\"\n * }\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"type\":\"video\",\n *  \"media_id\":\"IhdaAQXuvJtGzwwc0abfXnzeezfO0NgPK6AQYShD8RQYMTtfzbLdBIQkQziv2XJc\",\n *  \"created_at\":1391857799\n * }\n * ```\n *\n * @param {Object} opts 待上传为素材的视频\n * @param {Function} callback 回调函数\n */\nexports.uploadMPVideo = function (opts, callback) {\n  this.preRequest(this._uploadMPVideo, arguments);\n};\n\n/*!\n * 上传视频消息的未封装版本\n */\nexports._uploadMPVideo = function (opts, callback) {\n  // https://file.api.weixin.qq.com/cgi-bin/media/uploadvideo?access_token=ACCESS_TOKEN\n  var url = this.fileServerPrefix + 'media/uploadvideo?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(opts), wrapper(callback));\n};\n\n/**\n * 群发消息，分别有图文（news）、文本(text)、语音（voice）、图片（image）和视频（video）\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.massSend(opts, receivers, callback);\n * ```\n * opts:\n * ```\n * {\n *  \"image\":{\n *    \"media_id\":\"123dsdajkasd231jhksad\"\n *  },\n *  \"msgtype\":\"image\"\n * }\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"send job submission success\",\n *  \"msg_id\":34182\n * }\n * ```\n *\n * @param {Object} opts 待发送的数据\n * @param {String|Array} receivers 接收人。一个组，或者openid列表\n * @param {Function} callback 回调函数\n */\nexports.massSend = function (opts, receivers, callback) {\n  this.preRequest(this._massSend, arguments);\n};\n\n/*!\n * 群发消息的未封装版本\n */\nexports._massSend = function (opts, receivers, callback) {\n  var url;\n  if (Array.isArray(receivers)) {\n    opts.touser = receivers;\n    url = this.endpoint + '/cgi-bin/message/mass/send?access_token=' + this.token.accessToken;\n  } else {\n    if (typeof receivers === 'boolean') {\n      opts.filter = {\n        'is_to_all': receivers\n      };\n    } else {\n      opts.filter = {\n        'group_id': receivers\n      };\n    }\n    url = this.endpoint + '/cgi-bin/message/mass/sendall?access_token=' + this.token.accessToken;\n  }\n  // https://api.weixin.qq.com/cgi-bin/message/mass/sendall?access_token=ACCESS_TOKEN\n  this.request(url, postJSON(opts), wrapper(callback));\n};\n\n/**\n * 群发图文（news）消息\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.massSendNews(mediaId, receivers, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"send job submission success\",\n *  \"msg_id\":34182\n * }\n * ```\n *\n * @param {String} mediaId 图文消息的media id\n * @param {String|Array|Boolean} receivers 接收人。一个组，或者openid列表, 或者true（群发给所有人）\n * @param {Function} callback 回调函数\n */\nexports.massSendNews = function (mediaId, receivers, callback) {\n  var opts = {\n    'mpnews': {\n      'media_id': mediaId\n    },\n    'msgtype': 'mpnews'\n  };\n  this.massSend(opts, receivers, callback);\n};\n\n/**\n * 群发文字（text）消息\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.massSendText(content, receivers, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"send job submission success\",\n *  \"msg_id\":34182\n * }\n * ```\n *\n * @param {String} content 文字消息内容\n * @param {String|Array} receivers 接收人。一个组，或者openid列表\n * @param {Function} callback 回调函数\n */\nexports.massSendText = function (content, receivers, callback) {\n  var opts = {\n    'text': {\n      'content': content\n    },\n    'msgtype': 'text'\n  };\n  this.massSend(opts, receivers, callback);\n};\n\n/**\n * 群发声音（voice）消息\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.massSendVoice(media_id, receivers, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"send job submission success\",\n *  \"msg_id\":34182\n * }\n * ```\n *\n * @param {String} mediaId 声音media id\n * @param {String|Array} receivers 接收人。一个组，或者openid列表\n * @param {Function} callback 回调函数\n */\nexports.massSendVoice = function (mediaId, receivers, callback) {\n  var opts = {\n    'voice': {\n      'media_id': mediaId\n    },\n    'msgtype': 'voice'\n  };\n  this.massSend(opts, receivers, callback);\n};\n\n/**\n * 群发图片（image）消息\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.massSendImage(media_id, receivers, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"send job submission success\",\n *  \"msg_id\":34182\n * }\n * ```\n *\n * @param {String} mediaId 图片media id\n * @param {String|Array} receivers 接收人。一个组，或者openid列表\n * @param {Function} callback 回调函数\n */\nexports.massSendImage = function (mediaId, receivers, callback) {\n  var opts = {\n    'image': {\n      'media_id': mediaId\n    },\n    'msgtype': 'image'\n  };\n  this.massSend(opts, receivers, callback);\n};\n\n/**\n * 群发视频（video）消息\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.massSendVideo(mediaId, receivers, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"send job submission success\",\n *  \"msg_id\":34182\n * }\n * ```\n *\n * @param {String} mediaId 视频media id\n * @param {String|Array} receivers 接收人。一个组，或者openid列表\n * @param {Function} callback 回调函数\n */\nexports.massSendVideo = function (mediaId, receivers, callback) {\n  var opts = {\n    'mpvideo': {\n      'media_id': mediaId\n    },\n    'msgtype': 'mpvideo'\n  };\n  this.massSend(opts, receivers, callback);\n};\n\n/**\n * 群发视频（video）消息，直接通过上传文件得到的media id进行群发（自动生成素材）\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.massSendMPVideo(data, receivers, callback);\n * ```\n * Data:\n * ```\n * {\n *  \"media_id\": \"rF4UdIMfYK3efUfyoddYRMU50zMiRmmt_l0kszupYh_SzrcW5Gaheq05p_lHuOTQ\",\n *  \"title\": \"TITLE\",\n *  \"description\": \"Description\"\n * }\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"send job submission success\",\n *  \"msg_id\":34182\n * }\n * ```\n *\n * @param {Object} data 视频数据\n * @param {String|Array} receivers 接收人。一个组，或者openid列表\n * @param {Function} callback 回调函数\n */\nexports.massSendMPVideo = function (data, receivers, callback) {\n  var that = this;\n  // 自动帮转视频的media_id\n  this.uploadMPVideo(data, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n    that.massSendVideo(result.media_id, receivers, callback);\n  });\n};\n\n/**\n * 删除群发消息\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.deleteMass(message_id, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"ok\"\n * }\n * ```\n *\n * @param {String} messageId 待删除群发的消息id\n * @param {Function} callback 回调函数\n */\nexports.deleteMass = function (messageId, callback) {\n  this.preRequest(this._deleteMass, arguments);\n};\n\nexports._deleteMass = function (messageId, callback) {\n  var opts = {\n    msg_id: messageId\n  };\n  var url = this.endpoint + '/cgi-bin/message/mass/delete?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(opts), wrapper(callback));\n};\n\n/**\n * 预览接口，预览图文消息\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.previewNews(openid, mediaId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"send job submission success\",\n *  \"msg_id\": 34182\n * }\n * ```\n *\n * @param {String} openid 用户openid\n * @param {String} mediaId 图文消息mediaId\n * @param {Function} callback 回调函数\n */\nexports.previewNews = function (openid, mediaId, callback) {\n  this.preRequest(this._previewNews, arguments);\n};\n\nexports._previewNews = function (openid, mediaId, callback) {\n  var opts = {\n    'touser': openid,\n    'mpnews': {\n      'media_id': mediaId\n    },\n    'msgtype': 'mpnews'\n  };\n  var url = this.endpoint + '/cgi-bin/message/mass/preview?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(opts), wrapper(callback));\n};\n\n/**\n * 预览接口，预览文本消息\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.previewText(openid, content, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"send job submission success\",\n *  \"msg_id\": 34182\n * }\n * ```\n *\n * @param {String} openid 用户openid\n * @param {String} content 文本消息\n * @param {Function} callback 回调函数\n */\nexports.previewText = function (openid, content, callback) {\n  this.preRequest(this._previewText, arguments);\n};\n\nexports._previewText = function (openid, content, callback) {\n  var opts = {\n    'touser': openid,\n    'text': {\n      'content': content\n    },\n    'msgtype':'text'\n  };\n  var url = this.endpoint + '/cgi-bin/message/mass/preview?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(opts), wrapper(callback));\n};\n\n/**\n * 预览接口，预览语音消息\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.previewVoice(openid, mediaId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"send job submission success\",\n *  \"msg_id\": 34182\n * }\n * ```\n *\n * @param {String} openid 用户openid\n * @param {String} mediaId 语音mediaId\n * @param {Function} callback 回调函数\n */\nexports.previewVoice = function (openid, mediaId, callback) {\n  this.preRequest(this._previewVoice, arguments);\n};\n\nexports._previewVoice = function (openid, mediaId, callback) {\n  var opts = {\n    'touser': openid,\n    'voice': {\n      'media_id': mediaId\n    },\n    'msgtype': 'voice'\n  };\n  var url = this.endpoint + '/cgi-bin/message/mass/preview?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(opts), wrapper(callback));\n};\n\n/**\n * 预览接口，预览图片消息\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.previewImage(openid, mediaId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"send job submission success\",\n *  \"msg_id\": 34182\n * }\n * ```\n *\n * @param {String} openid 用户openid\n * @param {String} mediaId 图片mediaId\n * @param {Function} callback 回调函数\n */\nexports.previewImage = function (openid, mediaId, callback) {\n  this.preRequest(this._previewImage, arguments);\n};\n\nexports._previewImage = function (openid, mediaId, callback) {\n  var opts = {\n    'touser': openid,\n    'image': {\n      'media_id': mediaId\n    },\n    'msgtype': 'image'\n  };\n  var url = this.endpoint + '/cgi-bin/message/mass/preview?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(opts), wrapper(callback));\n};\n\n/**\n * 预览接口，预览视频消息\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.previewVideo(openid, mediaId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"send job submission success\",\n *  \"msg_id\": 34182\n * }\n * ```\n *\n * @param {String} openid 用户openid\n * @param {String} mediaId 视频mediaId\n * @param {Function} callback 回调函数\n */\nexports.previewVideo = function (openid, mediaId, callback) {\n  this.preRequest(this._previewVideo, arguments);\n};\n\nexports._previewVideo = function (openid, mediaId, callback) {\n  var opts = {\n    'touser': openid,\n    'mpvideo': {\n      'media_id': mediaId\n    },\n    'msgtype': 'mpvideo'\n  };\n  var url = this.endpoint + '/cgi-bin/message/mass/preview?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(opts), wrapper(callback));\n};\n\n/**\n * 查询群发消息状态\n * 详情请见：<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>\n * Examples:\n * ```\n * api.getMassMessageStatus(messageId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"msg_id\":201053012,\n *  \"msg_status\":\"SEND_SUCCESS\"\n * }\n * ```\n *\n * @param {String} messageId 消息ID\n * @param {Function} callback 回调函数\n */\nexports.getMassMessageStatus = function (messageId, callback) {\n  this.preRequest(this._getMassMessageStatus, arguments);\n};\n\nexports._getMassMessageStatus = function (messageId, callback) {\n  var opts = {\n    'msg_id': messageId\n  };\n  var url = this.endpoint + '/cgi-bin/message/mass/get?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(opts), wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_shop_goods.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 增加商品\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.createGoods(goods, callback);\n * ```\n * Goods:\n * ```\n * {\n *  \"product_base\":{\n *    \"category_id\":[\n *      \"537074298\"\n *    ],\n *    \"property\":[\n *      {\"id\":\"1075741879\",\"vid\":\"1079749967\"},\n *      {\"id\":\"1075754127\",\"vid\":\"1079795198\"},\n *      {\"id\":\"1075777334\",\"vid\":\"1079837440\"}\n *    ],\n *    \"name\":\"testaddproduct\",\n *    \"sku_info\":[\n *      {\n *        \"id\":\"1075741873\",\n *        \"vid\":[\"1079742386\",\"1079742363\"]\n *      }\n *    ],\n *    \"main_img\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl2iccsvYbHvnphkyGtnvjD3ulEKogfsiaua49pvLfUS8Ym0GSYjViaLic0FD3vN0V8PILcibEGb2fPfEOmw/0\",\n *    \"img\":[\n *      \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl2iccsvYbHvnphkyGtnvjD3ulEKogfsiaua49pvLfUS8Ym0GSYjViaLic0FD3vN0V8PILcibEGb2fPfEOmw/0\"\n *    ],\n *    \"detail\":[\n *      {\"text\":\"testfirst\"},\n *      {\"img\": 4whpV1VZl2iccsvYbHvnphkyGtnvjD3ul1UcLcwxrFdwTKYhH9Q5YZoCfX4Ncx655ZK6ibnlibCCErbKQtReySaVA/0\"},\n *      {\"text\":\"testagain\"}\n *    ],\n *    \"buy_limit\":10\n *  },\n *  \"sku_list\":[\n *    {\n *      \"sku_id\":\"1075741873:1079742386\",\n *      \"price\":30,\n *      \"icon_url\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl28bJj62XgfHPibY3ORKicN1oJ4CcoIr4BMbfA8LqyyjzOZzqrOGz3f5K Wq1QGP3fo6TOTSYD3TBQjuw/0\",\n *      \"product_code\":\"testing\",\n *      \"ori_price\":9000000,\n *      \"quantity\":800\n *    },\n *    {\n *      \"sku_id\":\"1075741873:1079742363\",\n *      \"price\":30,\n *      \"icon_url\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl28bJj62XgfHPibY3ORKicN1oJ4CcoIr4BMbfA8LqyyjzOZzqrOGz3f5K Wq1QGP3fo6TOTSYD3TBQjuw/0\",\n *      \"product_code\":\"testingtesting\",\n *      \"ori_price\":9000000,\n *      \"quantity\":800\n *    }\n *  ],\n *  \"attrext\":{\n *    \"location\":{\n *      \"country\":\"中国\",\n *      \"province\":\"广东省\",\n *      \"city\":\"广州市\",\n *      \"address\":\"T.I.T创意园\"\n *    },\n *    \"isPostFree\":0,\n *    \"isHasReceipt\":1,\n *    \"isUnderGuaranty\":0,\n *    \"isSupportReplace\":0\n *  },\n *  \"delivery_info\":{\n *    \"delivery_type\":0,\n *    \"template_id\":0,\n *    \"express\":[\n *      {\"id\":10000027,\"price\":100},\n *      {\"id\":10000028,\"price\":100},\n *      {\"id\":10000029,\"price\":100}\n *    ]\n *  }\n * }\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\",\n *  \"product_id\": \"pDF3iYwktviE3BzU3BKiSWWi9Nkw\"\n * }\n * ```\n * @param {Object} goods 商品信息\n * @param {Function} callback 回调函数\n */\nexports.createGoods = function (goods, callback) {\n  this.preRequest(this._createGoods, arguments);\n};\n\n/*!\n * 增加商品的未封装版本\n */\nexports._createGoods = function (goods, callback) {\n  var url = this.endpoint + '/merchant/create?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(goods), wrapper(callback));\n};\n\n/**\n * 删除商品\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.deleteGoods(productId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\",\n * }\n * ```\n * @param {String} productId 商品Id\n * @param {Function} callback 回调函数\n */\nexports.deleteGoods = function (productId, callback) {\n  this.preRequest(this._deleteGoods, arguments);\n};\n\n/*!\n * 删除商品的未封装版本\n */\nexports._deleteGoods = function (productId, callback) {\n  var data = {\n    'product_id': productId\n  };\n  var url = this.endpoint + '/merchant/del?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 修改商品\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.updateGoods(goods, callback);\n * ```\n * Goods:\n * ```\n * {\n *  \"product_id\":\"pDF3iY6Kr_BV_CXaiYysoGqJhppQ\",\n *  \"product_base\":{\n *    \"category_id\":[\n *      \"537074298\"\n *    ],\n *    \"property\":[\n *      {\"id\":\"1075741879\",\"vid\":\"1079749967\"},\n *      {\"id\":\"1075754127\",\"vid\":\"1079795198\"},\n *      {\"id\":\"1075777334\",\"vid\":\"1079837440\"}\n *    ],\n *    \"name\":\"testaddproduct\",\n *    \"sku_info\":[\n *      {\n *        \"id\":\"1075741873\",\n *        \"vid\":[\"1079742386\",\"1079742363\"]\n *      }\n *    ],\n *    \"main_img\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl2iccsvYbHvnphkyGtnvjD3ulEKogfsiaua49pvLfUS8Ym0GSYjViaLic0FD3vN0V8PILcibEGb2fPfEOmw/0\",\n *    \"img\":[\n *      \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl2iccsvYbHvnphkyGtnvjD3ulEKogfsiaua49pvLfUS8Ym0GSYjViaLic0FD3vN0V8PILcibEGb2fPfEOmw/0\"\n *    ],\n *    \"detail\":[\n *      {\"text\":\"testfirst\"},\n *      {\"img\": 4whpV1VZl2iccsvYbHvnphkyGtnvjD3ul1UcLcwxrFdwTKYhH9Q5YZoCfX4Ncx655ZK6ibnlibCCErbKQtReySaVA/0\"},\n *      {\"text\":\"testagain\"}\n *    ],\n *    \"buy_limit\":10\n *  },\n *  \"sku_list\":[\n *    {\n *      \"sku_id\":\"1075741873:1079742386\",\n *      \"price\":30,\n *      \"icon_url\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl28bJj62XgfHPibY3ORKicN1oJ4CcoIr4BMbfA8LqyyjzOZzqrOGz3f5K Wq1QGP3fo6TOTSYD3TBQjuw/0\",\n *      \"product_code\":\"testing\",\n *      \"ori_price\":9000000,\n *      \"quantity\":800\n *    },\n *    {\n *      \"sku_id\":\"1075741873:1079742363\",\n *      \"price\":30,\n *      \"icon_url\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl28bJj62XgfHPibY3ORKicN1oJ4CcoIr4BMbfA8LqyyjzOZzqrOGz3f5K Wq1QGP3fo6TOTSYD3TBQjuw/0\",\n *      \"product_code\":\"testingtesting\",\n *      \"ori_price\":9000000,\n *      \"quantity\":800\n *    }\n *  ],\n *  \"attrext\":{\n *    \"location\":{\n *      \"country\":\"中国\",\n *      \"province\":\"广东省\",\n *      \"city\":\"广州市\",\n *      \"address\":\"T.I.T创意园\"\n *    },\n *    \"isPostFree\":0,\n *    \"isHasReceipt\":1,\n *    \"isUnderGuaranty\":0,\n *    \"isSupportReplace\":0\n *  },\n *  \"delivery_info\":{\n *    \"delivery_type\":0,\n *    \"template_id\":0,\n *    \"express\":[\n *      {\"id\":10000027,\"price\":100},\n *      {\"id\":10000028,\"price\":100},\n *      {\"id\":10000029,\"price\":100}\n *    ]\n *  }\n * }\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n * }\n * ```\n * @param {Object} goods 商品信息\n * @param {Function} callback 回调函数\n */\nexports.updateGoods = function (goods, callback) {\n  this.preRequest(this._updateGoods, arguments);\n};\n\n/*!\n * 修改商品的未封装版本\n */\nexports._updateGoods = function (goods, callback) {\n  var url = this.endpoint + '/merchant/update?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(goods), wrapper(callback));\n};\n\n/**\n * 查询商品\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.getGoods(productId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\",\n *  \"product_info\":{\n *    \"product_id\":\"pDF3iY6Kr_BV_CXaiYysoGqJhppQ\",\n *    \"product_base\":{\n *      \"name\":\"testaddproduct\",\n *      \"category_id\":[537074298],\n *      \"img\":[\n *        \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl2iccsvYbHvnphkyGtnvjD3ulEKogfsiaua49pvLfUS8Ym0GSYjViaLic0FD3vN0V8PILcibEGb2fPfEOmw/0\"\n *      ],\n *      \"property\":[\n *        {\"id\":\"品牌\",\"vid\":\"Fujifilm/富⼠士\"},\n *        {\"id\":\"屏幕尺⼨寸\",\"vid\":\"1.8英⼨寸\"},\n *        {\"id\":\"防抖性能\",\"vid\":\"CCD防抖\"}\n *      ],\n *      \"sku_info\":[\n *        {\n *          \"id\":\"1075741873\",\n *          \"vid\":[\n *            \"1079742386\",\n *            \"1079742363\"\n *          ]\n *        }\n *      ],\n *      \"buy_limit\":10,\n *      \"main_img\": 4whpV1VZl2iccsvYbHvnphkyGtnvjD3ulEKogfsiaua49pvLfUS8Ym0GSYjViaLic 0FD3vN0V8PILcibEGb2fPfEOmw/0\",\n *      \"detail_html\": \"<div class=\\\"item_pic_wrp\\\" style= \\\"margin-bottom:8px;font-size:0;\\\"><img class=\\\"item_pic\\\" style= \\\"width:100%;\\\" alt=\\\"\\\" src=\\\"http://mmbiz.qpic.cn/mmbiz/ 4whpV1VZl2iccsvYbHvnphkyGtnvjD3ulEKogfsiaua49pvLfUS8Ym0GSYjViaLic 0FD3vN0V8PILcibEGb2fPfEOmw/0\\\" ></div><p style=\\\"margin-bottom: 11px;margin-top:11px;\\\">test</p><div class=\\\"item_pic_wrp\\\" style=\\\"margin-bottom:8px;font-size:0;\\\"><img class=\\\"item_pic\\\" style=\\\"width:100%;\\\" alt=\\\"\\\" src=\\\"http://mmbiz.qpic.cn/mmbiz/ 4whpV1VZl2iccsvYbHvnphkyGtnvjD3ul1UcLcwxrFdwTKYhH9Q5YZoCfX4Ncx655 ZK6ibnlibCCErbKQtReySaVA/0\\\" ></div><p style=\\\"margin-bottom: 11px;margin-top:11px;\\\">test again</p>\"\n *    },\n *    \"sku_list\":[\n *      {\n *        \"sku_id\":\"1075741873:1079742386\",\n *        \"price\":30,\n *        \"icon_url\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl2iccsvYbHvnphkyGtnvjD3ulEKogfsiaua49pvLfUS8Ym0GSYjViaLic0FD3vN0V8PILcibEGb2fPfEOmw/0\",\n *        \"quantity\":800,\n *        \"product_code\":\"testing\",\n *        \"ori_price\":9000000\n *      },\n *      {\n *        \"sku_id\":\"1075741873:1079742363\",\n *        \"price\":30,\n *        \"icon_url\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl28bJj62XgfHPibY3ORKicN1oJ4CcoIr4BMbfA8LqyyjzOZzqrOGz3f5KWq1QGP3fo6TOTSYD3TBQjuw/0\",\n *        \"quantity\":800,\n *        \"product_code\":\"testingtesting\",\n *        \"ori_price\":9000000\n *      }\n *    ],\n *    \"attrext\":{\n *      \"isPostFree\":0,\n *      \"isHasReceipt\":1,\n *      \"isUnderGuaranty\":0,\n *      \"isSupportReplace\":0,\n *      \"location\":{\n *        \"country\":\"中国\",\n *        \"province\":\"广东省\",\n *        \"city\":\"⼲州市\",\n *        \"address\":\"T.I.T创意园\"\n *      }\n *    },\n *    \"delivery_info\":{\n *      \"delivery_type\":1,\n *      \"template_id\":103312920\n *    }\n *  }\n * }\n * ```\n * @param {String} productId 商品Id\n * @param {Function} callback 回调函数\n */\nexports.getGoods = function (productId, callback) {\n  this.preRequest(this._getGoods, arguments);\n};\n\n/*!\n * 根据状态获取商品列表\n */\nexports._getGoods = function (productId, callback) {\n  var url = this.endpoint + '/merchant/get?product_id=' + productId + '&access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n};\n\n/**\n * 获取指定状态的所有商品\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.deleteGoods(productId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\",\n *  \"products_info\": [\n *    {\n *      \"product_base\": ...,\n *      \"sku_list\": ...,\n *      \"attrext\": ...,\n *      \"delivery_info\": ...,\n *      \"product_id\": \"pDF3iY-mql6CncpbVajaB_obC321\",\n *      \"status\": 1\n *    }\n *  ]\n * }\n * ```\n * @param {Number} status 状态码。(0-全部, 1-上架, 2-下架)\n * @param {Function} callback 回调函数\n */\nexports.getGoodsByStatus = function (status, callback) {\n  this.preRequest(this._getGoodsByStatus, arguments);\n};\n\n/*!\n * 获取指定状态的所有商品的未封装版本\n */\nexports._getGoodsByStatus = function (status, callback) {\n  var data = {status: status};\n  var url = this.endpoint + '/merchant/getbystatus?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 商品上下架\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.updateGoodsStatus(productId, status, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n * }\n * ```\n * @param {String} productId 商品Id\n * @param {Number} status 状态码。(0-全部, 1-上架, 2-下架)\n * @param {Function} callback 回调函数\n */\nexports.updateGoodsStatus = function (productId, status, callback) {\n  this.preRequest(this._updateGoodsStatus, arguments);\n};\n\n/*!\n * 商品上下架的未封装版本\n */\nexports._updateGoodsStatus = function (productId, status, callback) {\n  var data = {\n    product_id: productId,\n    status: status\n  };\n  var url = this.endpoint + '/merchant/modproductstatus?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 获取指定分类的所有子分类\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.getSubCats(catId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n *  \"cate_list\": [!\n *    {\"id\": \"537074292\",\"name\": \"数码相机\"},\n *    {\"id\": \"537074293\",\"name\": \"家⽤用摄像机\"},\n *    {\"id\": \"537074298\",! \"name\": \"单反相机\"}\n *  ]\n * }\n * ```\n * @param {Number} catId 大分类ID\n * @param {Function} callback 回调函数\n */\nexports.getSubCats = function (catId, callback) {\n  this.preRequest(this._getSubCats, arguments);\n};\n\n/*!\n * 获取指定分类的所有子分类的未封装版本\n */\nexports._getSubCats = function (catId, callback) {\n  var data = {\n    cate_id: catId\n  };\n  var url = this.endpoint + '/merchant/category/getsub?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 获取指定子分类的所有SKU\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.getSKUs(catId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n *  \"sku_table\": [\n *    {\n *      \"id\": \"1075741873\",\n *      \"name\": \"颜⾊色\",\n *      \"value_list\": [\n *        {\"id\": \"1079742375\", \"name\": \"撞⾊色\"},\n *        {\"id\": \"1079742376\",\"name\": \"桔⾊色\"}\n *      ]\n *    }\n *  ]\n * }\n * ```\n * @param {Number} catId 大分类ID\n * @param {Function} callback 回调函数\n */\nexports.getSKUs = function (catId, callback) {\n  this.preRequest(this._getSKUs, arguments);\n};\n\n/*!\n * 获取指定子分类的所有SKU的未封装版本\n */\nexports._getSKUs = function (catId, callback) {\n  var data = {\n    cate_id: catId\n  };\n  var url = this.endpoint + '/merchant/category/getsku?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 获取指定分类的所有属性\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.getProperties(catId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n *  \"properties\": [\n *    {\n *      \"id\": \"1075741879\",\n *      \"name\": \"品牌\",\n *      \"property_value\": [\n *        {\"id\": \"200050867\",\"name\": \"VIC&#38\"},\n *        {\"id\": \"200050868\",\"name\": \"Kate&#38\"},\n *        {\"id\": \"200050971\",\"name\": \"M&#38\"},\n *        {\"id\": \"200050972\",\"name\": \"Black&#38\"}\n *      ]\n *    },\n *    {\n *      \"id\": \"123456789\",\n *      \"name\": \"颜⾊色\",\n *      \"property_value\": ...\n *    }\n *  ]\n * }\n * ```\n * @param {Number} catId 分类ID\n * @param {Function} callback 回调函数\n */\nexports.getProperties = function (catId, callback) {\n  this.preRequest(this._getProperties, arguments);\n};\n\n/*!\n * 获取指定分类的所有属性的未封装版本\n */\nexports._getProperties = function (catId, callback) {\n  var data = {\n    cate_id: catId\n  };\n  var url = this.endpoint + '/merchant/category/getproperty?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_shop_stock.js":"'use strict';\n\n// 库存管理接口\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 增加库存\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.updateStock(10, productId, sku, callback); // 增加10件库存\n * api.updateStock(-10, productId, sku, callback); // 减少10件库存\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n * }\n * ```\n * @param {Number} number 增加或者删除的数量\n * @param {String} productId 商品ID\n * @param {String} sku SKU信息\n * @param {Function} callback 回调函数\n */\nexports.updateStock = function (number, productId, sku, callback) {\n  this.preRequest(this._updateStock, arguments);\n};\n\n/*!\n * 更新商品库存的未封装版本\n */\nexports._updateStock = function (number, productId, sku, callback) {\n  var url;\n  if (number > 0) {\n    url = this.endpoint + '/merchant/stock/add?access_token=' + this.token.accessToken;\n  } else {\n    url = this.endpoint + '/merchant/stock/reduce?access_token=' + this.token.accessToken;\n  }\n  var data = {\n    'product_id': productId,\n    'sku_info': sku,\n    'quantity': Math.abs(number)\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_shop_express.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 增加邮费模板\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.addExpress(express, callback);\n * ```\n * Express:\n * ```\n * {\n *  \"delivery_template\": {\n *    \"Name\": \"testexpress\",\n *    \"Assumer\": 0,\n *    \"Valuation\": 0,\n *    \"TopFee\": [\n *      {\n *        \"Type\": 10000027,\n *        \"Normal\": {\n *          \"StartStandards\": 1,\n *          \"StartFees\": 2,\n *          \"AddStandards\": 3,\n *          \"AddFees\": 1\n *        },\n *        \"Custom\": [\n *          {\n *            \"StartStandards\": 1,\n *            \"StartFees\": 100,\n *            \"AddStandards\": 1,\n *            \"AddFees\": 3,\n *            \"DestCountry\": \"中国\",\n *            \"DestProvince\": \"广东省\",\n *            \"DestCity\": \"广州市\"\n *          }\n *        ]\n *      },\n *      {\n *        \"Type\": 10000028,\n *        \"Normal\": {\n *          \"StartStandards\": 1,\n *          \"StartFees\": 3,\n *          \"AddStandards\": 3,\n *          \"AddFees\": 2\n *        },\n *        \"Custom\": [\n *          {\n *            \"StartStandards\": 1,\n *            \"StartFees\": 10,\n *            \"AddStandards\": 1,\n *            \"AddFees\": 30,\n *            \"DestCountry\": \"中国\",\n *            \"DestProvince\": \"广东省\",\n *            \"DestCity\": \"广州市\"\n *          }\n *        ]\n *      },\n *      {\n *        \"Type\": 10000029,\n *        \"Normal\": {\n *          \"StartStandards\": 1,\n *          \"StartFees\": 4,\n *          \"AddStandards\": 3,\n *          \"AddFees\": 3\n *        },\n *        \"Custom\": [\n *          {\n *            \"StartStandards\": 1,\n *            \"StartFees\": 8,\n *            \"AddStandards\": 2,\n *            \"AddFees\": 11,\n *            \"DestCountry\": \"中国\",\n *            \"DestProvince\": \"广东省\",\n *            \"DestCity\": \"广州市\"\n *          }\n *        ]\n *      }\n *    ]\n *  }\n * }\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n *  \"template_id\": 123456\n * }\n * ```\n * @param {Object} express 邮费模版\n * @param {Function} callback 回调函数\n */\nexports.addExpressTemplate = function (express, callback) {\n  this.preRequest(this._addExpressTemplate, arguments);\n};\n\n/*!\n * 增加邮费模板的未封装版本\n */\nexports._addExpressTemplate = function (express, callback) {\n  var url = this.endpoint + '/merchant/express/add?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(express), wrapper(callback));\n};\n\n/**\n * 修改邮费模板\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.deleteExpressTemplate(templateId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n * }\n * ```\n * @param {Number} templateId 邮费模版ID\n * @param {Function} callback 回调函数\n */\nexports.deleteExpressTemplate = function (templateId, callback) {\n  this.preRequest(this._deleteExpressTemplate, arguments);\n};\n\n/*!\n * 增加邮费模板的未封装版本\n */\nexports._deleteExpressTemplate = function (templateId, callback) {\n  var data = {\n    template_id: templateId\n  };\n  var url = this.endpoint + '/merchant/express/del?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 修改邮费模板\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.updateExpressTemplate(template, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Express:\n * ```\n * {\n *  \"template_id\": 123456,\n *  \"delivery_template\": ...\n * }\n * ```\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n * }\n * ```\n * @param {Object} template 邮费模版\n * @param {Function} callback 回调函数\n */\nexports.updateExpressTemplate = function (template, callback) {\n  this.preRequest(this._updateExpressTemplate, arguments);\n};\n\n/*!\n * 修改邮费模板的未封装版本\n */\nexports._updateExpressTemplate = function (template, callback) {\n  var url = this.endpoint + '/merchant/express/del?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(template), wrapper(callback));\n};\n\n/**\n * 获取指定ID的邮费模板\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.getExpressTemplateById(templateId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\",\n *  \"template_info\": {\n *    \"Id\": 103312916,\n *    \"Name\": \"testexpress\",\n *    \"Assumer\": 0,\n *    \"Valuation\": 0,\n *    \"TopFee\": [\n *      {\n *        \"Type\": 10000027,\n *        \"Normal\": {\n *          \"StartStandards\": 1,\n *          \"StartFees\": 2,\n *          \"AddStandards\": 3,\n *          \"AddFees\": 1\n *        },\n *        \"Custom\": [\n *          {\n *            \"StartStandards\": 1,\n *            \"StartFees\": 1000,\n *            \"AddStandards\": 1,\n *            \"AddFees\": 3,\n *            \"DestCountry\": \"中国\",\n *            \"DestProvince\": \"广东省\",\n *            \"DestCity\": \"广州市\"\n *          }\n *        ]\n *      },\n *      ...\n *    ]\n *  }\n * }\n * ```\n * @param {Number} templateId 邮费模版Id\n * @param {Function} callback 回调函数\n */\nexports.getExpressTemplateById = function (templateId, callback) {\n  this.preRequest(this._getExpressTemplateById, arguments);\n};\n\n/*!\n * 获取指定ID的邮费模板的未封装版本\n */\nexports._getExpressTemplateById = function (templateId, callback) {\n  var data = {\n    template_id: templateId\n  };\n  var url = this.endpoint + '/merchant/express/getbyid?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 获取所有邮费模板的未封装版本\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.getAllExpressTemplates(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\",\n *  \"templates_info\": [\n *    {\n *      \"Id\": 103312916,\n *      \"Name\": \"testexpress1\",\n *      \"Assumer\": 0,\n *      \"Valuation\": 0,\n *      \"TopFee\": [...],\n *    },\n *    {\n *      \"Id\": 103312917,\n *      \"Name\": \"testexpress2\",\n *      \"Assumer\": 0,\n *      \"Valuation\": 2,\n *      \"TopFee\": [...],\n *    },\n *    {\n *      \"Id\": 103312918,\n *      \"Name\": \"testexpress3\",\n *      \"Assumer\": 0,\n *      \"Valuation\": 1,\n *      \"TopFee\": [...],\n *    }\n *  ]\n * }\n * ```\n * @param {Function} callback 回调函数\n */\nexports.getAllExpressTemplates = function (callback) {\n  this.preRequest(this._getAllExpressTemplates, arguments);\n};\n\n/*!\n * 获取所有邮费模板的未封装版本\n */\nexports._getAllExpressTemplates = function (callback) {\n  var url = this.endpoint + '/merchant/express/getall?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_shop_group.js":"'use strict';\n\n// 商品分组管理接口\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 创建商品分组\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.createGoodsGroup(groupName, productList, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\",\n *  \"group_id\": 19\n * }\n * ```\n * @param {String}      groupName 分组名\n * @param {Array}       productList 该组商品列表\n * @param {Function}    callback 回调函数\n */\nexports.createGoodsGroup = function (groupName, productList, callback) {\n  this.preRequest(this._createGoodsGroup, arguments);\n};\n\nexports._createGoodsGroup = function (groupName, productList, callback) {\n  var data = {\n    'group_detail': {\n      'group_name': groupName,\n      'product_list': productList && productList.length ? productList: []\n    }\n  };\n  var url = this.endpoint + '/merchant/group/add?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 删除商品分组\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.deleteGoodsGroup(groupId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n * }\n * ```\n * @param {String}      groupId 分组ID\n * @param {Function}    callback 回调函数\n */\n\nexports.deleteGoodsGroup = function (groupId, callback) {\n  this.preRequest(this._deleteGoodsGroup, arguments);\n};\n\nexports._deleteGoodsGroup = function (groupId, callback) {\n  var data = {\n    'group_id': groupId\n  };\n  var url = this.endpoint + '/merchant/group/del?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 修改商品分组属性\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.updateGoodsGroup(groupId, groupName, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n * }\n * ```\n * @param {String}      groupId 分组ID\n * @param {String}      groupName 分组名\n * @param {Function}    callback 回调函数\n */\nexports.updateGoodsGroup = function (groupId, groupName, callback) {\n  this.preRequest(this._updateGoodsGroup, arguments);\n};\n\nexports._updateGoodsGroup = function (groupId, groupName, callback) {\n  var data = {\n    'group_id': groupId,\n    'group_name': groupName\n  };\n  var url = this.endpoint + '/merchant/group/propertymod?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 修改商品分组内的商品\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.updateGoodsForGroup(groupId, addProductList, delProductList, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n * }\n * ```\n * @param {Object}      groupId 分组ID\n * @param {Array}       addProductList 待添加的商品数组\n * @param {Array}       delProductList 待删除的商品数组\n * @param {Function}    callback 回调函数\n */\nexports.updateGoodsForGroup = function (groupId, addProductList, delProductList, callback) {\n  this.preRequest(this._updateGoodsForGroup, arguments);\n};\n\nexports._updateGoodsForGroup = function (groupId, addProductList, delProductList, callback) {\n  var data = {\n    'group_id': groupId,\n    'product': []\n  };\n\n  if (addProductList && addProductList.length) {\n    addProductList.forEach(function (val) {\n      data.product.push({\n        'product_id': val,\n        'mod_action': 1\n      });\n    });\n  }\n\n  if (delProductList && delProductList.length) {\n    delProductList.forEach(function (val) {\n      data.product.push({\n        'product_id': val,\n        'mod_action': 0\n      });\n    });\n  }\n\n  var url = this.endpoint + '/merchant/group/productmod?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 获取所有商品分组\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.getAllGroups(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n *  \"groups_detail\": [\n *    {\n *      \"group_id\": 200077549,\n *      \"group_name\": \"新品上架\"\n *    },{\n *      \"group_id\": 200079772,\n *      \"group_name\": \"全球热卖\"\n *    }\n *  ]\n * }\n * ```\n * @param {Function}    callback 回调函数\n */\nexports.getAllGroups = function (callback) {\n  this.preRequest(this._getAllGroups, arguments);\n};\n\nexports._getAllGroups = function (callback) {\n  var url = this.endpoint + '/merchant/group/getall?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n};\n\n/**\n * 根据ID获取商品分组\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.getGroupById(groupId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n *  \"group_detail\": {\n *    \"group_id\": 200077549,\n *    \"group_name\": \"新品上架\",\n *    \"product_list\": [\n *      \"pDF3iYzZoY-Budrzt8O6IxrwIJAA\",\n *      \"pDF3iY3pnWSGJcO2MpS2Nxy3HWx8\",\n *      \"pDF3iY33jNt0Dj3M3UqiGlUxGrio\"\n *    ]\n *  }\n * }\n * ```\n * @param {String}      groupId 分组ID\n * @param {Function}    callback 回调函数\n */\nexports.getGroupById = function (groupId, callback) {\n  this.preRequest(this._getGroupById, arguments);\n};\n\nexports._getGroupById = function (groupId, callback) {\n  var data = {\n    'group_id': groupId\n  };\n  var url = this.endpoint + '/merchant/group/getbyid?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_shop_shelf.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 增加货架\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.createShelf(shelf, callback);\n * ```\n * Shelf:\n * ```\n * {\n *   \"shelf_data\": {\n *     \"module_infos\": [\n *     {\n *       \"group_info\": {\n *         \"filter\": {\n *           \"count\": 2\n *         },\n *         \"group_id\": 50\n *       },\n *       \"eid\": 1\n *     },\n *     {\n *       \"group_infos\": {\n *         \"groups\": [\n *           {\n *             \"group_id\": 49\n *           },\n *           {\n *             \"group_id\": 50\n *           },\n *           {\n *             \"group_id\": 51\n *           }\n *         ]\n *       },\n *       \"eid\": 2\n *     },\n *     {\n *       \"group_info\": {\n *         \"group_id\": 52,\n *         \"img\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl29nqqObBwFwnIX3licVPnFV5Jm64z4I0TTicv0TjN7Vl9bykUUibYKIOjicAwIt6Oy0Y6a1Rjp5Tos8tg/0\"\n *       },\n *       \"eid\": 3\n *     },\n *     {\n *       \"group_infos\": {\n *         \"groups\": [\n *           {\n *             \"group_id\": 49,\n *             \"img\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl29nqqObBwFwnIX3licVPnFV5uUQx7TLx4tB9qZfbe3JmqR4NkkEmpb5LUWoXF1ek9nga0IkeSSFZ8g/0\"\n *           },\n *           {\n *             \"group_id\": 50,\n *             \"img\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl29nqqObBwFwnIX3licVPnFV5G1kdy3ViblHrR54gbCmbiaMnl5HpLGm5JFeENyO9FEZAy6mPypEpLibLA/0\"\n *           },\n *           {\n *             \"group_id\": 52,\n *             \"img\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl29nqqObBwFwnIX3licVPnFV5uUQx7TLx4tB9qZfbe3JmqR4NkkEmpb5LUWoXF1ek9nga0IkeSSFZ8g/0\"\n *           }\n *         ]\n *       },\n *       \"eid\": 4\n *     },\n *     {\n *       \"group_infos\": {\n *         \"groups\": [\n *           {\n *             \"group_id\": 43\n *           },\n *           {\n *             \"group_id\": 44\n *           },\n *           {\n *             \"group_id\": 45\n *           },\n *           {\n *             \"group_id\": 46\n *           }\n *         ],\n *       \"img_background\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl29nqqObBwFwnIX3licVPnFV5uUQx7TLx4tB9qZfbe3JmqR4NkkEmpb5LUWoXF1ek9nga0IkeSSFZ8g/0\"\n *       },\n *       \"eid\": 5\n *     }\n *     ]\n *   },\n *   \"shelf_banner\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl2ibrWQn8zWFUh1YznsMV0XEiavFfLzDWYyvQOBBszXlMaiabGWzz5B2KhNn2IDemHa3iarmCyribYlZYyw/0\",\n *   \"shelf_name\": \"测试货架\"\n * }\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"errcode\": 0,\n *   \"errmsg\": \"success\",\n *   \"shelf_id\": 12\n * }\n * ```\n * @param {Object} shelf 货架信息\n * @param {Function} callback 回调函数\n */\nexports.createShelf = function (shelf, callback) {\n  this.preRequest(this._createShelf, arguments);\n};\n\n/*!\n * 增加货架的未封装版本\n */\nexports._createShelf = function (shelf, callback) {\n  var url = this.endpoint + '/merchant/shelf/add?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(shelf), wrapper(callback));\n};\n\n/**\n * 删除货架\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.deleteShelf(shelfId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"errcode\": 0,\n *   \"errmsg\": \"success\"\n * }\n * ```\n * @param {String} shelfId 货架Id\n * @param {Function} callback 回调函数\n */\nexports.deleteShelf = function (shelfId, callback) {\n  this.preRequest(this._deleteShelf, arguments);\n};\n\n/*!\n * 删除货架的未封装版本\n */\nexports._deleteShelf = function (shelfId, callback) {\n  var data = {\n    'shelf_id': shelfId\n  };\n  var url = this.endpoint + '/merchant/shelf/del?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 修改货架\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.updateShelf(shelf, callback);\n * ```\n * Shelf:\n * ```\n * {\n *   \"shelf_id\": 12345,\n *   \"shelf_data\": ...,\n *   \"shelf_banner\": \"http://mmbiz.qpic.cn/mmbiz/ 4whpV1VZl2ibrWQn8zWFUh1YznsMV0XEiavFfLzDWYyvQOBBszXlMaiabGWzz5B2K hNn2IDemHa3iarmCyribYlZYyw/0\",\n *   \"shelf_name\": \"货架名称\"\n * }\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"errcode\": 0,\n *   \"errmsg\": \"success\"\n * }\n * ```\n * @param {Object} shelf 货架信息\n * @param {Function} callback 回调函数\n */\nexports.updateShelf = function (shelf, callback) {\n  this.preRequest(this._updateShelf, arguments);\n};\n\n/*!\n * 修改货架的未封装版本\n */\nexports._updateShelf = function (shelf, callback) {\n  var url = this.endpoint + '/merchant/shelf/mod?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(shelf), wrapper(callback));\n};\n\n/**\n * 获取所有货架\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.getAllShelf(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"errcode\": 0,\n *   \"errmsg\": \"success\",\n *   \"shelves\": [\n *     {\n *       \"shelf_info\": {\n *       \"module_infos\": [\n *         {\n *         \"group_infos\": {\n *           \"groups\": [\n *           {\n *             \"group_id\": 200080093\n *           },\n *           {\n *             \"group_id\": 200080118\n *           },\n *           {\n *             \"group_id\": 200080119\n *           },\n *           {\n *             \"group_id\": 200080135\n *           }\n *           ],\n *           \"img_background\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl294FzPwnf9dAcaN7ButStztAZyy2yHY8pW6sTQKicIhAy5F0a2CqmrvDBjMFLtc2aEhAQ7uHsPow9A/0\"\n *         },\n *         \"eid\": 5\n *         }\n *       ]\n *       },\n *       \"shelf_banner\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl294FzPwnf9dAcaN7ButStztAZyy2yHY8pW6sTQKicIhAy5F0a2CqmrvDBjMFLtc2aEhAQ7uHsPow9A/0\",\n *       \"shelf_name\": \"新新人类\",\n *       \"shelf_id\": 22\n *     },\n *     {\n *       \"shelf_info\": {\n *       \"module_infos\": [\n *         {\n *           \"group_info\": {\n *             \"group_id\": 200080119,\n *             \"filter\": {\n *               \"count\": 4\n *             }\n *           },\n *           \"eid\": 1\n *         }\n *       ]\n *       },\n *       \"shelf_banner\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl294FzPwnf9dAcaN7ButStztAZyy2yHY8pW6sTQKicIhAy5F0a2CqmrvDBjMFLtc2aEhAQ7uHsPow9A/0\",\n *       \"shelf_name\": \"店铺\",\n *       \"shelf_id\": 23\n *     }\n *   ]\n * }\n * ```\n * @param {Function} callback 回调函数\n */\nexports.getAllShelves = function (callback) {\n  this.preRequest(this._getAllShelves, arguments);\n};\n\n/*!\n * 获取所有货架的未封装版本\n */\nexports._getAllShelves = function (callback) {\n  var url = this.endpoint + '/merchant/shelf/getall?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n};\n\n/**\n * 根据货架ID获取货架信息\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.getShelfById(shelfId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"errcode\": 0,\n *   \"errmsg\": \"success\",\n *   \"shelf_info\": {\n *     \"module_infos\": [...]\n *   },\n *   \"shelf_banner\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl2ibp2DgDXiaic6WdflMpNdInS8qUia2BztlPu1gPlCDLZXEjia2qBdjoLiaCGUno9zbs1UyoqnaTJJGeEew/0\",\n *   \"shelf_name\": \"新建货架\",\n *   \"shelf_id\": 97\n * }\n * ```\n * @param {String} shelfId 货架Id\n * @param {Function} callback 回调函数\n */\nexports.getShelfById = function (shelfId, callback) {\n  this.preRequest(this._getShelfById, arguments);\n};\n\n/*!\n * 根据货架ID获取货架信息的未封装版本\n */\nexports._getShelfById = function (shelfId, callback) {\n  var data = {\n    'shelf_id': shelfId\n  };\n  var url = this.endpoint + '/merchant/shelf/getbyid?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_shop_order.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 根据订单Id获取订单详情\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.getOrderById(orderId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"errcode\": 0,\n *   \"errmsg\": \"success\",\n *   \"order\": {\n *     \"order_id\": \"7197417460812533543\",\n *     \"order_status\": 6,\n *     \"order_total_price\": 6,\n *     \"order_create_time\": 1394635817,\n *     \"order_express_price\": 5,\n *     \"buyer_openid\": \"oDF3iY17NsDAW4UP2qzJXPsz1S9Q\",\n *     \"buyer_nick\": \"likeacat\",\n *     \"receiver_name\": \"张小猫\",\n *     \"receiver_province\": \"广东省\",\n *     \"receiver_city\": \"广州市\",\n *     \"receiver_address\": \"华景路一号南方通信大厦5楼\",\n *     \"receiver_mobile\": \"123456789\",\n *     \"receiver_phone\": \"123456789\",\n *     \"product_id\": \"pDF3iYx7KDQVGzB7kDg6Tge5OKFo\",\n *     \"product_name\": \"安莉芳E-BRA专柜女士舒适内衣蕾丝3/4薄杯聚拢上托性感文胸KB0716\",\n *     \"product_price\": 1,\n *     \"product_sku\": \"10000983:10000995;10001007:10001010\",\n *     \"product_count\": 1,\n *     \"product_img\": \"http://img2.paipaiimg.com/00000000/item-52B87243-63CCF66C00000000040100003565C1EA.0.300x300.jpg\",\n *     \"delivery_id\": \"1900659372473\",\n *     \"delivery_company\": \"059Yunda\",\n *     \"trans_id\": \"1900000109201404103172199813\"\n *   }\n * }\n * ```\n * @param {String} orderId 订单Id\n * @param {Function} callback 回调函数\n */\nexports.getOrderById = function (orderId, callback) {\n  this.preRequest(this._getOrderById, arguments);\n};\n\n/*!\n * 根据订单ID获取订单详情的未封装版本\n */\nexports._getOrderById = function (orderId, callback) {\n  var data = {\n    'order_id': orderId\n  };\n  var url = this.endpoint + '/merchant/order/getbyid?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 根据订单状态/创建时间获取订单详情\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.getOrdersByStatus([status,] [beginTime,] [endTime,] callback);\n * ```\n * Usage:\n * 当只传入callback参数时，查询所有状态，所有时间的订单\n * 当传入两个参数，第一个参数为Number类型，第二个参数为callback时，查询指定状态，所有时间的订单\n * 当传入两个参数，第一个参数为Date类型，第二个参数为callback时，查询所有状态，指定订单创建起始时间的订单(待测试)\n * 当传入三个参数，第一参数为订单状态码，第二参数为订单创建起始时间，第三参数为callback\n * 当传入四个参数，第一参数为订单状态码，第二参数为订单创建起始时间，第三参数为订单创建终止时间，第四参数为callback\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"errcode\": 0,\n *   \"errmsg\": \"success\",\n *   \"order_list\": [\n *     {\n *       \"order_id\": \"7197417460812533543\",\n *       \"order_status\": 6,\n *       \"order_total_price\": 6,\n *       \"order_create_time\": 1394635817,\n *       \"order_express_price\": 5,\n *       \"buyer_openid\": \"oDF3iY17NsDAW4UP2qzJXPsz1S9Q\",\n *       \"buyer_nick\": \"likeacat\",\n *       \"receiver_name\": \"张小猫\",\n *       \"receiver_province\": \"广东省\",\n *       \"receiver_city\": \"广州市\",\n *       \"receiver_address\": \"华景路一号南方通信大厦5楼\",\n *       \"receiver_mobile\": \"123456\",\n *       \"receiver_phone\": \"123456\",\n *       \"product_id\": \"pDF3iYx7KDQVGzB7kDg6Tge5OKFo\",\n *       \"product_name\": \"安莉芳E-BRA专柜女士舒适内衣蕾丝3/4薄杯聚拢上托性感文胸KB0716\",\n *       \"product_price\": 1,\n *       \"product_sku\": \"10000983:10000995;10001007:10001010\",\n *       \"product_count\": 1,\n *       \"product_img\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl2icND8WwMThBEcehjhDv2icY4GrDSG5RLM3B2qd9kOicWGVJcsAhvXfibhWRNoGOvCfMC33G9z5yQr2Qw/0\",\n *       \"delivery_id\": \"1900659372473\",\n *       \"delivery_company\": \"059Yunda\",\n *       \"trans_id\": \"1900000109201404103172199813\"\n *     },\n *     {\n *       \"order_id\": \"7197417460812533569\",\n *       \"order_status\": 8,\n *       \"order_total_price\": 1,\n *       \"order_create_time\": 1394636235,\n *       \"order_express_price\": 0,\n *       \"buyer_openid\": \"oDF3iY17NsDAW4UP2qzJXPsz1S9Q\",\n *       \"buyer_nick\": \"likeacat\",\n *       \"receiver_name\": \"张小猫\",\n *       \"receiver_province\": \"广东省\",\n *       \"receiver_city\": \"广州市\",\n *       \"receiver_address\": \"华景路一号南方通信大厦5楼\",\n *       \"receiver_mobile\": \"123456\",\n *       \"receiver_phone\": \"123456\",\n *       \"product_id\": \"pDF3iYx7KDQVGzB7kDg6Tge5OKFo\",\n *       \"product_name\": \"项坠333\",\n *       \"product_price\": 1,\n *       \"product_sku\": \"1075741873:1079742377\",\n *       \"product_count\": 1,\n *       \"product_img\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl2icND8WwMThBEcehjhDv2icY4GrDSG5RLM3B2qd9kOicWGVJcsAhvXfibhWRNoGOvCfMC33G9z5yQr2Qw/0\",\n *       \"delivery_id\": \"1900659372473\",\n *       \"delivery_company\": \"059Yunda\",\n *       \"trans_id\": \"1900000109201404103172199813\"\n *     }\n *   ]\n * }\n * ```\n * @param {Number} status 状态码。(无此参数-全部状态, 2-待发货, 3-已发货, 5-已完成, 8-维权中)\n * @param {Date} beginTime 订单创建时间起始时间。(无此参数则不按照时间做筛选)\n * @param {Date} endTime 订单创建时间终止时间。(无此参数则不按照时间做筛选)\n * @param {Function} callback 回调函数\n */\nexports.getOrdersByStatus = function () {\n  this.preRequest(this._getOrdersByStatus, arguments);\n};\n\n/*!\n * 根据订单状态/创建时间获取订单详情的未封装版本\n */\nexports._getOrdersByStatus = function (status, beginTime, endTime, callback) {\n  var data = {};\n  if (arguments.length === 1 && typeof status === 'function') {\n    // (callback);\n    callback = status;\n  } else if (arguments.length === 2 && typeof beginTime === 'function') {\n    callback = beginTime;\n    if (typeof status === 'number') {\n      // (status, callback)\n      data.status = status;\n    } else if (status instanceof Date) {\n      data.begintime = Math.round(status.getTime() / 1000);\n      data.endtime = Math.round(new Date().getTime() / 1000);\n    } else {\n      throw new Error('first parameter must be Number or Date');\n    }\n  } else if (arguments.length === 3 && typeof endTime === 'function') {\n    callback = endTime;\n    if (typeof status === 'number' && beginTime instanceof Date) {\n      data.status = status;\n      data.begintime = Math.round(beginTime.getTime() / 1000);\n      data.endtime = Math.round(new Date().getTime() / 1000);\n    } else {\n      throw new Error('first parameter must be Number and second parameter must be Date');\n    }\n  } else if (arguments.length === 4) {\n    data.status = status;\n    data.begintime = Math.round(beginTime.getTime() / 1000);\n    data.endtime = Math.round(endTime.getTime() / 1000);\n  }\n  var url = this.endpoint + '/merchant/order/getbyfilter?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 设置订单发货信息\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.setExpressForOrder(orderId, deliveryCompany, deliveryTrackNo, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n * }\n * ```\n * @param {String} orderId 订单Id\n * @param {String} deliveryCompany 物流公司 (物流公司Id请参考微信小店API手册)\n * @param {String} deliveryTrackNo 运单Id\n * @param {Function} callback 回调函数\n */\nexports.setExpressForOrder = function (orderId, deliveryCompany, deliveryTrackNo, callback) {\n  this.preRequest(this._setExpressForOrder, arguments);\n};\n\n/*!\n * 设置订单发货信息的未封装版本\n */\nexports._setExpressForOrder = function (orderId, deliveryCompany, deliveryTrackNo, callback) {\n  var data = {\n    'order_id': orderId,\n    'delivery_company': deliveryCompany,\n    'delivery_track_no': deliveryTrackNo\n  };\n  var url = this.endpoint + '/merchant/order/setdelivery?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 关闭订单\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.closeOrder(orderId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n * }\n * ```\n * @param {String} orderId 订单Id\n * @param {Function} callback 回调函数\n */\nexports.closeOrder = function (orderId, callback) {\n  this.preRequest(this._closeOrder, arguments);\n};\n\n/*!\n * 关闭订单的未封装版本\n */\nexports._closeOrder = function (orderId, callback) {\n  var data = {\n    'order_id': orderId\n  };\n  var url = this.endpoint + '/merchant/order/close?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_shop_common.js":"'use strict';\n\nvar path = require('path');\nvar fs = require('fs');\nvar util = require('./util');\nvar wrapper = util.wrapper;\n\n/**\n * 上传图片\n * 详细请看：<http://mp.weixin.qq.com/wiki/8/703923b7349a607f13fb3100163837f0.html>\n * Examples:\n * ```\n * api.uploadPicture('/path/to/your/img.jpg', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n *  \"image_url\": \"http://mmbiz.qpic.cn/mmbiz/4whpV1VZl2ibl4JWwwnW3icSJGqecVtRiaPxwWEIr99eYYL6AAAp1YBo12CpQTXFH6InyQWXITLvU4CU7kic4PcoXA/0\"\n * }\n * ```\n * @param {String} filepath 文件路径\n * @param {Function} callback 回调函数\n */\nexports.uploadPicture = function (filepath, callback) {\n  this.preRequest(this._uploadPicture, arguments);\n};\n\n/*!\n * 更新商品库存的未封装版本\n */\nexports._uploadPicture = function (filepath, callback) {\n  var basename = path.basename(filepath);\n  var url = this.endpoint + '/merchant/common/upload_img?access_token=' +\n    this.token.accessToken + '&filename=' + basename;\n  var reader = fs.createReadStream(filepath);\n  var opts = {\n    dataType: 'json',\n    type: 'POST',\n    stream: reader\n  };\n  this.request(url, opts, wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_payment.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 微信公众号支付: 发货通知\n * 详情请见：<http://mp.weixin.qq.com/htmledition/res/bussiness-faq/wx_mp_pay.zip> 接口文档订单发货通知\n *\n * Data:\n * ```\n * {\n *   \"appid\" : \"wwwwb4f85f3a797777\",\n *   \"openid\" : \"oX99MDgNcgwnz3zFN3DNmo8uwa-w\",\n *   \"transid\" : \"111112222233333\",\n *   \"out_trade_no\" : \"555666uuu\",\n *   \"deliver_timestamp\" : \"1369745073\",\n *   \"deliver_status\" : \"1\",\n *   \"deliver_msg\" : \"ok\",\n *   \"app_signature\" : \"53cca9d47b883bd4a5c85a9300df3da0cb48565c\",\n *   \"sign_method\" : \"sha1\"\n * }\n * ```\n * Examples:\n * ```\n * api.deliverNotify(data, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\":0, \"errmsg\":\"ok\"}\n * ```\n *\n * @param {Object} package package对象\n * @param {Function} callback 回调函数\n */\nexports.deliverNotify = function (data, callback) {\n  this.preRequest(this._deliverNotify, arguments);\n};\n\n/*!\n * 发货通知的未封装版本\n */\nexports._deliverNotify = function (data, callback) {\n  var url = this.endpoint + '/pay/delivernotify?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n};\n\n/**\n * 微信公众号支付: 订单查询\n * 详情请见：<http://mp.weixin.qq.com/htmledition/res/bussiness-faq/wx_mp_pay.zip> 接口文档订单查询部分\n *\n * Package:\n * ```\n * {\n *   \"appid\" : \"wwwwb4f85f3a797777\",\n *   \"package\" : \"out_trade_no=11122&partner=1900090055&sign=4e8d0df3da0c3d0df38f\",\n *   \"timestamp\" : \"1369745073\",\n *   \"app_signature\" : \"53cca9d47b883bd4a5c85a9300df3da0cb48565c\",\n *   \"sign_method\" : \"sha1\"\n * }\n * ```\n * Examples:\n * ```\n * api.orderQuery(query, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"errcode\":0,\n *   \"errmsg\":\"ok\",\n *   \"order_info\": {\n *     \"ret_code\":0,\n *     \"ret_msg\":\"\",\n *     \"input_charset\":\"GBK\",\n *     \"trade_state\":\"0\",\n *     \"trade_mode\":\"1\",\n *     \"partner\":\"1900000109\",\n *     \"bank_type\":\"CMB_FP\",\n *     \"bank_billno\":\"207029722724\",\n *     \"total_fee\":\"1\",\n *     \"fee_type\":\"1\",\n *     \"transaction_id\":\"1900000109201307020305773741\",\n *     \"out_trade_no\":\"2986872580246457300\",\n *     \"is_split\":\"false\",\n *     \"is_refund\":\"false\",\n *     \"attach\":\"\",\n *     \"time_end\":\"20130702175943\",\n *     \"transport_fee\":\"0\",\n *     \"product_fee\":\"1\",\n *     \"discount\":\"0\",\n *     \"rmb_total_fee\":\"\"\n *   }\n * }\n * ```\n *\n * @param {Object} query query对象\n * @param {Function} callback 回调函数\n */\nexports.orderQuery = function (query, callback) {\n  this.preRequest(this._orderQuery, arguments);\n};\n\n/*!\n * 发货通知的未封装版本\n */\nexports._orderQuery = function (query, callback) {\n  var url = this.endpoint + '/pay/orderquery?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(query), wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_feedback.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\n\n/**\n * 标记客户的投诉处理状态\n * Examples:\n * ```\n * api.updateFeedback(openid, feedbackId, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"success\"\n * }\n * ```\n * @param {String} openid 用户ID\n * @param {String} feedbackId 投诉ID\n * @param {Function} callback 回调函数\n */\nexports.updateFeedback = function (openid, feedbackId, callback) {\n  this.preRequest(this._updateFeedback, arguments);\n};\n\nexports._updateFeedback = function (openid, feedbackId, callback) {\n  var feedbackUrl = this.endpoint + '/payfeedback/update';\n  // https://api.weixin.qq.com/payfeedback/update?access_token=xxxxx&openid=XXXX&feedbackid=xxxx\n  var data = {\n    'access_token': this.token.accessToken,\n    'openid': openid,\n    'feedbackid': feedbackId\n  };\n  var opts = {\n    dataType: 'json',\n    type: 'GET',\n    data: data,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  this.request(feedbackUrl, opts, wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_url.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 短网址服务\n * 详细细节 http://mp.weixin.qq.com/wiki/10/165c9b15eddcfbd8699ac12b0bd89ae6.html\n * Examples:\n * ```\n * api.shorturl('http://mp.weixin.com', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @param {String} longUrl 需要转换的长链接，支持http://、https://、weixin://wxpay格式的url\n * @param {Function} callback 回调函数\n */\nexports.shorturl = function (longUrl, callback) {\n  this.preRequest(this._shorturl, arguments);\n};\n\n/*!\n * 短网址服务\n */\nexports._shorturl = function (longUrl, callback) {\n  // https://api.weixin.qq.com/cgi-bin/shorturl?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/cgi-bin/shorturl?access_token=' + this.token.accessToken;\n  var data = {\n    'action': 'long2short',\n    'long_url': longUrl\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_semantic.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\n/**\n * 发送语义理解请求\n * 详细请看：http://mp.weixin.qq.com/wiki/0/0ce78b3c9524811fee34aba3e33f3448.html\n *\n * Opts:\n * ```\n * {\n *   \"query\":\"查一下明天从北京到上海的南航机票\",\n *   \"city\":\"北京\",\n *   \"category\": \"flight,hotel\"\n * }\n * ```\n * Examples:\n * ```\n * api.semantic(uid, opts, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"errcode\":0,\n *   \"query\":\"查一下明天从北京到上海的南航机票\",\n *   \"type\":\"flight\",\n *   \"semantic\":{\n *       \"details\":{\n *           \"start_loc\":{\n *               \"type\":\"LOC_CITY\",\n *               \"city\":\"北京市\",\n *               \"city_simple\":\"北京\",\n *               \"loc_ori\":\"北京\"\n *               },\n *           \"end_loc\": {\n *               \"type\":\"LOC_CITY\",\n *               \"city\":\"上海市\",\n *               \"city_simple\":\"上海\",\n *               \"loc_ori\":\"上海\"\n *             },\n *           \"start_date\": {\n *               \"type\":\"DT_ORI\",\n *               \"date\":\"2014-03-05\",\n *               \"date_ori\":\"明天\"\n *             },\n *          \"airline\":\"中国南方航空公司\"\n *       },\n *   \"intent\":\"SEARCH\"\n * }\n * ```\n * @param {String} openid 用户ID\n * @param {Object} opts 查询条件\n * @param {Function} callback 回调函数\n */\nexports.semantic = function (uid, opts, callback) {\n  this.preRequest(this._semantic, arguments);\n};\n\n/*!\n * 发送语义理解请求的未封装版本\n */\nexports._semantic = function (uid, opts, callback) {\n  // https://api.weixin.qq.com/semantic/semproxy/search?access_token=YOUR_ACCESS_TOKEN\n  var url = this.endpoint + '/semantic/semproxy/search?access_token=' + this.token.accessToken;\n  opts.appid = this.appid;\n  opts.uid = uid;\n  this.request(url, postJSON(opts), wrapper(callback));\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_ip.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar make = util.make;\n\n/**\n * 获取微信服务器IP地址\n * 详情请见：<http://mp.weixin.qq.com/wiki/0/2ad4b6bfd29f30f71d39616c2a0fcedc.html>\n * Examples:\n * ```\n * api.getIp(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"ip_list\":[\"127.0.0.1\",\"127.0.0.1\"]\n * }\n * ```\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getIp', function (callback) {\n  // https://api.weixin.qq.com/cgi-bin/getcallbackip?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/cgi-bin/getcallbackip?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_datacube.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\n\nvar methods = [\n  // 用户分析数据接口\n  'getUserSummary', // 获取用户增减数据\n  'getUserCumulate', // 获取累计用户数据\n  // 图文分析数据接口\n  'getArticleSummary', // 获取图文群发每日数据\n  'getArticleTotal', // 获取图文群发总数据\n  'getUserRead', // 获取图文统计数据\n  'getUserReadHour', // 获取图文统计分时数据\n  'getUserShare', // 获取图文分享转发数据\n  'getUserShareHour', // 获取图文分享转发分时数据\n  // 消息分析数据接口\n  'getUpstreamMsg', //获取消息发送概况数据\n  'getUpstreamMsgHour', // 获取消息分送分时数据\n  'getUpstreamMsgWeek', // 获取消息发送周数据\n  'getUpstreamMsgMonth', // 获取消息发送月数据\n  'getUpstreamMsgDist', // 获取消息发送分布数据\n  'getUpstreamMsgDistWeek', // 获取消息发送分布周数据\n  'getUpstreamMsgDistMonth', // 获取消息发送分布月数据\n  // 接口分析数据接口\n  'getInterfaceSummary', // 获取接口分析数据\n  'getInterfaceSummaryHour' // 获取接口分析分时数据\n];\n\n/**\n * 公众平台官网数据统计模块\n * 详情请见：<http://mp.weixin.qq.com/wiki/8/c0453610fb5131d1fcb17b4e87c82050.html>\n * Examples:\n * ```\n * // 用户分析数据接口\n * api.getUserSummary(startDate, endDate, callback); // 获取用户增减数据\n * api.getUserCumulate(startDate, endDate, callback); // 获取累计用户数据\n * // 图文分析数据接口\n * api.getArticleSummary(startDate, endDate, callback); // 获取图文群发每日数据\n * api.getArticleTotal(startDate, endDate, callback); // 获取图文群发总数据\n * api.getUserRead(startDate, endDate, callback); // 获取图文统计数据\n * api.getUserReadHour(startDate, endDate, callback); // 获取图文统计分时数据\n * api.getUserShare(startDate, endDate, callback); // 获取图文分享转发数据\n * api.getUserShareHour(startDate, endDate, callback); // 获取图文分享转发分时数据\n * // 消息分析数据接口\n * api.getUpstreamMsg(startDate, endDate, callback); // 获取消息发送概况数据\n * api.getUpstreamMsgHour(startDate, endDate, callback); // 获取消息分送分时数据\n * api.getUpstreamMsgWeek(startDate, endDate, callback); // 获取消息发送周数据\n * api.getUpstreamMsgMonth(startDate, endDate, callback); // 获取消息发送月数据\n * api.getUpstreamMsgDist(startDate, endDate, callback); // 获取消息发送分布数据\n * api.getUpstreamMsgDistWeek(startDate, endDate, callback); // 获取消息发送分布周数据\n * api.getUpstreamMsgDistMonth(startDate, endDate, callback); // 获取消息发送分布月数据\n * // 接口分析数据接口\n * api.getInterfaceSummary(startDate, endDate, callback); // 获取接口分析数据\n * api.getInterfaceSummaryHour(startDate, endDate, callback); // 获取接口分析分时数据\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"list\":[...] // 详细请参见<http://mp.weixin.qq.com/wiki/8/c0453610fb5131d1fcb17b4e87c82050.html>\n * }\n * ```\n * @param {String} startDate 起始日期，格式为2014-12-08\n * @param {String} endDate 结束日期，格式为2014-12-08\n * @param {Function} callback 回调函数\n */\nmethods.forEach(function (method) {\n  exports[method] = function (begin, end, callback) {\n    this.preRequest(this['_' + method], arguments);\n  };\n});\n\n/*!\n* 获取分析数据的未封装版本\n*/\nmethods.forEach(function (method) {\n  exports['_' + method] = function (begin, end, callback) {\n    var data = {\n      begin_date: begin,\n      end_date: end\n    };\n    var url = this.endpoint + '/datacube/' + method.toLowerCase() + '?access_token=' + this.token.accessToken;\n    this.request(url, postJSON(data), wrapper(callback));\n  };\n});\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_js.js":"'use strict';\n\nvar crypto = require('crypto');\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\n\n// 错误码 - Ticket无效\nvar INVALID_TICKET_CODE = -1;\n\nvar Ticket = function (ticket, expireTime) {\n  if (!(this instanceof Ticket)) {\n    return new Ticket(ticket, expireTime);\n  }\n  this.ticket = ticket;\n  this.expireTime = expireTime;\n};\n\nTicket.prototype.isValid = function () {\n  return !!this.ticket && (new Date().getTime()) < this.expireTime;\n};\n\n/**\n * 多台服务器负载均衡时，ticketToken需要外部存储共享。\n * 需要调用此registerTicketHandle来设置获取和保存的自定义方法。\n *\n * Examples:\n * ```\n * api.registerTicketHandle(getTicketToken, saveTicketToken);\n * // getTicketToken\n * function getTicketToken(type, callback) {\n *  settingModel.getItem(type, {key: 'weixin_ticketToken'}, function (err, setting) {\n *    if (err) return callback(err);\n *    callback(null, setting.value);\n *  });\n * }\n * // saveTicketToken\n * function saveTicketToken(type, _ticketToken, callback) {\n *  settingModel.setItem(type, {key:'weixin_ticketToken', value: ticketToken}, function (err) {\n *    if (err) return callback(err);\n *    callback(null);\n *  });\n * }\n * ```\n *\n * @param {Function} getTicketToken 获取外部ticketToken的函数\n * @param {Function} saveTicketToken 存储外部ticketToken的函数\n */\nexports.registerTicketHandle = function (getTicketToken, saveTicketToken) {\n  if (!getTicketToken && !saveTicketToken) {\n    this.ticketStore = {};\n  }\n  this.getTicketToken = getTicketToken || function (type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = 'jsapi';\n    }\n    callback(null, this.ticketStore[type]);\n  };\n\n  this.saveTicketToken = saveTicketToken || function (type, ticketToken, callback) {\n    // 向下兼容\n    if (typeof ticketToken === 'function') {\n      callback = ticketToken;\n      ticketToken = type;\n      type = 'jsapi';\n    }\n\n    this.ticketStore[type] = ticketToken;\n    if (process.env.NODE_ENV === 'production') {\n      console.warn('Dont save ticket in memory, when cluster or multi-computer!');\n    }\n    callback(null);\n  };\n};\n\n/**\n * 获取js sdk所需的有效js ticket\n *\n * Callback:\n * - `err`, 异常对象\n * - `result`, 正常获取时的数据\n *\n * Result:\n * - `errcode`, 0为成功\n * - `errmsg`, 成功为'ok'，错误则为详细错误信息\n * - `ticket`, js sdk有效票据，如：bxLdikRXVbTPdHSM05e5u5sUoXNKd8-41ZO3MhKoyN5OfkWITDGgnr2fwJ0m9E8NYzWKVZvdVtaUgWvsdshFKA\n * - `expires_in`, 有效期7200秒，开发者必须在自己的服务全局缓存jsapi_ticket\n *\n * @param {Function} callback 回调函数\n */\nexports.getTicket = function (type, callback) {\n  this.preRequest(this._getTicket, arguments);\n};\n\nexports._getTicket = function (type, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    type = 'jsapi';\n  }\n  var that = this;\n  var url = this.endpoint + '/cgi-bin/ticket/getticket?access_token=' + this.token.accessToken + '&type=' + type;\n  this.request(url, {dataType: 'json'}, wrapper(function(err, data) {\n    if (err) {\n      return callback(err);\n    }\n    // 过期时间，因网络延迟等，将实际过期时间提前10秒，以防止临界点\n    var expireTime = (new Date().getTime()) + (data.expires_in - 10) * 1000;\n    var ticket = new Ticket(data.ticket, expireTime);\n    that.saveTicketToken(type, ticket, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      callback(err, ticket);\n    });\n  }));\n};\n\n/*!\n * 生成随机字符串\n */\nvar createNonceStr = function () {\n  return Math.random().toString(36).substr(2, 15);\n};\n\n/*!\n * 生成时间戳\n */\nvar createTimestamp = function () {\n  return parseInt(new Date().getTime() / 1000, 0) + '';\n};\n\n/*!\n * 排序查询字符串\n */\nvar raw = function (args) {\n  var keys = Object.keys(args);\n  keys = keys.sort();\n  var newArgs = {};\n  keys.forEach(function (key) {\n    newArgs[key.toLowerCase()] = args[key];\n  });\n\n  var string = '';\n  var newKeys = Object.keys(newArgs);\n  for (var i = 0; i < newKeys.length; i++) {\n    var k = newKeys[i];\n    string += '&' + k + '=' + newArgs[k];\n  }\n  return string.substr(1);\n};\n\n/*!\n * 签名算法\n *\n * @param {String} nonceStr 生成签名的随机串\n * @param {String} jsapi_ticket 用于签名的jsapi_ticket\n * @param {String} timestamp 时间戳\n * @param {String} url 用于签名的url，注意必须与调用JSAPI时的页面URL完全一致\n */\nvar sign = function (nonceStr, jsapi_ticket, timestamp, url) {\n  var ret = {\n    jsapi_ticket: jsapi_ticket,\n    nonceStr: nonceStr,\n    timestamp: timestamp,\n    url: url\n  };\n  var string = raw(ret);\n  var shasum = crypto.createHash('sha1');\n  shasum.update(string);\n  return shasum.digest('hex');\n};\n\n/*!\n * 卡券card_ext里的签名算法\n *\n * @name signCardExt\n * @param {String} api_ticket 用于签名的临时票据，获取方式见2.获取api_ticket。\n * @param {String} card_id 生成卡券时获得的card_id\n * @param {String} timestamp 时间戳，商户生成从1970 年1 月1 日是微信卡券接口文档00:00:00 至今的秒数,即当前的时间,且最终需要转换为字符串形式;由商户生成后传入。\n * @param {String} code 指定的卡券code 码，只能被领一次。use_custom_code 字段为true 的卡券必须填写，非自定义code 不必填写。\n * @param {String} openid 指定领取者的openid，只有该用户能领取。bind_openid 字段为true 的卡券必须填写，非自定义code 不必填写。\n * @param {String} balance 红包余额，以分为单位。红包类型（LUCKY_MONEY）必填、其他卡券类型不必填。\n */\nvar signCardExt = function(api_ticket, card_id, timestamp, code, openid, balance) {\n  var values = [api_ticket, card_id, timestamp, code || '',  openid || '', balance || ''];\n  values.sort();\n\n  var string = values.join('');\n  var shasum = crypto.createHash('sha1');\n  shasum.update(string);\n  return shasum.digest('hex');\n};\n\n/*!\n *\n * 与api.preRequest相似，前置于需要js api ticket的方法\n * @param {Function} method 需要封装的方法\n * @param {Array} args 方法需要的参数\n */\nvar preRequestJSApi = function (method, args, retryed) {\n  var that = this;\n  var callback = args[args.length - 1];\n  // 调用用户传入的获取ticket的异步方法，获得ticket之后使用（并缓存它）。\n  that.getTicketToken('jsapi', function (err, cache) {\n    if (err) {\n      return callback(err);\n    }\n    var ticket;\n    // 有ticket并且ticket有效直接调用\n    if (cache && (ticket = new Ticket(cache.ticket, cache.expireTime)).isValid()) {\n      // 暂时保存ticket\n      that.jsTicket = ticket;\n      if (!retryed) {\n        var retryHandle = function (err, data, res) {\n          // 重试\n          if (data && data.errcode && data.errcode === INVALID_TICKET_CODE) {\n            return preRequestJSApi.call(that, method, args, true);\n          }\n          callback(err, data, res);\n        };\n        // 替换callback\n        var newargs = Array.prototype.slice.call(args, 0, -1);\n        newargs.push(retryHandle);\n        method.apply(that, newargs);\n      } else {\n        method.apply(that, args);\n      }\n    } else {\n      // 从微信端获取ticket\n      that.getTicket(function (err, ticket) {\n        // 如遇错误，通过回调函数传出\n        if (err) {\n          return callback(err);\n        }\n        // 暂时保存ticket\n        that.jsTicket = ticket;\n        method.apply(that, args);\n      });\n    }\n  });\n};\n\n/*!\n *\n * 与api.preRequest相似，前置于需要js wx_card ticket的方法\n * @param {Function} method 需要封装的方法\n * @param {Array} args 方法需要的参数\n */\nvar preRequestWxCardApi = function(method, args, retryed) {\n  var that = this;\n  var callback = args[args.length - 1];\n\n  that.getTicketToken('wx_card', function (err, cache) {\n    if (err) {\n      return callback(err);\n    }\n    var ticket;\n    // 有ticket并且ticket有效直接调用\n    if (cache && (ticket = new Ticket(cache.ticket, cache.expireTime)).isValid()) {\n      // 暂时保存ticket\n      that.wxCardTicket = ticket;\n      if (!retryed) {\n        var retryHandle = function (err, data, res) {\n          // 重试\n          if (data && data.errcode && data.errcode === INVALID_TICKET_CODE) {\n            return preRequestWxCardApi.call(that, method, args, true);\n          }\n          callback(err, data, res);\n        };\n        // 替换callback\n        var newargs = Array.prototype.slice.call(args, 0, -1);\n        newargs.push(retryHandle);\n        method.apply(that, newargs);\n      } else {\n        method.apply(that, args);\n      }\n    } else {\n      // 从微信端获取ticket\n      that.getTicket('wx_card', function (err, ticket) {\n        // 如遇错误，通过回调函数传出\n        if (err) {\n          return callback(err);\n        }\n        // 暂时保存ticket\n        that.wxCardTicket = ticket;\n        method.apply(that, args);\n      });\n    }\n  });\n};\n\n/**\n * 获取微信JS SDK Config的所需参数\n *\n * Examples:\n * ```\n * var param = {\n *  debug: false,\n *  jsApiList: ['onMenuShareTimeline', 'onMenuShareAppMessage'],\n *  url: 'http://www.xxx.com'\n * };\n * api.getJsConfig(param, callback);\n * ```\n *\n * Callback:\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的js sdk config所需参数\n *\n * @param {Object} param 参数\n * @param {Function} callback 回调函数\n */\nexports.getJsConfig = function (param, callback) {\n  preRequestJSApi.call(this, this._getJsConfig, arguments);\n};\nexports._getJsConfig = function (param, callback) {\n  var that = this;\n  var nonceStr = createNonceStr();\n  var jsAPITicket = this.jsTicket.ticket;\n  var timestamp = createTimestamp();\n  var signature = sign(nonceStr, jsAPITicket, timestamp, param.url);\n  var result = {\n    debug: param.debug,\n    appId: that.appid,\n    timestamp: timestamp,\n    nonceStr: nonceStr,\n    signature: signature,\n    jsApiList: param.jsApiList\n  };\n\n  // 判断beta参数是否存在，微信硬件开发用\n  // beta: true\n  // 开启内测接口调用，注入wx.invoke方法\n  if (param.beta) {\n    result.beta = param.beta;\n  }\n  callback(null, result);\n};\n\n/**\n * 获取微信JS SDK Config的所需参数\n *\n * Examples:\n * ```\n * var param = {\n *  card_id: 'p-hXXXXXXX',\n *  code: '1234',\n *  openid: '111111',\n *  balance: 100\n * };\n * api.getCardExt(param, callback);\n * ```\n *\n * Callback:\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的card_ext对象，包含所需参数\n *\n * @name getCardExt\n * @param {Object} param 参数\n * @param {Function} callback 回调函数\n */\nexports.getCardExt = function (param, callback) {\n  preRequestWxCardApi.call(this, this._getCardExt, arguments);\n};\n\nexports._getCardExt = function (param, callback) {\n  var apiTicket = this.wxCardTicket.ticket;\n  var timestamp = createTimestamp();\n  var signature = signCardExt(apiTicket, param.card_id, timestamp, param.code, param.openid, param.balance);\n  var result = {\n    timestamp: timestamp,\n    signature: signature\n  };\n\n  result.code = param.code || '';\n  result.openid = param.openid || '';\n\n  if (param.balance) {\n    result.balance = param.balance;\n  }\n  callback(null, result);\n};\n\n/**\n * 获取最新的js api ticket\n *\n * Examples:\n * ```\n * api.getLatestTicket(callback);\n * ```\n * Callback:\n *\n * - `err`, 获取js api ticket出现异常时的异常对象\n * - `ticket`, 获取的ticket\n *\n * @param {Function} callback 回调函数\n */\nexports.getLatestTicket = function (callback) {\n  preRequestJSApi.call(this, this._getLatestTicket, arguments);\n};\nexports._getLatestTicket = function (callback) {\n  callback(null, this.jsTicket);\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_card.js":"'use strict';\n\nvar path = require('path');\nvar fs = require('fs');\n\nvar formstream = require('formstream');\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\nvar make = util.make;\n\n/**\n * 上传Logo\n * Examples:\n * ```\n * api.uploadLogo('filepath', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"ok\",\n *  \"url\":\"http://mmbiz.qpic.cn/mmbiz/iaL1LJM1mF9aRKPZJkmG8xXhiaHqkKSVMMWeN3hLut7X7hicFNjakmxibMLGWpXrEXB33367o7zHN0CwngnQY7zb7g/0\"\n * }\n * ```\n *\n * @name uploadLogo\n * @param {String} filepath 文件路径\n * @param {Function} callback 回调函数\n */\nmake(exports, 'uploadLogo', function (filepath, callback) {\n  var that = this;\n  fs.stat(filepath, function (err, stat) {\n    if (err) {\n      return callback(err);\n    }\n    var form = formstream();\n    form.file('buffer', filepath, path.basename(filepath), stat.size);\n    var url = that.fileServerPrefix + 'media/uploadimg?access_token=' + that.token.accessToken;\n    var opts = {\n      dataType: 'json',\n      type: 'POST',\n      timeout: 60000, // 60秒超时\n      headers: form.headers(),\n      stream: form\n    };\n    that.request(url, opts, wrapper(callback));\n  });\n});\n\n/**\n * @name addLocations\n * @param {Array} locations 位置\n * @param {Function} callback 回调函数\n */\nmake(exports, 'addLocations', function (locations, callback) {\n  var data = {\n    location_list: locations\n  };\n  var url = this.endpoint + '/card/location/batchadd?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'getLocations', function (offset, count, callback) {\n  var data = {\n    offset: offset,\n    count: count\n  };\n  var url = this.endpoint + '/card/location/batchget?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'getColors', function (callback) {\n  var url = this.endpoint + '/card/getcolors?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n\nmake(exports, 'createCard', function (card, callback) {\n  var url = this.endpoint + '/card/create?access_token=' + this.token.accessToken;\n  var data = {card: card};\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nexports.getRedirectUrl = function (url, encryptCode, cardId) {\n  // TODO\n};\n\nmake(exports, 'createQRCode', function (card, callback) {\n  var url = this.endpoint + '/card/qrcode/create?access_token=' + this.token.accessToken;\n  var data = {\n    action_name: 'QR_CARD',\n    action_info: {\n      card: card\n    }\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 创建用于投放的卡卷二维码，支持投放单张卡卷和多张卡卷\n * Examples:\n * ```\n * api.createCardQRCode('info', 'expire_seconds', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\": 0,\n *  \"errmsg\": \"ok\",\n *  \"ticket\":      \"gQHB8DoAAAAAAAAAASxodHRwOi8vd2VpeGluLnFxLmNvbS9xL0JIV3lhX3psZmlvSDZmWGVMMTZvAAIEsNnKVQMEIAMAAA==\",//获取ticket后需调用换取二维码接口获取二维码图片，详情见字段说明。\n *  \"expire_seconds\": 1800,\n *  \"url\": \"http://weixin.qq.com/q/BHWya_zlfioH6fXeL16o \",\n *  \"show_qrcode_url\": \" https://mp.weixin.qq.com/cgi-bin/showqrcode?  ticket=gQH98DoAAAAAAAAAASxodHRwOi8vd2VpeGluLnFxLmNvbS9xL0czVzRlSWpsamlyM2plWTNKVktvAAIE6SfgVQMEgDPhAQ%3D%3D\"\n *  }\n * ```\n *\n * @name createCardQRCode\n * @param {Object} info 卡卷信息，支持单张和多张模式\n * 二维码投放单张卡卷\n * ```\n * {\n *   \"expire_seconds\": 1800,\n *    \"card\": {\n *       \"card_id\": \"pAtUNs1c3cBtMs5KeL8FP1f3fOaE\"\n *     }\n * }\n * ```\n * ```\n * 二维码投放多张卡卷\n * {\n *   \"expire_seconds\": 1800,\n *    \"multiple_card\": {\n *       \"card_list\": [\n *           {\n *             \"card_id\": \"pAtUNs-HV0evhGTWbU3ohp99tW7k\"\n *           },\n *           {\n *             \"card_id\": \"pAtUNs1c3cBtMs5KeL8FP1f3fOaE\"\n *           }\n *       ]\n *   }\n * }\n * @param {number} expire_seconds 二维码的有效时间，范围是60 ~ 1800秒。不填默认为永久有效。\n * @param {Function} callback 回调函数\n */\nmake(exports, 'createCardQRCode', function (info, expire_seconds, callback) {\n  if(typeof expire_seconds === 'function') {\n    callback = expire_seconds;\n    expire_seconds = null;\n  }\n  var url = this.endpoint + '/card/qrcode/create?access_token=' + this.token.accessToken;\n  var data = {\n    action_name: 'QR_'+Object.keys(info)[0].toUpperCase(),\n    expire_seconds: expire_seconds,\n    action_info: info\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'consumeCode', function (code, cardId, callback) {\n  var url = this.endpoint + '/card/code/consume?access_token=' + this.token.accessToken;\n  var data = {\n    code: code,\n    card_id: cardId\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'decryptCode', function (encryptCode, callback) {\n  var url = this.endpoint + '/card/code/decrypt?access_token=' + this.token.accessToken;\n  var data = {\n    encrypt_code: encryptCode\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'deleteCard', function (cardId, callback) {\n  var url = this.endpoint + '/card/delete?access_token=' + this.token.accessToken;\n  var data = {\n    card_id: cardId\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'getCode', function (code, cardId, callback) {\n  var url = this.endpoint + '/card/code/get?access_token=' + this.token.accessToken;\n  var data = {\n    code: code\n  };\n  if (typeof cardId !== 'function') {\n    data.card_id = cardId;\n  } else {\n    callback = cardId;\n  }\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'getCards', function (offset, count, status_list, callback) {\n  var url = this.endpoint + '/card/batchget?access_token=' + this.token.accessToken;\n  var data = {\n    offset: offset,\n    count: count\n  };\n  if (typeof status_list !== 'function') {\n    data.status_list = status_list;\n  } else {\n    callback = status_list;\n  }\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'getCard', function (cardId, callback) {\n  var url = this.endpoint + '/card/get?access_token=' + this.token.accessToken;\n  var data = {\n    card_id: cardId\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'updateCode', function (code, cardId, newcode, callback) {\n  var url = this.endpoint + '/card/code/update?access_token=' + this.token.accessToken;\n  var data = {\n    code: code,\n    card_id: cardId,\n    newcode: newcode\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'unavailableCode', function (code, cardId, callback) {\n  var url = this.endpoint + '/card/code/unavailable?access_token=' + this.token.accessToken;\n  var data = {\n    code: code\n  };\n  if (typeof cardId !== 'function') {\n    data.card_id = cardId;\n  } else {\n    callback = cardId;\n  }\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'updateCard', function (cardId, cardType, cardInfo, callback) {\n  var url = this.endpoint + '/card/update?access_token=' + this.token.accessToken;\n  var data = {\n    card_id: cardId\n  };\n  data[cardType.toLowerCase()] = cardInfo;\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'updateCardStock', function (cardId, num, callback) {\n  var url = this.endpoint + '/card/modifystock?access_token=' + this.token.accessToken;\n  var data = {\n    card_id: cardId\n  };\n  if (num > 0) {\n    data.increase_stock_value = Math.abs(num);\n  } else {\n    data.reduce_stock_value = Math.abs(num);\n  }\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'activateMembercard', function (info, callback) {\n  var url = this.endpoint + '/card/membercard/activate?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(info), wrapper(callback));\n});\n\n/**\n * 设置开卡字段接口\n * ```\n * Examples:\n * ```\n * api.activateMembercardUserForm(info, callback);\n *\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"ok\"\n * }\n * ```\n *\n * @name activateMembercardUserForm\n * @param {Object} info 参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'activateMembercardUserForm', function (info, callback) {\n  var url = this.endpoint + '/card/membercard/activateuserform/set?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(info), wrapper(callback));\n});\n\nmake(exports, 'getMembercard', function (info, callback) {\n  var url = this.endpoint + '/card/membercard/userinfo/get?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(info), wrapper(callback));\n});\n\nmake(exports, 'updateMembercard', function (info, callback) {\n  var url = this.endpoint + '/card/membercard/updateuser?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(info), wrapper(callback));\n});\n\nmake(exports, 'updateMovieTicket', function (info, callback) {\n  var url = this.endpoint + '/card/movieticket/updateuser?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(info), wrapper(callback));\n});\n\nmake(exports, 'checkInBoardingPass', function (info, callback) {\n  var url = this.endpoint + '/card/boardingpass/checkin?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(info), wrapper(callback));\n});\n\nmake(exports, 'updateLuckyMonkeyBalance', function (code, cardId, balance, callback) {\n  var url = this.endpoint + '/card/luckymonkey/updateuserbalance?access_token=' + this.token.accessToken;\n  var data = {\n    'code': code,\n    'card_id': cardId,\n    'balance': balance\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'updateMeetingTicket', function (info, callback) {\n  var url = this.endpoint + '/card/meetingticket/updateuser?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(info), wrapper(callback));\n});\n\nmake(exports, 'setTestWhitelist', function (info, callback) {\n  var url = this.endpoint + '/card/testwhitelist/set?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(info), wrapper(callback));\n});\n\n/**\n * 导入code接口\n * 接口说明\n * 开发者可调用该接口将自定义code导入微信卡券后台，由微信侧代理存储并下发code，本接口仅用于支持自定义code的卡券参与互通。\n * code:\n * ```\n * [\n *   \"11111\",\n *   \"22222\",\n *   \"33333\"\n * ]\n * ```\n * Examples:\n * ```\n * api.importCustomizedCodes('cardId', code, callback);\n *\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"ok\"\n * }\n * ```\n *\n * @name importCustomizedCodes\n * @param {String} cardId 卡券ID\n * @param {Array} code 待导入自定义code\n * @param {Function} callback 回调函数\n */\nmake(exports, 'importCustomizedCodes', function (cardId, code, callback) {\n  var url = this.endpoint + '/card/code/deposit?access_token=' + this.token.accessToken;\n  var data = {\n    'card_id': cardId,\n    'code': code\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 核查code接口\n * 接口说明\n * 支持开发者调用该接口查询code导入微信后台的情况。\n * code:\n * ```\n * [\n *   \"11111\",\n *   \"22222\",\n *   \"33333\"\n * ]\n * ```\n * Examples:\n * ```\n * api.checkCustomizedCodes('cardId', code, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"ok\",\n *  \"exist_code\":[\"11111\",\"22222\"],\n *  \"not_exist_code\":[\"33333\"]\n * }\n * ```\n *\n * @name checkCustomizedCodes\n * @param {String} cardId 卡券ID\n * @param {Array} code 待核查自定义code\n * @param {Function} callback 回调函数\n */\nmake(exports, 'checkCustomizedCodes', function (cardId, code, callback) {\n  var url = this.endpoint + '/card/code/checkcode?access_token=' + this.token.accessToken;\n  var data = {\n    'card_id': cardId,\n    'code': code\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 查询导入code数目接口\n * 接口说明\n * 支持开发者调用该接口查询code导入微信后台成功的数目。\n * Examples:\n * ```\n * api.getDepositCodesCount('cardId', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"ok\",\n *  \"count\":123\n * }\n * ```\n *\n * @name getDepositCodesCount\n * @param {String} cardId 卡券ID\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getDepositCodesCount', function (cardId, callback) {\n  var url = this.endpoint + '/card/code/getdepositcount?access_token=' + this.token.accessToken;\n  var data = {\n    'card_id': cardId\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 拉取卡券概况数据\n * @param  {String} beginDate             开始时间\n * @param  {String} endDate               结束时间（结束时间不能为当天，不然会报错，可设为昨天）\n * @param  {int} source                卡券来源，0为公众平台创建的卡券数据、1是API创建的卡券数据\n */\nmake(exports, 'getTotalCardDataInfo', function (beginDate, endDate, source, callback) {\n  var url = this.endpoint + '/datacube/getcardbizuininfo?access_token=' + this.token.accessToken;\n  var data = {\n    'begin_date': beginDate,\n    'end_date': endDate,\n    'cond_source': source\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n\n/**\n * 获取免费券数据\n * @param  {String} cardId                cardId 卡券ID\n * @param  {String} beginDate             开始时间\n * @param  {String} endDate               结束时间（结束时间不能为当天，不然会报错，可设为昨天）\n * @param  {int} source                卡券来源，0为公众平台创建的卡券数据、1是API创建的卡券数据\n */\nmake(exports, 'getCardDataInfo', function (cardId, beginDate, endDate, source, callback) {\n  var url = this.endpoint + '/datacube/getcardcardinfo?access_token=' + this.token.accessToken;\n  var data = {\n    'begin_date': beginDate,\n    'end_date': endDate,\n    'cond_source': source,\n    'card_id': cardId\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 设置商户的核销员\n * 接口说明\n * 开发者需调用该接口设置商户的核销员,并指定核销员的门店。\n * Examples:\n * ```\n * api.addConsumer('username', 'locationId', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"errcode\":0,\n *  \"errmsg\":\"ok\"\n * }\n * ```\n *\n * @name addConsumer\n * @param {String} username 店员的微信号,开发者须确认该微信号在设置之前已 经关注”卡券商户助手公众号“\n * @param {String} locationId 当前核销员关联的门店值\n * @param {Function} callback 回调函数\n */\nmake(exports, 'addConsumer', function (username, locationId, callback) {\n  var url = this.endpoint + '/card/consumer/add?access_token=' + this.token.accessToken;\n  var data = {\n    'username': username,\n    'is_super_consumer': true\n  };\n  if (locationId) {\n    data.location_id = locationId;\n    data.is_super_consumer = false;\n  }\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 卡券开放类目查询接口\n * 接口说明\n * 通过调用该接口查询卡券开放的类目ID，类目会随业务发展变更，请每次用接口去查询获取实时卡券类目。\n * 注意：\n * 1. 本接口查询的返回值还有卡券资质ID,此处的卡券资质为：已微信认证的公众号通过微信公众平台申请卡券功能时，所需的资质。\n * 2.对于第三方开发者代制（无公众号）模式，子商户无论选择什么类目，均暂不需按照此返回提供资质，返回值仅参考类目ID 即可。\n * Examples:\n * ```\n * api.getApplyProtocol(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"category\": [\n *        {\n *            \"primary_category_id\": 1,\n *            \"category_name\": \"美食\",\n *            \"secondary_category\": [\n *                {\n *                    \"secondary_category_id\": 101,\n *                    \"category_name\": \"粤菜\",\n *                    \"need_qualification_stuffs\": [\n *                        \"food_service_license_id\",\n *                        \"food_service_license_bizmedia_id\"\n *                    ],\n *                    \"can_choose_prepaid_card\": 1,\n *                    \"can_choose_payment_card\": 1\n *                },\n *        }\n *    ],\n *  \"errcode\":0,\n *  \"errmsg\":\"ok\"\n * }\n * ```\n *\n * @name getApplyProtocol\n * @param {Object} options 子商户相关资料\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getApplyProtocol', function (callback) {\n  var url = this.endpoint + '/card/getapplyprotocol?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n\n/**\n * 创建子商户接口\n * 接口说明\n * 支持母商户调用该接口传入子商户的相关资料，并获取子商户ID，用于子商户的卡券功能管理。\n * 子商户的资质包括：商户名称、商户logo（图片）、卡券类目、授权函（扫描件或彩照）、授权函有效期截止时间。\n * Examples:\n * ```\n * api.submitSubmerchant(options, callback);\n * ```\n * options:\n * {\n *  \"brand_name\": \"aaaaaa\",\n *  \"app_id\"：\"xxxxxxxxxxx\",\n *  \"logo_url\": \"http://mmbiz.xxxx\",\n *  \"protocol\": \"xxxxxxxxxx\",\n *  \"agreement_media_id\":\"xxxxxxxxxx\",\n *  \"operator_media_id\":\"xxxxxxxx\",\n *  \"end_time\": 1438990559,\n *  \"primary_category_id\": 1,\n *  \"secondary_category_id\": 101\n * }\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @name submitSubmerchant\n * @param {Object} options 子商户相关资料\n * @param {Function} callback 回调函数\n */\nmake(exports, 'submitSubmerchant', function (options, callback) {\n  var url = this.endpoint + '/card/submerchant/submit?access_token=' + this.token.accessToken;\n  var data = {\n    'info': options\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 更新子商户接口\n * 接口说明\n * 支持调用该接口更新子商户信息。\n * Examples:\n * ```\n * api.updateSubmerchant(options, callback);\n * ```\n * options:\n * {\n *  \"merchant_id\": 12,\n *  \"brand_name\": \"aaaaaa\",\n *  \"app_id\"：\"xxxxxxxxxxx\",\n *  \"logo_url\": \"http://mmbiz.xxxx\",\n *  \"protocol\": \"xxxxxxxxxx\",\n *  \"agreement_media_id\":\"xxxxxxxxxx\",\n *  \"operator_media_id\":\"xxxxxxxx\",\n *  \"end_time\": 1438990559,\n *  \"primary_category_id\": 1,\n *  \"secondary_category_id\": 101\n * }\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @name updateSubmerchant\n * @param {Object} options 子商户相关资料\n * @param {Function} callback 回调函数\n */\nmake(exports, 'updateSubmerchant', function (options, callback) {\n  var url = this.endpoint + '/card/submerchant/update?access_token=' + this.token.accessToken;\n  var data = {\n    'info': options\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 拉取单个子商户信息接口\n * 接口说明\n * 通过指定的子商户merchant_id，拉取该子商户的基础信息。\n * 注意，用母商户去调用接口，但接口内传入的是子商户的merchant_id。\n * Examples:\n * ```\n * api.getSubmerchant('merchantId', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @name getSubmerchant\n * @param {String} merchantId 子商户相关资料\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getSubmerchant', function (merchantId, callback) {\n  var url = this.endpoint + '/card/submerchant/get?access_token=' + this.token.accessToken;\n  var data = {\n    'merchant_id': merchantId\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n\n/**\n * 批量拉取子商户信息接口\n * 接口说明\n * 母商户可以通过该接口批量拉取子商户的相关信息，一次调用最多拉取100个子商户的信息，可以通过多次拉去满足不同的查询需求\n * Examples:\n * ```\n * api.batchgetSubmerchant(data, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @name batchgetSubmerchant\n * @param {Object} data 查询条件 {\"begin_id\": 0,\"limit\": 50,\"status\": \"CHECKING\"}\n * @param {Function} callback 回调函数\n */\nmake(exports, 'batchgetSubmerchant', function (data, callback) {\n  var url = this.endpoint + '/card/submerchant/batchget?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n\n/**\n * 拉取拉取会员信息接口\n * 接口说明\n * 支持开发者根据CardID和Code查询会员信息。\n * Examples:\n * ```\n * api.getMemberCardUserInfo({\"card_id\": abd5e78412e5d12ff,\"code\": 5566778811002233}, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @name getMemberCardUserInfo\n * @param {Object} info 查询条件 {\"card_id\": abd5e78412e5d12ff,\"code\": 5566778811002233}\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getMemberCardUserInfo', function (info, callback) {\n  var url = this.endpoint + '/card/membercard/userinfo/get?access_token=' + this.token.accessToken;\n  var data = info;\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 更新会员信息\n * 接口说明\n * 当会员持卡消费后，支持开发者调用该接口更新会员信息。会员卡交易后的每次信息变更需通过该接口通知微信，便于后续消息通知及其他扩展功能。\n * Examples:\n * ```\n * api.updateMemberCardUserInfo(data, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @name getMemberCardUserInfo\n * @param {Object} data 查询条件 {\"card_id\": abd5e78412e5d12ff,\"code\": 5566778811002233, \"record_bonus\" : 3000}\n * @param {Function} callback 回调函数\n */\nmake(exports, 'updateMemberCardUserInfo', function (data, callback) {\n  var url = this.endpoint + '/card/membercard/updateuser?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n});\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_device.js":"'use strict';\n\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\nvar make = util.make;\n\nmake(exports, 'transferMessage', function (deviceType, deviceId, openid, content, callback) {\n  // https://api.weixin.qq.com/device/transmsg?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/device/transmsg?access_token=' + this.token.accessToken;\n  var info = {\n    'device_type': deviceType,\n    'device_id': deviceId,\n    'open_id': openid,\n    'content': new Buffer(content).toString('base64')\n  };\n  this.request(url, postJSON(info), wrapper(callback));\n});\n\nmake(exports, 'transferStatus', function (deviceType, deviceId, openid, status, callback) {\n  // https://api.weixin.qq.com/device/transmsg?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/device/transmsg?access_token=' + this.token.accessToken;\n  var info = {\n    'device_type': deviceType,\n    'device_id': deviceId,\n    'open_id': openid,\n    'msg_type': '2',\n    'device_status': status\n  };\n  this.request(url, postJSON(info), wrapper(callback));\n});\n\nmake(exports, 'createDeviceQRCode', function (deviceIds, callback) {\n  // https://api.weixin.qq.com/device/create_qrcode?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/device/create_qrcode?access_token=' + this.token.accessToken;\n  var info = {\n    'device_num': deviceIds.length,\n    'device_id_list': deviceIds\n  };\n  this.request(url, postJSON(info), wrapper(callback));\n});\n\nmake(exports, 'authorizeDevices', function (devices, optype, productid, callback) {\n  // https://api.weixin.qq.com/device/authorize_device?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/device/authorize_device?access_token=' + this.token.accessToken;\n  var data = {\n    'device_num': devices.length,\n    'device_list': devices,\n    'op_type': optype\n  };\n  if (typeof productid !== 'function') {\n    data.product_id = productid;\n  } else {\n    callback = productid;\n  }\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n//第三方公众账号通过设备id从公众平台批量获取设备二维码。\nmake(exports, 'getDeviceQRCode', function (product_id, callback) {\n  // https://api.weixin.qq.com/device/create_qrcode?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/device/getqrcode?access_token=' + this.token.accessToken + '&product_id=' + product_id;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n\nmake(exports, 'bindDevice', function (deviceId, openid, ticket, callback) {\n  // https://api.weixin.qq.com/device/bind?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/device/bind?access_token=' + this.token.accessToken;\n  var data = {\n    ticket: ticket,\n    device_id: deviceId,\n    openid: openid\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'unbindDevice', function (deviceId, openid, ticket, callback) {\n  // https://api.weixin.qq.com/device/unbind?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/device/unbind?access_token=' + this.token.accessToken;\n  var data = {\n    ticket: ticket,\n    device_id: deviceId,\n    openid: openid\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n\nmake(exports, 'compelBindDevice', function (deviceId, openid, callback) {\n  // https://api.weixin.qq.com/device/compel_bind?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/device/compel_bind?access_token=' + this.token.accessToken;\n  var data = {\n    device_id: deviceId,\n    openid: openid\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'compelUnbindDevice', function (deviceId, openid, callback) {\n  // https://api.weixin.qq.com/device/compel_unbind?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/device/compel_unbind?access_token=' + this.token.accessToken;\n  var data = {\n    device_id: deviceId,\n    openid: openid\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'getDeviceStatus', function (deviceId, callback) {\n  // https://api.weixin.qq.com/device/get_stat?access_token=ACCESS_TOKEN&device_id=DEVICE_ID\n  var url = this.endpoint + '/device/get_stat?access_token=' + this.token.accessToken + '&device_id=' + deviceId;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n\nmake(exports, 'verifyDeviceQRCode', function (ticket, callback) {\n  // https://api.weixin.qq.com/device/verify_qrcode?access_token=ACCESS_TOKEN\n  var url = this.endpoint + '/device/verify_qrcode?access_token=' + this.token.accessToken;\n  var data = {\n    ticket: ticket\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\nmake(exports, 'getOpenID', function (deviceId, deviceType, callback) {\n  // https://api.weixin.qq.com/device/get_openid?access_token=ACCESS_TOKEN&device_type=DEVICE_TYPE&device_id=DEVICE_ID\n  var url = this.endpoint + '/device/get_openid?access_token=' + this.token.accessToken + '&device_id=' + deviceId + '&device_type=' + deviceType;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n\nmake(exports, 'getBindDevice', function (openid, callback) {\n  // https://api.weixin.qq.com/device/get_bind_device?access_token=ACCESS_TOKEN&openid=OPENID\n  var url = this.endpoint + '/device/get_bind_device?access_token=' + this.token.accessToken + '&openid=' + openid;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_shakearound.js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar formstream = require('formstream');\nvar crypto = require('crypto');\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\nvar make = util.make;\n\n/**\n * 申请开通功能\n * 接口说明:\n * 申请开通摇一摇周边功能。成功提交申请请求后，工作人员会在三个工作日内完成审核。若审核不通过，可以重新提交申请请求。\n * 若是审核中，请耐心等待工作人员审核，在审核中状态不能再提交申请请求。\n * 详情请参见：<http://mp.weixin.qq.com/wiki/13/025f1d471dc999928340161c631c6635.html>\n *\n * Options:\n * ```\n * {\n *  \"name\": \"zhang_san\",\n *  \"phone_number\": \"13512345678\",\n *  \"email\": \"weixin123@qq.com\",\n *  \"industry_id\": \"0118\",\n *  \"qualification_cert_urls\": [\n *    \"http://shp.qpic.cn/wx_shake_bus/0/1428565236d03d864b7f43db9ce34df5f720509d0e/0\",\n *    \"http://shp.qpic.cn/wx_shake_bus/0/1428565236d03d864b7f43db9ce34df5f720509d0e/0\"\n *  ],\n *  \"apply_reason\": \"test\"\n * }\n * ```\n *\n * Examples:\n * ```\n * api.registerShakeAccount(options, callback);\n * ```\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : { },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name registerShakeAccount\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'registerShakeAccount', function (options, callback) {\n  var url = this.endpoint + '/shakearound/account/register?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 查询审核状态\n * 接口说明：\n * 查询已经提交的开通摇一摇周边功能申请的审核状态。在申请提交后，工作人员会在三个工作日内完成审核。\n * 详情请参见：http://mp.weixin.qq.com/wiki/13/025f1d471dc999928340161c631c6635.html\n * Examples:\n * ```\n * api.checkShakeAccountStatus(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *     \"apply_time\": 1432026025,\n *     \"audit_comment\": \"test\",\n *     \"audit_status\": 1,       //审核状态。0：审核未通过、1：审核中、2：审核已通过；审核会在三个工作日内完成\n *     \"audit_time\": 0\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name checkShakeAccountStatus\n * @param {Function} callback 回调函数\n */\nmake(exports, 'checkShakeAccountStatus', function (callback) {\n  var url = this.endpoint + '/shakearound/account/auditstatus?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n\n/**\n * 设备管理: 申请设备ID。\n * 接口说明:\n * 申请配置设备所需的UUID、Major、Minor。若激活率小于50%，不能新增设备。单次新增设备超过500个，\n * 需走人工审核流程。审核通过后，可用返回的批次ID用“查询设备列表”接口拉取本次申请的设备ID。\n * 详情请参见：<http://mp.weixin.qq.com/wiki/15/b9e012f917e3484b7ed02771156411f3.html>\n *\n * Options:\n * ```\n * {\n *   \"quantity\":3,\n *   \"apply_reason\":\"测试\",\n *   \"comment\":\"测试专用\",\n *   \"poi_id\":1234\n * }\n * ```\n *\n * Examples:\n * ```\n * api.applyBeacons(options, callback);\n * ```\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : { ... },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name applyBeacons\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'applyBeacons', function (options, callback) {\n  var url = this.endpoint + '/shakearound/device/applyid?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 设备管理: 查询设备ID申请审核状态。\n * 接口说明:\n * 查询设备ID申请的审核状态。若单次申请的设备ID数量小于等于500个，系统会进行快速审核；\n * 若单次申请的设备ID数量大于500个，则在三个工作日内完成审核。\n * 详情请参见：<http://mp.weixin.qq.com/wiki/10/9926857d34ef8cea6bcd6cffb6cea80a.html>\n *\n * Options:\n * ```\n * {\n *   \"apply_id\": 12345\n * }\n * ```\n *\n * Examples:\n * ```\n * api.applyBeaconsStatus(apply_id, callback);\n * ```\n *\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : { ... },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name applyBeaconsStatus\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'applyBeaconsStatus', function (apply_id, callback) {\n  var data = {\n    apply_id: apply_id\n  };\n  var url = this.endpoint + '/shakearound/device/applystatus?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 设备管理: 编辑设备的备注信息。\n * 接口说明:\n * 可用设备ID或完整的UUID、Major、Minor指定设备，二者选其一。\n * 详情请参见：http://mp.weixin.qq.com/wiki/15/b9e012f917e3484b7ed02771156411f3.html\n * Options:\n * ```\n * {\n *  \"device_identifier\": {\n *    // 设备编号，若填了UUID、major、minor，则可不填设备编号，若二者都填，则以设备编号为优先\n *    \"device_id\": 10011,\n *    \"uuid\": \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\",\n *    \"major\": 1002,\n *    \"minor\": 1223\n *  },\n *  \"comment\": \"test\"\n * }\n * ```\n * Examples:\n * ```\n * api.updateBeacon(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name updateBeacon\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'updateBeacon', function (options, callback) {\n  var url = this.endpoint + '/shakearound/device/update?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 设备管理: 配置设备与门店的关联关系。\n * 接口说明:\n * 修改设备关联的门店ID、设备的备注信息。可用设备ID或完整的UUID、Major、Minor指定设备，二者选其一。\n * 详情请参见：http://mp.weixin.qq.com/wiki/15/b9e012f917e3484b7ed02771156411f3.html\n * Options:\n * ```\n * {\n *   \"device_identifier\": {\n *     \"device_id\": 10011,\n *     \"uuid\": \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\",\n *     \"major\": 1002,\n *     \"minor\": 1223\n *   },\n *   \"poi_id\": 1231\n * }\n * ```\n * Examples:\n * ```\n * api.bindBeaconLocation(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name bindBeaconLocation\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'bindBeaconLocation', function(options, callback) {\n  var url = this.endpoint + '/shakearound/device/bindlocation?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 设备管理: 查询设备列表\n * 接口说明:\n * 查询已有的设备ID、UUID、Major、Minor、激活状态、备注信息、关联门店、关联页面等信息。\n * 可指定设备ID或完整的UUID、Major、Minor查询，也可批量拉取设备信息列表。\n * 详情请参见：http://mp.weixin.qq.com/wiki/15/b9e012f917e3484b7ed02771156411f3.html\n * Options:\n * 1) 查询指定设备时：\n * ```\n * {\n *  \"device_identifier\": [\n *    {\n *      \"device_id\":10011,\n *      \"uuid\":\"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\",\n *      \"major\":1002,\n *      \"minor\":1223\n *    }\n *  ]\n * }\n * ```\n * 2) 需要分页查询或者指定范围内的设备时：\n * ```\n * {\n *   \"begin\": 0,\n *   \"count\": 3\n * }\n * ```\n * 3) 当需要根据批次ID查询时：\n * ```\n * {\n *   \"apply_id\": 1231,\n *   \"begin\": 0,\n *   \"count\": 3\n * }\n * ```\n * Examples:\n * ```\n * api.getBeacons(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\": {\n *     \"devices\": [\n *       {\n *         \"comment\": \"\",\n *         \"device_id\": 10097,\n *         \"major\": 10001,\n *         \"minor\": 12102,\n *         \"page_ids\": \"15369\",\n *         \"status\": 1, //激活状态，0：未激活，1：已激活（但不活跃），2：活跃\n *         \"poi_id\": 0,\n *         \"uuid\": \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\"\n *       },\n *       {\n *         \"comment\": \"\",\n *         \"device_id\": 10098,\n *         \"major\": 10001,\n *         \"minor\": 12103,\n *         \"page_ids\": \"15368\",\n *         \"status\": 1,\n *         \"poi_id\": 0,\n *         \"uuid\": \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\"\n *       }\n *      ],\n *      \"total_count\": 151\n *    },\n *    \"errcode\": 0,\n *    \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name getBeacons\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getBeacons', function (options, callback) {\n  var url = this.endpoint + '/shakearound/device/search?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n\n/**\n * 页面管理: 新增页面\n * 接口说明:\n * 新增摇一摇出来的页面信息，包括在摇一摇页面出现的主标题、副标题、图片和点击进去的超链接。\n * 其中，图片必须为用素材管理接口（uploadPageIcon函数）上传至微信侧服务器后返回的链接。\n * 详情请参见：http://mp.weixin.qq.com/wiki/5/6626199ea8757c752046d8e46cf13251.html\n * Page:\n * ```\n * {\n *   \"title\":\"主标题\",\n *   \"description\":\"副标题\",\n *   \"page_url\":\" https://zb.weixin.qq.com\",\n *   \"comment\":\"数据示例\",\n *   \"icon_url\":\"http://shp.qpic.cn/wx_shake_bus/0/14288351768a23d76e7636b56440172120529e8252/120\"\n *   //调用uploadPageIcon函数获取到该URL\n * }\n * ```\n * Examples:\n * ```\n * api.createPage(page, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *     \"page_id\": 28840\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name createPage\n * @param {Object} page 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'createPage', function (page, callback) {\n  var url = this.endpoint + '/shakearound/page/add?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(page), wrapper(callback));\n});\n\n/**\n * 页面管理: 编辑页面信息\n * 接口说明:\n * 编辑摇一摇出来的页面信息，包括在摇一摇页面出现的主标题、副标题、图片和点击进去的超链接。\n * 详情请参见：http://mp.weixin.qq.com/wiki/5/6626199ea8757c752046d8e46cf13251.html\n * Page:\n * ```\n * {\n *   \"page_id\":12306,\n *   \"title\":\"主标题\",\n *   \"description\":\"副标题\",\n *   \"page_url\":\" https://zb.weixin.qq.com\",\n *   \"comment\":\"数据示例\",\n *   \"icon_url\":\"http://shp.qpic.cn/wx_shake_bus/0/14288351768a23d76e7636b56440172120529e8252/120\"\n *   //调用uploadPageIcon函数获取到该URL\n * }\n * ```\n * Examples:\n * ```\n * api.updatePage(page, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *     \"page_id\": 28840\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name updatePage\n * @param {Object} page 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'updatePage', function (page, callback) {\n  var url = this.endpoint + '/shakearound/page/update?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(page), wrapper(callback));\n});\n\n/**\n * 页面管理: 删除页面\n * 接口说明:\n * 删除已有的页面，包括在摇一摇页面出现的主标题、副标题、图片和点击进去的超链接。\n * 只有页面与设备没有关联关系时，才可被删除。\n * 详情请参见：http://mp.weixin.qq.com/wiki/5/6626199ea8757c752046d8e46cf13251.html\n * page_id:\n * ```\n * {\n *   \"page_id\": 34567\n * }\n * ```\n * Examples:\n * ```\n * api.deletePage(page_id, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name deletePage\n * @param {Object} page_id 指定页面的id\n * @param {Function} callback 回调函数\n */\nmake(exports, 'deletePage', function (page_id, callback) {\n  var data = {page_id: page_id};\n  var url = this.endpoint + '/shakearound/page/delete?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 页面管理: 查询页面列表\n * 接口说明:\n * 查询已有的页面，包括在摇一摇页面出现的主标题、副标题、图片和点击进去的超链接。提供两种查询方式，可指定页面ID查询，也可批量拉取页面列表。\n * 详情请参见：http://mp.weixin.qq.com/wiki/5/6626199ea8757c752046d8e46cf13251.html\n * Options:\n * 1) 需要查询指定页面时：\n * ```\n * {\n *   \"page_ids\":[12345, 23456, 34567]\n * }\n * ```\n * 2) 需要分页查询或者指定范围内的页面时：\n * ```\n * {\n *   \"begin\": 0,\n *   \"count\": 3\n * }\n * ```\n *\n * Examples:\n * ```\n * api.getBeacons(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\": {\n *     \"pages\": [\n *        {\n *          \"comment\": \"just for test\",\n *          \"description\": \"test\",\n *          \"icon_url\": \"https://www.baidu.com/img/bd_logo1\",\n *          \"page_id\": 28840,\n *          \"page_url\": \"http://xw.qq.com/testapi1\",\n *          \"title\": \"测试1\"\n *        },\n *        {\n *          \"comment\": \"just for test\",\n *          \"description\": \"test\",\n *          \"icon_url\": \"https://www.baidu.com/img/bd_logo1\",\n *          \"page_id\": 28842,\n *          \"page_url\": \"http://xw.qq.com/testapi2\",\n *          \"title\": \"测试2\"\n *        }\n *      ],\n *      \"total_count\": 2\n *    },\n *    \"errcode\": 0,\n *    \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name getPages\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getPages', function (options, callback) {\n  var url = this.endpoint + '/shakearound/page/search?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n\n/**\n * 上传图片素材\n * 接口说明：\n * 上传在摇一摇页面展示的图片素材，素材保存在微信侧服务器上。\n * 格式限定为：jpg,jpeg,png,gif，图片大小建议120px*120 px，限制不超过200 px *200 px，图片需为正方形。\n * 详情请参见：http://mp.weixin.qq.com/wiki/5/e997428269ff189d8f9a4b9e177be2d9.html\n * Examples:\n * ```\n * api.uploadPageIcon('filepath', callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *     \"pic_url\": \"http://shp.qpic.cn/wechat_shakearound_pic/0/1428377032e9dd2797018cad79186e03e8c5aec8dc/120\"\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name uploadPageIcon\n * @param {String} filepath 文件路径\n * @param {Function} callback 回调函数\n */\nmake(exports, 'uploadPageIcon', function (filepath, callback) {\n  var that = this;\n  fs.stat(filepath, function (err, stat) {\n    if (err) {\n      return callback(err);\n    }\n    var form = formstream();\n    form.file('media', filepath, path.basename(filepath), stat.size);\n    var url = this.endpoint + '/shakearound/material/add?access_token=' + that.token.accessToken;\n    var opts = {\n      dataType: 'json',\n      type: 'POST',\n      timeout: 60000, // 60秒超时\n      headers: form.headers(),\n      stream: form\n    };\n    that.request(url, opts, callback);\n  });\n});\n\n/**\n * 配置设备与页面的关联关系\n * 接口说明:\n * 配置设备与页面的关联关系。支持建立或解除关联关系，也支持新增页面或覆盖页面等操作。\n * 配置完成后，在此设备的信号范围内，即可摇出关联的页面信息。若设备配置多个页面，则随机出现页面信息。\n * 详情请参见：http://mp.weixin.qq.com/wiki/6/c449687e71510db19564f2d2d526b6ea.html\n * Options:\n * ```\n * {\n *  \"device_identifier\": {\n *    // 设备编号，若填了UUID、major、minor，则可不填设备编号，若二者都填，则以设备编号为优先\n *    \"device_id\":10011,\n *    \"uuid\":\"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\",\n *    \"major\":1002,\n *    \"minor\":1223\n *  },\n *  \"page_ids\":[12345, 23456, 334567]\n * }\n * ```\n * Examples:\n * ```\n * api.bindBeaconWithPages(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name bindBeaconWithPages\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'bindBeaconWithPages', function (options, callback) {\n  var url = this.endpoint + '/shakearound/device/bindpage?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 查询设备与页面的关联关系\n * 接口说明:\n * 查询设备与页面的关联关系。提供两种查询方式，可指定页面ID分页查询该页面所关联的所有的设备信息；\n * 也可根据设备ID或完整的UUID、Major、Minor查询该设备所关联的所有页面信息。\n * 详情请参见：http://mp.weixin.qq.com/wiki/6/c449687e71510db19564f2d2d526b6ea.html\n * Options:\n * 1) 当查询指定设备所关联的页面时：\n * ```\n * {\n *  \"type\": 1,\n *  \"device_identifier\": {\n *    // 设备编号，若填了UUID、major、minor，则可不填设备编号，若二者都填，则以设备编号为优先\n *    \"device_id\":10011,\n *    \"uuid\":\"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\",\n *    \"major\":1002,\n *    \"minor\":1223\n *  }\n * }\n * ```\n * 2) 当查询页面所关联的设备时：\n * {\n *  \"type\": 2,\n *  \"page_id\": 11101,\n *  \"begin\": 0,\n *  \"count\": 3\n * }\n * Examples:\n * ```\n * api.searchBeaconPageRelation(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *  \"data\": {\n *    \"relations\": [\n *      {\n *        \"device_id\": 797994,\n *        \"major\": 10001,\n *        \"minor\": 10023,\n *        \"page_id\": 50054,\n *        \"uuid\": \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\"\n *      },\n *      {\n *        \"device_id\": 797994,\n *        \"major\": 10001,\n *        \"minor\": 10023,\n *        \"page_id\": 50055,\n *        \"uuid\": \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\"\n *      }\n *    ],\n *    \"total_count\": 2\n *  },\n *  \"errcode\": 0,\n *  \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name searchBeaconPageRelation\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'searchBeaconPageRelation', function (options, callback) {\n  var url = this.endpoint + '/shakearound/relation/search?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 获取摇周边的设备及用户信息\n * 接口说明:\n * 获取设备信息，包括UUID、major、minor，以及距离、openID等信息。\n * 详情请参见：http://mp.weixin.qq.com/wiki/3/34904a5db3d0ec7bb5306335b8da1faf.html\n * Ticket:\n * ```\n * {\n *   \"ticket\":”6ab3d8465166598a5f4e8c1b44f44645”\n * }\n * ```\n * Examples:\n * ```\n * api.getShakeInfo(ticket, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name getShakeInfo\n * @param {Object} ticket 摇周边业务的ticket，可在摇到的URL中得到，ticket生效时间为30分钟\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getShakeInfo', function (ticket, callback) {\n  var data = {\n    ticket: ticket\n  };\n\n  var url = this.endpoint + '/shakearound/user/getshakeinfo?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 数据统计: 以设备为维度的数据统计接口\n * 接口说明:\n * 查询单个设备进行摇周边操作的人数、次数，点击摇周边消息的人数、次数；查询的最长时间跨度为30天。\n * 详情请参见：http://mp.weixin.qq.com/wiki/0/8a24bcacad40fe7ee98d1573cb8a6764.html\n * Options:\n * ```\n * {\n *   \"device_identifier\": {\n *     \"device_id\":10011,  //设备编号，若填了UUID、major、minor，则可不填设备编号，若二者都填，则以设备编号为优先\n *     \"uuid\":\"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\", //UUID、major、minor，三个信息需填写完整，若填了设备编号，则可不填此信息。\n *     \"major\":1002,\n *     \"minor\":1223\n *   },\n *   \"begin_date\": 12313123311,\n *   \"end_date\": 123123131231\n * }\n * ```\n * Examples:\n * ```\n * api.getDeviceStatistics(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *     {\n *       \"click_pv\": 0,\n *       \"click_uv\": 0,\n *       \"ftime\": 1425052800,\n *       \"shake_pv\": 0,\n *       \"shake_uv\": 0\n *     },\n *     {\n *       \"click_pv\": 0,\n *       \"click_uv\": 0,\n *       \"ftime\": 1425139200,\n *       \"shake_pv\": 0,\n *       \"shake_uv\": 0\n *     }\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name getDeviceStatistics\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getDeviceStatistics', function (options, callback) {\n  var url = this.endpoint + '/shakearound/statistics/device?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 数据统计: 批量查询设备统计数据接口\n * 接口说明:\n * 查询指定时间商家帐号下的每个设备进行摇周边操作的人数、次数，点击摇周边消息的人数、次数。\n * 只能查询最近90天内的数据，且一次只能查询一天。\n * 此接口无法获取当天的数据，最早只能获取前一天的数据。由于系统在凌晨处理前一天的数据，\n * 太早调用此接口可能获取不到数据，建议在早上8：00之后调用此接口。\n * 注意：对于摇周边人数、摇周边次数、点击摇周边消息的人数、点击摇周边消息的次数都为0的设备，不在结果列表中返回。\n * 详情请参见：<http://mp.weixin.qq.com/wiki/1/e0b035c89b0a9c95a8210204087fec69.html>\n * Options:\n * ```\n * {\n *   date: 1438704000,\n *   page_index: 1\n * }\n * ```\n * Examples:\n * ```\n * api.getDeviceStatisticsList(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n * \"data\": {\n *   \"devices\": [\n *     {\n *       \"device_id\": 10097,\n *       \"major\": 10001,\n *       \"minor\": 12102,\n *       \"uuid\": \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\"\n *       \"shake_pv\": 1\n *       \"shake_uv\": 2\n *       \"click_pv\": 3\n *       \"click_uv\":4\n *     },\n *     {\n *       \"device_id\": 10097,\n *       \"major\": 10001,\n *       \"minor\": 12102,\n *       \"uuid\": \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\"\n *       \"shake_pv\":1\n *       \"shake_uv\":2\n *       \"click_pv\":3\n *       \"click_uv\":4\n *     }\n *    ],\n *   },\n *   \"date\":1435075200\n *   \"total_count\": 151\n *   \"page_index\":1\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name getDeviceStatisticsList\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getDeviceStatisticsList', function (options, callback) {\n  var url = this.endpoint + '/shakearound/statistics/devicelist?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 数据统计: 以页面为维度的数据统计接口\n * 接口说明:\n * 查询单个页面通过摇周边摇出来的人数、次数，点击摇周边页面的人数、次数；查询的最长时间跨度为30天。\n * 详情请参见：http://mp.weixin.qq.com/wiki/0/8a24bcacad40fe7ee98d1573cb8a6764.html\n * Options:\n * ```\n * {\n *   \"page_id\": 12345,\n *   \"begin_date\": 12313123311,\n *   \"end_date\": 123123131231\n * }\n * ```\n * Examples:\n * ```\n * api.getPageStatistics(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *     {\n *       \"click_pv\": 0,\n *       \"click_uv\": 0,\n *       \"ftime\": 1425052800,\n *       \"shake_pv\": 0,\n *       \"shake_uv\": 0\n *     },\n *     {\n *       \"click_pv\": 0,\n *       \"click_uv\": 0,\n *       \"ftime\": 1425139200,\n *       \"shake_pv\": 0,\n *       \"shake_uv\": 0\n *     }\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name getPageStatistics\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getPageStatistics', function (options, callback) {\n  var url = this.endpoint + '/shakearound/statistics/page?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 数据统计: 批量查询页面统计数据接口\n * 接口说明:\n * 查询指定时间商家帐号下的每个页面进行摇周边操作的人数、次数，点击摇周边消息的人数、次数。\n * 只能查询最近90天内的数据，且一次只能查询一天。\n * 此接口无法获取当天的数据，最早只能获取前一天的数据。由于系统在凌晨处理前一天的数据，\n * 太早调用此接口可能获取不到数据，建议在早上8：00之后调用此接口。\n * 注意：对于摇周边人数、摇周边次数、点击摇周边消息的人数、点击摇周边消息的次数都为0的设备，不在结果列表中返回。\n * 详情请参见：<http://mp.weixin.qq.com/wiki/1/e0b035c89b0a9c95a8210204087fec69.html>\n * Options:\n * ```\n * {\n *   date: 1425139200,\n *   page_index: 1\n * }\n * ```\n * Examples:\n * ```\n * api.getPageStatisticsList(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n * \"data\": {\n *   \"pages\": [\n *     {\n *       \"page_id\": 1,\n *       \"shake_pv\": 1,\n *       \"shake_uv\": 2,\n *       \"click_pv\": 3,\n *       \"click_uv\":4\n *     },\n *     {\n *       \"page_id\": 2,\n *       \"shake_pv\":1,\n *       \"shake_uv\":2,\n *       \"click_pv\":3,\n *       \"click_uv\":4\n *     }\n *    ],\n *   },\n *   \"date\":1435075200\n *   \"total_count\": 151\n *   \"page_index\":1\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name getPageStatisticsList\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getPageStatisticsList', function (options, callback) {\n  var url = this.endpoint + '/shakearound/statistics/pagelist?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 查询分组列表\n * 接口说明：\n * 查询账号下所有的分组。\n * options:\n * {\n *   begin: 0,\n *   count: 10\n * }\n * Examples:\n * ```\n * api.listBeaconGroup(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *     \"total_count\": 100,\n *     \"groups\":[\n *       {\n *          \"group_id\" : 123,\n *          \"group_name\" : \"test1\"\n *       },\n *       {\n *          \"group_id\" : 124,\n *          \"group_name\" : \"test2\"\n *       }\n *     ]\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name listBeaconGroup\n * @param {String} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'listBeaconGroup', function (options, callback) {\n  var url = this.endpoint + '/shakearound/device/group/getlist?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 查询分组详情\n * 接口说明：\n * 查询分组详情，包括分组名，分组id，分组里的设备列表\n * options:\n * {\n  *  group_id: 123,\n *   begin: 0,\n *   count: 10\n * }\n * Examples:\n * ```\n * api.queryGroupBeacons(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *     \"group_id\" : 123,\n *     \"group_name\" : \"test\",\n *     \"total_count\": 100,\n *     \"devices\":[\n *       {\n *          \"device_id\" : 123456,\n *          \"uuid\" : \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\",\n *          \"major\" : 10001,\n *          \"minor\" : 10001,\n *          \"comment\" : \"test device1\",\n *          \"poi_id\" : 12345,\n *       },\n *       {\n *          \"device_id\" : 123457,\n *          \"uuid\" : \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\",\n *          \"major\" : 10001,\n *          \"minor\" : 10002,\n *          \"comment\" : \"test device2\",\n *          \"poi_id\" : 12345,\n *       }\n *     ]\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name queryGroupBeacons\n * @param {String} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'queryGroupBeacons', function (options, callback) {\n  var url = this.endpoint + '/shakearound/device/group/getdetail?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 新增分组\n * 接口说明：\n * 新建设备分组，每个帐号下最多只有100个分组。\n * group:\n * {\n *   group_name: 'test'\n * }\n * Examples:\n * ```\n * api.addBeaconGroup(group, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *     \"group_id\": 123,\n *     \"group_name\": 'test'\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name addBeaconGroup\n * @param {Object} group 分组信息\n * @param {Function} callback 回调函数\n */\nmake(exports, 'addBeaconGroup', function (group, callback) {\n  var url = this.endpoint + '/shakearound/device/group/add?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(group), wrapper(callback));\n});\n\n/**\n * 编辑分组信息\n * 接口说明：\n * 编辑设备分组信息，目前只能修改分组名。\n * group:\n * {\n *   group_id: 123,\n *   group_name: 'test update'\n * }\n * Examples:\n * ```\n * api.updateBeaconGroup(group, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *     \"group_id\": 123,\n *     \"group_name\": 'test update'\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name updateBeaconGroup\n * @param {Object} group 分组信息\n * @param {Function} callback 回调函数\n */\nmake(exports, 'updateBeaconGroup', function (group, callback) {\n  var url = this.endpoint + '/shakearound/device/group/update?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(group), wrapper(callback));\n});\n\n/**\n * 删除分组信息\n * 接口说明：\n * 删除设备分组，若分组中还存在设备，则不能删除成功。需把设备移除以后，才能删除。\n * group:\n * {\n *   group_id: 123\n * }\n * Examples:\n * ```\n * api.deleteBeaconGroup(group_id, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name deleteBeaconGroup\n * @param {Object} group 分组信息\n * @param {Function} callback 回调函数\n */\nmake(exports, 'deleteBeaconGroup', function (group_id, callback) {\n  var data = {\n    group_id: group_id\n  };\n\n  var url = this.endpoint + '/shakearound/device/group/delete?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 添加设备到分组\n * 接口说明：\n * 添加设备到分组，每个分组能够持有的设备上限为10000，并且每次添加操作的添加上限为1000。只有在摇周边申请的设备才能添加到分组。\n * Options:\n * ```\n * {\n *  \"group_id\": 123,\n *  \"device_identifier\": [\n *    {\n *      // 设备编号，若填了UUID、major、minor，则可不填设备编号，若二者都填，则以设备编号为优先\n *      \"device_id\": 10011,\n *      \"uuid\": \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\",\n *      \"major\": 1002,\n *      \"minor\": 1223\n *    }\n *  ]\n * }\n * ```\n * Examples:\n * ```\n * api.addGroupBeacons(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name addGroupBeacons\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'addGroupBeacons', function (options, callback) {\n  var url = this.endpoint + '/shakearound/device/group/adddevice?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 从分组中移除设备\n * 接口说明：\n * 从分组中移除设备，每次删除操作的上限为1000。\n * Options:\n * ```\n * {\n *  \"group_id\": 123,\n *  \"device_identifier\": [\n *    {\n *      // 设备编号，若填了UUID、major、minor，则可不填设备编号，若二者都填，则以设备编号为优先\n *      \"device_id\": 10011,\n *      \"uuid\": \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\",\n *      \"major\": 1002,\n *      \"minor\": 1223\n *    }\n *  ]\n * }\n * ```\n * Examples:\n * ```\n * api.deleteGroupBeacons(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"data\" : {\n *   },\n *   \"errcode\": 0,\n *   \"errmsg\": \"success.\"\n * }\n * ```\n *\n * @name deleteGroupBeacons\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'deleteGroupBeacons', function (options, callback) {\n  var url = this.endpoint + '/shakearound/device/group/deletedevice?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 创建红包活动\n * 接口说明:\n * 创建红包活动，设置红包活动有效期，红包活动开关等基本信息，返回活动id。\n * 详情请参见：http://mp.weixin.qq.com/wiki/12/9738788d171724b080b52f6e41490cb4.html\n * Options:\n * ```\n * {\n *   \"use_template\": 1,\n *   \"logo_url\": \"https://lodejs.org/images/qr.jpg\"\n * }\n * ```\n * Body:\n * ```\n * {\n *   \"title\": \"抽奖活动名称\",\n *   \"desc\": \"抽奖活动描述\",\n *   \"onoff\": 1,\n *   \"begin_time\": 1428854400,\n *   \"expire_time\": 1428940800,\n *   \"sponsor_appid\": \"wx476f028272e53c62\",\n *   \"total\": 10,\n *   \"jump_url\": \"https://lodejs.org\",\n *   \"key\": \"u5pPq38tQP97yGn8iZxbBsfWvbn37poP\"\n * }\n * ```\n * Examples:\n * ```\n * api.addLotteryInfo(options, body, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"errcode\": 0,\n *   \"errmsg\": \"\",\n *   \"lottery_id\": \"5794560\",\n *   \"page_id\": 1,\n * }\n * ```\n *\n * @name addLotteryInfo\n * @param {Object} options 请求参数\n * @param {Object} body JSON格式的结构体\n * @param {Function} callback 回调函数\n */\nmake(exports, 'addLotteryInfo', function (options, body, callback) {\n  var url = this.endpoint + '/shakearound/lottery/addlotteryinfo?&use_template=' + options.use_template + '&logo_url=' + options.logo_url + '&access_token=' + this.token.accessToken;\n  this.request(url, postJSON(body), wrapper(callback));\n});\n\n/**\n * 录入红包信息\n * 接口说明:\n * 在调用\"创建红包活动\"接口之后，调用此接口录入红包信息。\n * 详情请参见：http://mp.weixin.qq.com/wiki/12/9738788d171724b080b52f6e41490cb4.html\n * Options:\n * ```\n * {\n *   \"lottery_id\": \"5794560\",\n *   \"mchid\": \"1234567890\",\n *   \"sponsor_appid\": \"wx476f028272e53c62\"\n *   \"prize_info_list\": [{\n *     \"ticket\": \"v1|ZiPs2l0hpMBp3uwGI1rwp45vOdz/V/zQ/00jP9MeWT+e47/q1FJjwCIP34frSjzOxAEzJ7k2CtAg1pmcShvkChBWqbThxPm6MBuzceoHtj79iHuHaEn0WAO+j4sXnXnbGswFOlDYWg1ngvrRYnCY3g==\",\n *   }]\n * }\n * ```\n * Examples:\n * ```\n * api.setPrizeBucket(options, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"errcode\": 0,\n *   \"errmsg\": \"\",\n *   \"success_num\": 1,\n *   \"repeat_ticket_list\": [{\n *     \"ticket\": \"v1|ZiPs2l0hpMBp3uwGI1rwp45vOdz/V/zQ/00jP9MeWT+e47/q1FJjwCIP34frSjzOxAEzJ7k2CtAg1pmcShvkChBWqbThxPm6MBuzceoHtj79iHuHaEn0WAO+j4sXnXnbGswFOlDYWg1ngvrRYnCY3g==\",\n *   }]\n * }\n * ```\n *\n * @name setPrizeBucket\n * @param {Object} options 请求参数\n * @param {Function} callback 回调函数\n */\nmake(exports, 'setPrizeBucket', function (options, callback) {\n  var url = this.endpoint + '/shakearound/lottery/setprizebucket?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(options), wrapper(callback));\n});\n\n/**\n * 设置红包活动抽奖开关\n * 接口说明:\n * 开发者实时控制红包活动抽奖的开启和关闭。\n * 详情请参见：http://mp.weixin.qq.com/wiki/12/9738788d171724b080b52f6e41490cb4.html\n * Examples:\n * ```\n * api.setLotterySwitch(lotteryId, onoff, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"errcode\": 0,\n *   \"errmsg\": \"\"\n * }\n * ```\n *\n * @name setLotterySwitch\n * @param {String} lotteryId 红包抽奖id\n * @param {Number} onoff 活动抽奖开关，0：关闭，1：开启\n * @param {Function} callback 回调函数\n */\nmake(exports, 'setLotterySwitch', function (lotteryId, onoff, callback) {\n  var url = this.endpoint + '/shakearound/lottery/setlotteryswitch?lottery_id=' + lotteryId + '&onoff=' + onoff + '&access_token=' + this.token.accessToken;\n  this.request(url, wrapper(callback));\n});\n\n/**\n * 获取红包JSAPI参数\n * 接口说明:\n * 用于在第三方页面中，通过调用JSAPI来触发用户抽红包的操作。\n * 详情请参见：http://mp.weixin.qq.com/wiki/12/9738788d171724b080b52f6e41490cb4.html\n * Examples:\n * ```\n * api.getShakehbConfig(openid, lotteryId, key);\n * ```\n * Return:\n * ```\n * {\n *   \"openid\": \"o-hVKuNknQQBZFDlbE8eibQzIX3o\",\n *   \"lottery_id\": \"5794560\"\n *   \"noncestr\": \"5K8264ILTKCH16CQ2502SI8ZNMTM67VS\"\n *   \"sign\": \"D6F2078841D003C09BF5263EDA3CD5F9\"\n * }\n * ```\n *\n * @name getShakehbConfig\n * @param {String} openid 用户openid\n * @param {String} lotteryId 红包抽奖id\n * @param {String} key “创建红包活动”接口设置的key\n */\nexports.getShakehbConfig = function (openid, lotteryId, key) {\n  var params = {\n    openid: openid,\n    lottery_id: lotteryId,\n    noncestr: Math.random().toString(36).substr(2, 15)\n  };\n\n  var query = Object.keys(params).sort().map(function(key) {\n    return key + '=' + params[key];\n  }).join('&');\n\n  query += '&key=' + key;\n  params.sign = crypto.createHash('md5').update(query).digest('hex').toUpperCase();\n\n  return params;\n};\n","/home/travis/build/npmtest/node-npmtest-wechat-api/node_modules/wechat-api/lib/api_poi.js":"'use strict';\n\n// 微信门店接口文档请参考：http://mp.weixin.qq.com/wiki/16/8f182af4d8dcea02c56506306bdb2f4c.html\nvar util = require('./util');\nvar wrapper = util.wrapper;\nvar postJSON = util.postJSON;\nvar make = util.make;\n\n/**\n * 创建门店\n *\n * Tips:\n * - 创建门店接口调用成功后不会实时返回poi_id。\n * - 成功创建后，门店信息会经过审核，审核通过后方可使用并获取poi_id。\n * - 图片photo_url必须为上传图片接口(api.uploadLogo，参见卡券接口)生成的url。\n * - 门店类目categories请参考微信公众号后台的门店管理部分。\n *\n * Poi:\n * ```\n * {\n *   \"sid\": \"5794560\",\n *   \"business_name\": \"肯打鸡\",\n *   \"branch_name\": \"东方路店\",\n *   \"province\": \"上海市\",\n *   \"city\": \"上海市\",\n *   \"district\": \"浦东新区\",\n *   \"address\": \"东方路88号\",\n *   \"telephone\": \"021-5794560\",\n *   \"categories\": [\"美食,快餐小吃\"],\n *   \"offset_type\": 1,\n *   \"longitude\": 125.5794560,\n *   \"latitude\": 45.5794560,\n *   \"photo_list\": [{\n *     \"photo_url\": \"https://5794560.qq.com/1\"\n *   }, {\n *     \"photo_url\": \"https://5794560.qq.com/2\"\n *   }],\n *   \"recommend\": \"脉娜鸡腿堡套餐,脉乐鸡,全家捅\",\n *   \"special\": \"免费WIFE,外卖服务\",\n *   \"introduction\": \"肯打鸡是全球大型跨国连锁餐厅,2015年创立于米国,在世界上大约拥有3 亿间分店,主要售卖肯打鸡等垃圾食品\",\n *   \"open_time\": \"10:00-18:00\",\n *   \"avg_price\": 88\n * }\n * ```\n * Examples:\n * ```\n * api.addPoi(poi, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\":0,\"errmsg\":\"ok\"}\n * ```\n * @name addPoi\n * @param {Object} poi 门店对象\n * @param {Function} callback 回调函数\n */\nmake(exports, 'addPoi', function (poi, callback) {\n  var data = {\n    business: {\n      base_info: poi\n    }\n  };\n  var url = this.endpoint + '/cgi-bin/poi/addpoi?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 获取门店信息\n *\n * Examples:\n * ```\n * api.getPoi(POI_ID, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"sid\": \"5794560\",\n *   \"business_name\": \"肯打鸡\",\n *   \"branch_name\": \"东方路店\",\n *   \"province\": \"上海市\",\n *   \"city\": \"上海市\",\n *   \"district\": \"浦东新区\",\n *   \"address\": \"东方路88号\",\n *   \"telephone\": \"021-5794560\",\n *   \"categories\": [\"美食,快餐小吃\"],\n *   \"offset_type\": 1,\n *   \"longitude\": 125.5794560,\n *   \"latitude\": 45.5794560,\n *   \"photo_list\": [{\n *     \"photo_url\": \"https://5794560.qq.com/1\"\n *   }, {\n *     \"photo_url\": \"https://5794560.qq.com/2\"\n *   }],\n *   \"recommend\": \"脉娜鸡腿堡套餐,脉乐鸡,全家捅\",\n *   \"special\": \"免费WIFE,外卖服务\",\n *   \"introduction\": \"肯打鸡是全球大型跨国连锁餐厅,2015年创立于米国,在世界上大约拥有3 亿间分店,主要售卖肯打鸡等垃圾食品\",\n *   \"open_time\": \"10:00-18:00\",\n *   \"avg_price\": 88,\n *   \"available_state\": 3,\n *   \"update_status\": 0\n * }\n * ```\n * @name getPoi\n * @param {Number} poiId 门店ID\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getPoi', function (poiId, callback) {\n  var url = this.endpoint + '/cgi-bin/poi/getpoi?access_token=' + this.token.accessToken;\n  var data = {\n    poi_id: poiId\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 获取门店列表\n * Examples:\n * ```\n * api.getPois(0, 20, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\n *   \"errcode\": 0,\n *   \"errmsg\": \"ok\"\n *   \"business_list\": [{\n *     \"base_info\": {\n *       \"sid\": \"100\",\n *       \"poi_id\": \"5794560\",\n *       \"business_name\": \"肯打鸡\",\n *       \"branch_name\": \"东方路店\",\n *       \"address\": \"东方路88号\",\n *       \"available_state\": 3\n *     }\n *   }, {\n *     \"base_info\": {\n *       \"sid\": \"101\",\n *       \"business_name\": \"肯打鸡\",\n *       \"branch_name\": \"西方路店\",\n *       \"address\": \"西方路88号\",\n *       \"available_state\": 4\n *     }\n *   }],\n *   \"total_count\": \"2\",\n * }\n * ```\n * @name getPois\n * @param {Number} begin 开始位置，0即为从第一条开始查询\n * @param {Number} limit 返回数据条数，最大允许50，默认为20\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getPois', function (begin, limit, callback) {\n  var url = this.endpoint + '/cgi-bin/poi/getpoilist?access_token=' + this.token.accessToken;\n  var data = {\n    begin: begin,\n    limit: limit\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 删除门店\n *\n * Tips:\n *\n * - 待审核门店不允许删除\n *\n * Examples:\n * ```\n * api.delPoi(POI_ID, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @name delPoi\n * @param {Number} poiId 门店ID\n * @param {Function} callback 回调函数\n */\nmake(exports, 'delPoi', function (poiId, callback) {\n  var url = this.endpoint + '/cgi-bin/poi/delpoi?access_token=' + this.token.accessToken;\n  var data = {\n    poi_id: poiId\n  };\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 修改门店服务信息\n *\n * Tips:\n *\n * - 待审核门店不允许修改\n *\n * Poi:\n * ```\n * {\n *   \"poi_id\": \"5794560\",\n *   \"telephone\": \"021-5794560\",\n *   \"photo_list\": [{\n *     \"photo_url\": \"https://5794560.qq.com/1\"\n *   }, {\n *     \"photo_url\": \"https://5794560.qq.com/2\"\n *   }],\n *   \"recommend\": \"脉娜鸡腿堡套餐,脉乐鸡,全家捅\",\n *   \"special\": \"免费WIFE,外卖服务\",\n *   \"introduction\": \"肯打鸡是全球大型跨国连锁餐厅,2015年创立于米国,在世界上大约拥有3 亿间分店,主要售卖肯打鸡等垃圾食品\",\n *   \"open_time\": \"10:00-18:00\",\n *   \"avg_price\": 88\n * }\n * ```\n * 特别注意，以上7个字段，若有填写内容则为覆盖更新，若无内容则视为不修改，维持原有内容。\n * photo_list字段为全列表覆盖，若需要增加图片，需将之前图片同样放入list中，在其后增加新增图片。\n *\n * Examples:\n * ```\n * api.updatePoi(poi, callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * Result:\n * ```\n * {\"errcode\":0,\"errmsg\":\"ok\"}\n * ```\n * @name updatePoi\n * @param {Object} poi 门店对象\n * @param {Function} callback 回调函数\n */\nmake(exports, 'updatePoi', function (poi, callback) {\n  var data = {\n    business: {\n      base_info: poi\n    }\n  };\n  var url = this.endpoint + '/cgi-bin/poi/updatepoi?access_token=' + this.token.accessToken;\n  this.request(url, postJSON(data), wrapper(callback));\n});\n\n/**\n * 门店类目表\n *\n * Tips:\n *\n * - 类目名称接口是为商户提供自己门店类型信息的接口。门店类目定位的越规范，能够精准的吸引更多用户，提高曝光率。\n *\n * Examples:\n * ```\n * api.getWXCategory(callback);\n * ```\n * Callback:\n *\n * - `err`, 调用失败时得到的异常\n * - `result`, 调用正常时得到的对象\n *\n * @name getWXCategory\n * @param {Function} callback 回调函数\n */\nmake(exports, 'getWXCategory', function (callback) {\n  var url = this.endpoint + '/cgi-bin/poi/getwxcategory?access_token=' + this.token.accessToken;\n  this.request(url, {dataType: 'json'}, wrapper(callback));\n});\n\n"}